{"version":3,"sources":["components/AppDrawer.js","components/AppHeader.js","components/SceneHeader.js","components/ActionBar.js","components/ContactListHeader.js","components/ContactListItem.js","components/ContactForm.js","components/ContactListBody.js","components/ContactList.js","scenes/Local.js","scenes/Twitter.js","scenes/GitHub.js","ContactApp.js","index.js"],"names":["useStyles","makeStyles","theme","drawer","backgroundImage","color","boxShadow","drawerSemi","width","spacing","overflow","breakpoints","only","drawerOpen","toggleBtn","padding","textAlign","colorWhite","menu","paddingTop","AppDrawer","open","handleMiniDrawerToggle","classes","Drawer","variant","className","clsx","paper","IconButton","onClick","ChevronLeft","ChevronRight","List","icon","name","path","map","tab","index","exact","to","key","ListItem","button","ListItemIcon","ListItemText","primary","useStyle","header","minHeight","Header","handleFullDrawerToggle","Hidden","smUp","Menu","display","alignItems","headerIcon","background","WebkitBackgroundClip","WebkitTextFillColor","fontSize","headerTitle","SceneHeader","Grid","item","md","Box","fontWeight","innerSpacing","searchBar","backgroundColor","borderRadius","searchBarSpacing","down","searchInput","flex","btnWrapper","justifyContent","actionBtn","textTransform","height","margin","minWidth","up","ActionBar","addContact","someSelected","deleteContact","searchQuery","searchContact","container","lg","sm","xs","Paper","elevation","InputBase","placeholder","value","onChange","inputProps","maxLength","Search","Button","smDown","Delete","style","contactListHeader","ContactListHeader","allSelected","deselectAll","selectAll","Checkbox","indeterminate","checked","contact","cursor","basicInfo","avatarWrapper","contactAvatar","contactName","flexDirection","noMargin","editBtn","maxWidth","maxHeight","ContactListItem","selectContact","active","isNewContact","editContact","saveContact","checkContact","useForm","register","handleSubmit","errors","validations","required","message","pattern","minLength","id","avatar","email","onSubmit","data","type","Check","event","stopPropagation","Avatar","src","str","hash","i","length","charCodeAt","colour","toString","substr","stringToColour","split","n","Input","autoFocus","error","undefined","inputRef","FormHelperText","mdUp","fullWidth","defaultProps","isEditing","extendedIcon","marginRight","formWrapper","paddingLeft","contactForm","position","formHeader","paddingBottom","fallbackText","noBottomMargin","marginBottom","saveBtn","formRow","right","backBtn","left","ContactForm","selectedContact","editable","updateContact","deselectContact","field","input","Fab","size","Edit","ArrowBack","defaultValue","disabled","disableUnderline","about","phone","company","address","justify","ContactListBody","contacts","isAdding","Fragment","lgUp","noContacts","ContactList","Local","props","setSelectedContact","state","stillAdding","setState","find","setEditable","updatedContact","findIndex","Object","assign","newContact","push","forEach","filter","target","filteredData","toLowerCase","includes","render","every","some","outerSpacing","mdDown","React","Component","withStyles","Twitter","GitHub","ContactApp","root","Backdrop","backdrop","basename","content","contentPosition","AppHeader","zIndex","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.563ed6e5.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n  NavLink\r\n} from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  makeStyles,\r\n  Drawer,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from '@material-ui/core';\r\nimport {\r\n  ChevronLeft,\r\n  ChevronRight,\r\n  PermIdentity as Local,\r\n  GitHub,\r\n  Twitter,\r\n} from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  drawer: {\r\n    backgroundImage: 'linear-gradient(#fa8569, #ff4b6e)',\r\n    color: '#ffffffbf',\r\n    boxShadow: '0px 0px 7px darkgrey',\r\n  },\r\n  drawerSemi: {\r\n    width: theme.spacing(7.5) + 1,\r\n    overflow: 'hidden',\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      width: '0px'\r\n    }\r\n  },\r\n  drawerOpen: {\r\n    width: theme.spacing(20) + 1,\r\n  },\r\n  toggleBtn: {\r\n    padding: 4,\r\n    textAlign: 'right',\r\n  },\r\n  colorWhite: {\r\n    color: '#ffffffbf',\r\n  },\r\n  menu: {\r\n    paddingTop: theme.spacing(4) + 1,\r\n  },\r\n}));\r\n\r\nconst AppDrawer = ({ open, handleMiniDrawerToggle }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      className={clsx({\r\n        [classes.drawerOpen]: open === \"open\",\r\n        [classes.drawerSemi]: open === \"semi\",\r\n      })}\r\n      classes={{\r\n        paper: clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open === \"open\",\r\n          [classes.drawerSemi]: open === \"semi\",\r\n        })\r\n      }}\r\n    >\r\n      <div className={classes.toggleBtn}>\r\n        <IconButton color=\"inherit\" onClick={handleMiniDrawerToggle}>\r\n          {open === \"open\" ? <ChevronLeft /> : <ChevronRight />}\r\n        </IconButton>\r\n      </div>\r\n      <List className={classes.menu}>\r\n        {\r\n          [\r\n            { icon: <Local />, name: \"Local\", path: \"/\" },\r\n            { icon: <Twitter />, name: \"Twitter\", path: \"/twitter\" },\r\n            { icon: <GitHub />, name: \"GitHub\", path: \"/github\" }\r\n          ].map((tab, index) =>\r\n            <NavLink exact to={tab.path} key={tab.name}>\r\n              <ListItem button key={tab.name} className=\"menuItem\" >\r\n                <ListItemIcon className={classes.colorWhite}>{tab.icon}</ListItemIcon>\r\n                <ListItemText primary={tab.name} />\r\n              </ListItem>\r\n            </NavLink>\r\n          )\r\n        }\r\n      </List>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default AppDrawer;","import React from 'react';\nimport {\n  makeStyles,\n  IconButton,\n  Hidden,\n} from '@material-ui/core';\nimport {\n  Menu\n} from '@material-ui/icons';\n\nconst useStyle = makeStyles(theme => ({\n  header: {\n    minHeight: 50,\n    width: 100 + '%',\n    boxShadow: '0px 0px 5px darkgrey'\n  }\n}));\n\nconst Header = ({ handleFullDrawerToggle }) => {\n\n  const classes = useStyle();\n\n  return (\n    <header className={classes.header}>\n      <Hidden smUp>\n        <IconButton onClick={handleFullDrawerToggle}>\n          <Menu />\n        </IconButton>\n      </Hidden>\n    </header>\n  );\n};\n\nexport default Header;","import React from 'react';\nimport {\n  makeStyles,\n  Grid,\n  Box\n} from '@material-ui/core';\n\nconst useStyle = makeStyles(theme => ({\n  header: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  headerIcon: {\n    background: 'linear-gradient(#fa8569, #ff4b6e)',\n    WebkitBackgroundClip: 'text',\n    WebkitTextFillColor: 'transparent',\n    color: '#ffffffbf',\n    fontSize: 34\n  },\n  headerTitle: {\n    padding: '0px 15px'\n  }\n}));\n\nconst SceneHeader = () => {\n  const classes = useStyle();\n\n  return (\n    <Grid item md={12} className={classes.header}>\n      <Box className={`fas fa-address-book fa-flip-horizontal ${classes.headerIcon}`} />\n      <Box className={classes.headerTitle}>\n        <Box fontWeight={500} fontSize={28}>Contacts</Box>\n        <Box fontSize={12}>Welcome to FirstCRM Contact page</Box>\n      </Box>\n    </Grid>\n  );\n};\n\nexport default SceneHeader;","import React from 'react';\nimport {\n  makeStyles,\n  Grid,\n  Paper,\n  InputBase,\n  Button,\n  Hidden,\n} from '@material-ui/core';\nimport {\n  Search,\n  Delete,\n} from '@material-ui/icons';\n\nconst useStyle = makeStyles(theme => ({\n  innerSpacing: {\n    padding: '40px 50px',\n    [theme.breakpoints.only(\"xs\")]: {\n      padding: '15px 0px',\n    },\n  },\n  searchBar: {\n    display: 'flex',\n    alignItems: 'center',\n    backgroundColor: '#f1f1f1',\n    borderRadius: 50,\n    padding: '6px 16px',\n  },\n  searchBarSpacing: {\n    padding: '50px 0px',\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: '30px 0px',\n    },\n  },\n  searchInput: {\n    flex: 1,\n    fontSize: 14,\n  },\n  btnWrapper: {\n    padding: '50px 20px',\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: '30px 10px',\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      display: 'flex',\n      justifyContent: 'space-around',\n      padding: '0px 10px 30px 10px',\n    },\n  },\n  actionBtn: {\n    background: 'linear-gradient(to right, #fa8569, #ff4b6e)',\n    color: '#ffffffbf',\n    textTransform: 'none',\n    height: '100%',\n    margin: '0px 2px',\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: '0px 6px',\n      minWidth: '48px',\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      minWidth: '90px',\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      minWidth: '126px',\n    },\n  },\n}));\n\nconst ActionBar = ({ addContact, someSelected, deleteContact, searchQuery, searchContact }) => {\n  const classes = useStyle();\n\n  return (\n    <Grid container item md={12}>\n      <Grid item lg={4} md={6} sm={8} xs={12} className={classes.searchBarSpacing}>\n        <Paper elevation={0} className={classes.searchBar}>\n          <InputBase\n            className={classes.searchInput}\n            placeholder=\"Search contacts\"\n            value={searchQuery}\n            onChange={searchContact}\n            inputProps={{ maxLength: 40 }}\n          />\n          <Search />\n        </Paper>\n      </Grid>\n      <Grid item lg={4} md={6} sm={4} xs={12} className={classes.btnWrapper}>\n        <Button variant=\"contained\" className={classes.actionBtn} onClick={addContact}>\n          + <Hidden only=\"sm\">Add<Hidden smDown> Contact</Hidden></Hidden>\n        </Button>\n        {\n          someSelected &&\n          <Button variant=\"contained\" className={classes.actionBtn} onClick={deleteContact}>\n            <Delete style={{ fontSize: 16 }} /> <Hidden only=\"sm\">Delete</Hidden>\n          </Button>\n        }\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ActionBar;","import React from 'react';\nimport {\n  makeStyles,\n  Grid,\n  Checkbox,\n  Hidden,\n} from '@material-ui/core';\n\nconst useStyle = makeStyles(theme => ({\n  contactListHeader: {\n    backgroundColor: '#f1f1f1',\n    padding: '5px 10px',\n  }\n}));\n\nconst ContactListHeader = ({ someSelected, allSelected, deselectAll, selectAll }) => {\n  const classes = useStyle();\n\n  return (\n    <Grid container className={classes.contactListHeader}>\n      <Grid item container xs={12} style={{ alignItems: 'center' }}>\n        <Grid item md={1} xs={2} sm={2}>\n          <Checkbox\n            onClick={() => allSelected || someSelected ? deselectAll() : selectAll()}\n            color=\"primary\"\n            indeterminate={someSelected && !allSelected}\n            checked={allSelected || someSelected}\n          />\n        </Grid>\n        <Grid item md={5} xs={10} sm={9}>Name</Grid>\n        <Hidden smDown>\n          <Grid item md={6}>Email</Grid>\n        </Hidden>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ContactListHeader;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport clsx from \"clsx\";\r\nimport {\r\n  Grid,\r\n  Checkbox,\r\n  Box,\r\n  Avatar,\r\n  Button,\r\n  makeStyles,\r\n  Hidden,\r\n  Input,\r\n  FormHelperText,\r\n} from '@material-ui/core';\r\nimport {\r\n  Check,\r\n} from '@material-ui/icons';\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n  contact: {\r\n    margin: '10px 0px',\r\n    padding: '0px 10px',\r\n    '&:hover,&.active': {\r\n      backgroundColor: '#e8ecef',\r\n      cursor: 'pointer',\r\n    }\r\n  },\r\n  basicInfo: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  avatarWrapper: {\r\n    padding: '10px 10px 10px 0px',\r\n  },\r\n  contactAvatar: {\r\n    height: '50px',\r\n    width: '50px',\r\n  },\r\n  contactName: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n  },\r\n  noMargin: {\r\n    margin: 0,\r\n  },\r\n  editBtn: {\r\n    background: 'linear-gradient(to right, #fa8569, #ff4b6e)',\r\n    color: '#ffffffbf',\r\n    padding: 0,\r\n    maxWidth: 30,\r\n    minWidth: 30,\r\n    maxHeight: 30,\r\n    minHeight: 30,\r\n    boxShadow: '1px 1px 2px grey',\r\n  },\r\n}));\r\n\r\nconst ContactListItem = ({ contact, selectContact, active, editContact, isNewContact, saveContact, checkContact }) => {\r\n  const classes = useStyle();\r\n\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  const validations = {\r\n    name: {\r\n      required: {\r\n        value: true,\r\n        message: \"This field is required\"\r\n      },\r\n      pattern: {\r\n        value: /[^\\s]+/,\r\n        message: \"Enter valid name\"\r\n      },\r\n      minLength: {\r\n        value: 2,\r\n        message: \"Enter valid name\",\r\n      },\r\n      maxLength: {\r\n        value: 40,\r\n        message: \"Enter valid name\",\r\n      },\r\n    },\r\n    email: {\r\n      pattern: {\r\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n        message: \"Enter valid email\"\r\n      },\r\n      minLength: {\r\n        value: 2,\r\n        message: \"Enter valid email\",\r\n      },\r\n      maxLength: {\r\n        value: 40,\r\n        message: \"Enter valid email\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const { id, avatar, name, email, checked } = contact;\r\n\r\n  const stringToColour = (str) => {\r\n    var hash = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n    var colour = '#';\r\n    for (i = 0; i < 3; i++) {\r\n      var value = (hash >> (i * 8)) & 0xFF;\r\n      colour += ('00' + value.toString(16)).substr(-2);\r\n    }\r\n\r\n    return colour + 'bf';\r\n  }\r\n\r\n  const onSave = (data) => { saveContact(data); }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSave)}>\r\n      <Grid container\r\n        alignItems=\"center\"\r\n        name=\"contactItem\"\r\n        className={clsx(classes.contact, active && 'active')}\r\n        onClick={() => selectContact(id)}\r\n      >\r\n        <Grid item md={1} xs={2} sm={2}>\r\n          {isNewContact ?\r\n            <Button type=\"submit\" className={classes.editBtn}>\r\n              <Check />\r\n            </Button> :\r\n            <Checkbox\r\n              onClick={(event) => { checkContact(id); event.stopPropagation(); }}\r\n              color=\"primary\"\r\n              checked={checked || false}\r\n            />\r\n          }\r\n        </Grid>\r\n        <Grid item md={5} xs={10} sm={9}>\r\n          <Box className={classes.basicInfo}>\r\n            <Box className={classes.avatarWrapper}>\r\n              <Avatar\r\n                src={avatar}\r\n                className={classes.contactAvatar}\r\n                style={{\r\n                  backgroundColor: stringToColour(name + email)\r\n                }} >\r\n                {\r\n                  isNewContact ?\r\n                    '' :\r\n                    name.split(\" \").map((n) => n[0])\r\n                }\r\n              </Avatar>\r\n            </Box>\r\n            <Box className={classes.contactName}>\r\n              <h3 className={classes.noMargin}>\r\n                {\r\n                  isNewContact ?\r\n                    (\r\n                      <>\r\n                        <Input\r\n                          autoFocus\r\n                          name=\"name\"\r\n                          error={errors.name !== undefined ? true : false}\r\n                          inputRef={register(validations.name)}\r\n                          placeholder=\"John Doe\"\r\n                          onClick={(event) => event.stopPropagation()}\r\n                        />\r\n                        <FormHelperText error>\r\n                          {errors.name ? errors.name.message : ''}\r\n                        </FormHelperText>\r\n                      </>\r\n                    ) :\r\n                    name\r\n                }\r\n              </h3>\r\n              <small>\r\n                <Hidden mdUp>\r\n                  {\r\n                    isNewContact ?\r\n                      (\r\n                        <>\r\n                          <Input\r\n                            fullWidth\r\n                            style={{ fontSize: 10 }}\r\n                            name=\"email\"\r\n                            error={errors.email !== undefined ? true : false}\r\n                            inputRef={register(validations.email)}\r\n                            placeholder=\"john@gmail.com\"\r\n                            onClick={(event) => event.stopPropagation()}\r\n                          />\r\n                          <FormHelperText error>\r\n                            {errors.email ? errors.email.message : ''}\r\n                          </FormHelperText>\r\n                        </>\r\n                      ) :\r\n                      email\r\n                  }\r\n                </Hidden>\r\n              </small>\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n        <Hidden smDown>\r\n          <Grid item md={6}>\r\n            <h4 className={classes.noMargin}>\r\n              {\r\n                isNewContact ?\r\n                  <>\r\n                    <Input\r\n                      name=\"email\"\r\n                      error={errors.email !== undefined ? true : false}\r\n                      inputRef={register(validations.email)}\r\n                      placeholder=\"john@gmail.com\"\r\n                      onClick={(event) => event.stopPropagation()}\r\n                    />\r\n                    <FormHelperText error>\r\n                      {errors.email ? errors.email.message : ''}\r\n                    </FormHelperText>\r\n                  </> :\r\n                  email\r\n              }\r\n            </h4>\r\n          </Grid>\r\n        </Hidden>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  selectContact: PropTypes.func,\r\n  editContact: PropTypes.func,\r\n  isEditing: PropTypes.bool,\r\n}\r\n\r\nContactListItem.defaultProps = {\r\n  selectContact: () => { },\r\n  editContact: () => { },\r\n  isEditing: false,\r\n}\r\n\r\nexport default ContactListItem;","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport {\n  makeStyles,\n  Grid,\n  Box,\n  Avatar,\n  Input,\n  Fab,\n  FormHelperText,\n} from '@material-ui/core';\nimport {\n  Check,\n  Edit,\n  ArrowBack,\n} from '@material-ui/icons';\n\nconst useStyle = makeStyles(theme => ({\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  formWrapper: {\n    paddingLeft: '60px',\n    [theme.breakpoints.down(\"md\")]: {\n      padding: '20px 0px',\n    },\n  },\n  contactForm: {\n    backgroundColor: '#f1f1f1',\n    padding: '30px 40px',\n    width: '100%',\n    position: 'relative',\n    [theme.breakpoints.only(\"sm\")]: {\n      padding: '30px',\n    },\n    [theme.breakpoints.only(\"xs\")]: {\n      padding: '20px',\n    },\n  },\n  formHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    textAlign: 'center',\n    flexDirection: 'column',\n    paddingBottom: 40,\n    [theme.breakpoints.only(\"xs\")]: {\n      paddingBottom: 20,\n    }\n  },\n  avatar: {\n    height: '80px',\n    width: '80px',\n  },\n  fallbackText: {\n    fontSize: 28,\n  },\n  noBottomMargin: {\n    marginBottom: 0,\n  },\n  saveBtn: {\n    background: 'linear-gradient(to right, #fa8569, #ff4b6e)',\n    color: '#ffffffbf',\n  },\n  formRow: {\n    alignItems: \"baseline\",\n    padding: '10px 0px',\n    [theme.breakpoints.only(\"xs\")]: {\n      padding: '10px 0px',\n    }\n  },\n  editBtn: {\n    background: 'linear-gradient(to right, #fa8569, #ff4b6e)',\n    color: '#ffffffbf',\n    position: 'absolute',\n    right: 30,\n    [theme.breakpoints.only(\"xs\")]: {\n      right: 20,\n    }\n  },\n  backBtn: {\n    background: 'linear-gradient(to right, #ffffff, #fffffffb)',\n    position: 'absolute',\n    color: '#000000fb',\n    left: 30,\n    [theme.breakpoints.only(\"xs\")]: {\n      left: 20,\n    }\n  }\n}));\n\nconst ContactForm = ({ selectedContact, editable, updateContact, editContact, deselectContact }) => {\n\n  const classes = useStyle();\n\n  const { register, handleSubmit, errors } = useForm();\n\n  const validations = {\n    name: {\n      required: {\n        value: true,\n        message: \"This field is required\"\n      },\n      pattern: {\n        value: /[^\\s]+/,\n        message: \"Enter valid name\"\n      },\n      minLength: {\n        value: 2,\n        message: \"Enter valid name\",\n      },\n      maxLength: {\n        value: 40,\n        message: \"Enter valid name\",\n      },\n    },\n    about: {\n      required: {\n        value: true,\n        message: \"This field is required\"\n      },\n      pattern: {\n        value: /[^\\s]+/,\n        message: \"Enter valid about\"\n      },\n      minLength: {\n        value: 10,\n        message: \"Enter valid about\",\n      },\n      maxLength: {\n        value: 50,\n        message: \"Enter valid about\",\n      },\n    },\n    email: {\n      required: {\n        value: true,\n        message: \"This field is required\"\n      },\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n        message: \"Invalid email address\"\n      },\n      maxLength: {\n        value: 60,\n        message: \"Enter valid email\",\n      },\n    },\n    phone: {\n      required: {\n        value: true,\n        message: \"This field is required\"\n      },\n      pattern: {\n        value: /[+][(](\\d{1,5})[)][\\s](\\d{6,10})$/,\n        message: \"Enter valid phone\"\n      },\n    },\n    company: {\n      required: {\n        value: true,\n        message: \"This field is required\"\n      },\n      pattern: {\n        value: /[^\\s]+/,\n        message: \"Enter valid company name\"\n      },\n      minLength: {\n        value: 5,\n        message: \"Enter valid company name\",\n      },\n      maxLength: {\n        value: 40,\n        message: \"Enter valid company name\",\n      },\n    },\n    address: {\n      required: {\n        value: true,\n        message: \"This field is required\"\n      },\n      pattern: {\n        value: /[^\\s]+/,\n        message: \"Enter valid address\"\n      },\n      minLength: {\n        value: 10,\n        message: \"Enter valid address\",\n      },\n      maxLength: {\n        value: 100,\n        message: \"Enter valid address\",\n      },\n    },\n  };\n\n  const onSubmit = (data) => { updateContact(data) }\n\n  const display = (field, input = false) => {\n    return input ? selectedContact[field] : selectedContact[field] === '' || selectedContact[field] === undefined ? 'N/A' : selectedContact[field];\n  };\n\n  return (\n    <Grid item lg={6} xs={12}>\n      <Grid item container md={12} className={classes.formWrapper}>\n        <Box className={classes.contactForm}>\n          {\n            selectedContact.id > 0 &&\n            <>\n              <Fab size=\"small\" className={classes.editBtn} onClick={() => editContact(selectedContact.id)}>\n                <Edit />\n              </Fab>\n              <Fab size=\"small\" className={classes.backBtn} onClick={() => deselectContact(selectedContact.id)}>\n                <ArrowBack />\n              </Fab>\n            </>\n          }\n          <Box className={classes.formHeader}>\n            <Avatar className={classes.avatar} src={selectedContact.avatar}>\n              {display(\"name\").split(\" \").map((n) => n[0])}\n            </Avatar>\n            <h2 className={classes.noBottomMargin}>{display(\"name\")}</h2>\n            <small>{display(\"about\")}</small>\n          </Box>\n          <Grid container>\n            <Grid item container className={classes.formRow}>\n              <Grid item xs={12} sm={3}>\n                Full Name:\n              </Grid>\n              <Grid item xs={12} sm={9}>\n                {\n                  editable ?\n                    <Input\n                      fullWidth\n                      error={errors.name !== undefined}\n                      inputRef={register(validations.name)}\n                      defaultValue={display(\"name\", editable)}\n                      name=\"name\"\n                    /> :\n                    display(\"name\", false)\n                }\n                <FormHelperText error>{errors.name ? errors.name.message : ' '}</FormHelperText>\n              </Grid>\n            </Grid>\n            {\n              editable &&\n              <Grid item container className={classes.formRow}>\n                <Grid item xs={12} sm={3}>\n                  About:\n                  </Grid>\n                <Grid item xs={12} sm={9}>\n                  {\n                    editable ?\n                      <Input\n                        fullWidth\n                        disabled={!editable}\n                        disableUnderline={!editable}\n                        error={errors.about !== undefined}\n                        inputRef={register(validations.about)}\n                        defaultValue={display(\"about\", editable)}\n                        name=\"about\"\n                      /> :\n                      display(\"about\", false)\n                  }\n                  <FormHelperText error>{errors.about ? errors.about.message : ' '}</FormHelperText>\n                </Grid>\n              </Grid>\n            }\n            <Grid item container className={classes.formRow}>\n              <Grid item xs={12} sm={3}>\n                Email:\n              </Grid>\n              <Grid item xs={12} sm={9}>\n                {\n                  editable ?\n                    <Input\n                      fullWidth\n                      disabled={!editable}\n                      disableUnderline={!editable}\n                      error={errors.email !== undefined}\n                      inputRef={register(validations.email)}\n                      defaultValue={display(\"email\", editable)}\n                      name=\"email\"\n                    /> :\n                    display(\"email\", false)\n                }\n                <FormHelperText error>{errors.email ? errors.email.message : ' '}</FormHelperText>\n              </Grid>\n            </Grid>\n            <Grid item container className={classes.formRow}>\n              <Grid item xs={12} sm={3}>\n                Phone:\n              </Grid>\n              <Grid item xs={12} sm={9}>\n                {\n                  editable ?\n                    <Input\n                      fullWidth\n                      disabled={!editable}\n                      disableUnderline={!editable}\n                      error={errors.phone !== undefined}\n                      inputRef={register(validations.phone)}\n                      defaultValue={display(\"phone\", editable)}\n                      name=\"phone\"\n                    /> :\n                    display(\"phone\", false)\n                }\n                <FormHelperText error>{errors.phone ? errors.phone.message : ' '}</FormHelperText>\n              </Grid>\n            </Grid>\n            <Grid item container className={classes.formRow}>\n              <Grid item xs={12} sm={3}>\n                Company:\n              </Grid>\n              <Grid item xs={12} sm={9}>\n                {\n                  editable ?\n                    <Input\n                      fullWidth\n                      disabled={!editable}\n                      disableUnderline={!editable}\n                      error={errors.company !== undefined}\n                      inputRef={register(validations.company)}\n                      defaultValue={display(\"company\", editable)}\n                      name=\"company\"\n                    /> :\n                    display(\"company\", false)\n                }\n                <FormHelperText error>{errors.company ? errors.company.message : ' '}</FormHelperText>\n              </Grid>\n            </Grid>\n            <Grid item container className={classes.formRow}>\n              <Grid item xs={12} sm={3}>\n                Address:\n              </Grid>\n              <Grid item xs={12} sm={9}>\n                {\n                  editable ?\n                    <Input\n                      fullWidth\n                      disabled={!editable}\n                      disableUnderline={!editable}\n                      error={errors.address !== undefined}\n                      inputRef={register(validations.address)}\n                      defaultValue={display(\"address\", editable)}\n                      name=\"address\"\n                    /> :\n                    display(\"address\", false)\n                }\n                <FormHelperText error>{errors.address ? errors.address.message : ' '}</FormHelperText>\n              </Grid>\n            </Grid>\n            {\n              editable &&\n              <Grid item container justify=\"center\">\n                <Fab variant=\"extended\" className={classes.saveBtn} onClick={handleSubmit(onSubmit)}>\n                  <Check className={classes.extendedIcon} />\n                  Save\n                </Fab>\n              </Grid>\n            }\n          </Grid>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default ContactForm;","import React from 'react';\nimport {\n  Hidden,\n} from '@material-ui/core';\nimport ContactListItem from '../components/ContactListItem';\nimport ContactForm from '../components/ContactForm';\n\nconst ContactListBody = ({ contacts, selectedContact, selectContact, editContact, isEditing, updateContact, isAdding, saveContact, checkContact }) => {\n\n  return (\n    <>\n      {\n        contacts.map((contact) => {\n          return (\n            <React.Fragment key={contact.id}>\n              <ContactListItem\n                contact={contact}\n                active={contact.id === selectedContact.id}\n                selectContact={selectContact}\n                editContact={editContact}\n                saveContact={saveContact}\n                checkContact={checkContact}\n              />\n              {\n                contact.id === selectedContact.id &&\n                <Hidden lgUp>\n                  <ContactForm selectedContact={contact} editable={isEditing} editContact={editContact} updateContact={updateContact} />\n                </Hidden>\n              }\n            </React.Fragment>\n          );\n        })\n      }\n\n      {\n        isAdding &&\n        <ContactListItem\n          contact={selectedContact}\n          key={'newContact'}\n          active={true}\n          saveContact={saveContact}\n          isNewContact={isAdding}\n        />\n      }\n    </>\n  );\n};\n\nexport default ContactListBody;","import React from 'react';\nimport ContactListHeader from '../components/ContactListHeader';\nimport ContactListBody from '../components/ContactListBody';\nimport {\n  Grid,\n  makeStyles,\n} from '@material-ui/core';\n\nconst useStyle = makeStyles(theme => ({\n  noContacts: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '40vh'\n  }\n}));\n\nconst ContactList = ({ contacts, selectedContact, selectContact, editContact, isEditing, updateContact, saveContact, isAdding, checkContact, someSelected, allSelected, selectAll, deselectAll }) => {\n\n  const classes = useStyle();\n\n  return (\n    <Grid item lg={6} xs={12}>\n      <ContactListHeader\n        someSelected={someSelected}\n        allSelected={allSelected}\n        selectAll={selectAll}\n        deselectAll={deselectAll}\n      />\n      <ContactListBody\n        contacts={contacts}\n        selectedContact={selectedContact}\n        selectContact={selectContact}\n        editContact={editContact}\n        isEditing={isEditing}\n        updateContact={updateContact}\n        isAdding={isAdding}\n        saveContact={saveContact}\n        checkContact={checkContact}\n      />\n      {\n        contacts.length === 0 &&\n        <h3 className={classes.noContacts}>\n          No Contacts\n        </h3>\n      }\n    </Grid>\n  );\n};\n\nexport default ContactList;","import React from 'react';\r\nimport SceneHeader from '../components/SceneHeader';\r\nimport ActionBar from '../components/ActionBar';\r\nimport ContactList from '../components/ContactList';\r\nimport ContactForm from '../components/ContactForm';\r\nimport {\r\n  Grid,\r\n  withStyles,\r\n  Hidden,\r\n} from '@material-ui/core';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\n\r\nconst styles = theme => ({\r\n  outerSpacing: {\r\n    padding: '50px 60px',\r\n    [theme.breakpoints.only(\"sm\")]: {\r\n      padding: '30px 40px',\r\n    },\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      padding: '20px',\r\n    },\r\n  },\r\n  innerSpacing: {\r\n    padding: '0px 40px',\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      padding: '0px',\r\n    },\r\n  }\r\n});\r\n\r\nlet contacts = [\r\n  {\r\n    \"id\": \"1\",\r\n    \"name\": \"Joey Tribbiani\",\r\n    \"about\": \"Actor\",\r\n    \"email\": \"joeyt@friends.com\",\r\n    \"phone\": \"+(069) 123-6547\",\r\n    \"company\": \"Actor Acadamy\",\r\n    \"address\": \"2738  Liberty Avenue, California\"\r\n  },\r\n  {\r\n    \"id\": \"2\",\r\n    \"name\": \"Rachel Green\",\r\n    \"about\": \"Fashion Designer\",\r\n    \"email\": \"greenrach@friends.com\",\r\n    \"phone\": \"718-896-1555\",\r\n    \"company\": \"Ralph Lauren\",\r\n    \"address\": \"377  Abia Martin Drive, Bethpage, New York\"\r\n  },\r\n  {\r\n    \"id\": \"3\",\r\n    \"name\": \"Ross Geller\",\r\n    \"about\": \"Paleontologist\",\r\n    \"email\": \"rossaurus@friends.com\",\r\n    \"phone\": \"\",\r\n    \"company\": \"Dianosaur Museum\",\r\n    \"address\": \"4437  Plainfield Avenue, HOPKINTON, Massachusetts\"\r\n  },\r\n  {\r\n    \"id\": \"4\",\r\n    \"name\": \"Phoebe Buffay\",\r\n    \"about\": \"Masseuse\",\r\n    \"email\": \"phebes@friends.com\",\r\n    \"phone\": \"802-232-8909\",\r\n    \"company\": \"\",\r\n    \"address\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"5\",\r\n    \"name\": \"Monica Geller\",\r\n    \"about\": \"Chef\",\r\n    \"email\": \"mon@friends.com\",\r\n    \"phone\": \"\",\r\n    \"company\": \"\",\r\n    \"address\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"6\",\r\n    \"name\": \"Chandler Bing\",\r\n    \"about\": \"Copywriter\",\r\n    \"email\": \"mrbing@friends.com\",\r\n    \"phone\": \"\",\r\n    \"company\": \"\",\r\n    \"address\": \"4709  Roosevelt Road, Dodge City, Kansas\"\r\n  },\r\n  {\r\n    \"id\": \"7\",\r\n    \"name\": \"Gunther\",\r\n    \"about\": \"Cafe Owner\",\r\n    \"email\": \"gunther@friends.com\",\r\n    \"phone\": \"330-443-9039\",\r\n    \"company\": \"Central Perk\",\r\n    \"address\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"8\",\r\n    \"name\": \"Jill Green\",\r\n    \"about\": \"Rachel's sister\",\r\n    \"email\": \"jgreen@gmail.com\",\r\n    \"phone\": \"\",\r\n    \"company\": \"\",\r\n    \"address\": \"2035  Nixon Avenue, Kingsport, Tennessee\"\r\n  },\r\n  {\r\n    \"id\": \"9\",\r\n    \"name\": \"Jack Geller\",\r\n    \"about\": \"Ross' father\",\r\n    \"email\": \"jackg@gmail.com\",\r\n    \"phone\": \"908-617-5594\",\r\n    \"company\": \"\",\r\n    \"address\": \"3033  Patterson Road, SPANGLE, Washington\"\r\n  },\r\n];\r\n\r\nclass Local extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: contacts,\r\n      selectedContact: {},\r\n      editable: false,\r\n      isAdding: false,\r\n      searchQuery: '',\r\n    }\r\n  }\r\n\r\n  setSelectedContact = (id) => {\r\n    const { data, isAdding, selectedContact, editable } = this.state;\r\n    const stillAdding = isAdding && id === selectedContact.id;\r\n    this.setState({\r\n      selectedContact: stillAdding ? selectedContact : data.find(contact => contact.id === id),\r\n      isAdding: stillAdding,\r\n      editable: editable && id === selectedContact.id,\r\n    });\r\n  };\r\n\r\n  setEditable = (id) => {\r\n    const { data, selectedContact } = this.state;\r\n    this.setState({\r\n      editable: (id === selectedContact.id || selectedContact.id === undefined),\r\n      selectedContact: data.find(contact => contact.id === id),\r\n      isAdding: false,\r\n    });\r\n  };\r\n\r\n  updateContact = (updatedContact) => {\r\n    var { selectedContact } = this.state;\r\n    var index = contacts.findIndex(contact => contact.id === selectedContact.id);\r\n    contacts[index] = Object.assign({}, contacts[index], updatedContact);\r\n    this.setState({\r\n      data: contacts,\r\n      editable: false,\r\n    });\r\n  };\r\n\r\n  addContact = () => {\r\n    this.setState({\r\n      editable: false,\r\n      isAdding: true,\r\n      selectedContact: { \"id\": contacts[contacts.length - 1].id + 1 },\r\n    });\r\n  }\r\n\r\n  saveContact = (newContact) => {\r\n    const { selectedContact } = this.state;\r\n    contacts.push({\r\n      ...selectedContact,\r\n      ...newContact,\r\n    });\r\n\r\n    this.setState({\r\n      data: contacts,\r\n      isAdding: false,\r\n      searchQuery: '',\r\n    });\r\n  }\r\n\r\n  checkContact = (id) => {\r\n    var { data } = this.state;\r\n    const index = data.findIndex(contact => contact.id === id);\r\n    data[index].checked = !data[index].checked;\r\n\r\n    this.setState({\r\n      data: data,\r\n    });\r\n  }\r\n\r\n  selectAll = () => {\r\n    var { data } = this.state;\r\n\r\n    data.forEach(contact => contact.checked = true);\r\n\r\n    this.setState({\r\n      data: data,\r\n    });\r\n  }\r\n\r\n  deselectAll = () => {\r\n    var { data } = this.state;\r\n\r\n    data.forEach(contact => contact.checked = false);\r\n\r\n    this.setState({\r\n      data: data,\r\n    });\r\n  }\r\n\r\n  deleteContact = () => {\r\n    contacts = contacts.filter((contact) => !contact.checked);\r\n\r\n    this.setState({\r\n      data: contacts,\r\n      searchQuery: '',\r\n      editable: false,\r\n      isAdding: false,\r\n      selectedContact: {},\r\n    });\r\n  }\r\n\r\n  searchContact = ({ target }) => {\r\n    var { value } = target;\r\n\r\n    const filteredData = contacts.filter((contact) => contact.name.toLowerCase().includes(value.toLowerCase()));\r\n\r\n    this.setState({\r\n      data: filteredData,\r\n      searchQuery: value,\r\n      editable: false,\r\n      isAdding: false,\r\n      selectedContact: {},\r\n    });\r\n  }\r\n\r\n  render = () => {\r\n    const { classes } = this.props;\r\n\r\n    let { data, selectedContact, editable, isAdding, searchQuery } = this.state;\r\n\r\n    var allSelected = data.length && data.every(contact => contact.checked);\r\n    var someSelected = data.some(contact => contact.checked);\r\n\r\n    return (\r\n      <Grid container className={classes.outerSpacing} >\r\n        <SceneHeader />\r\n        <Grid container item md={12} className={classes.innerSpacing}>\r\n          <ActionBar\r\n            addContact={this.addContact}\r\n            deleteContact={this.deleteContact}\r\n            searchQuery={searchQuery}\r\n            searchContact={this.searchContact}\r\n            someSelected={someSelected}\r\n          />\r\n          <ContactList\r\n            contacts={data}\r\n            selectedContact={selectedContact}\r\n            selectContact={this.setSelectedContact}\r\n            editContact={this.setEditable}\r\n            updateContact={this.updateContact}\r\n            isEditing={editable}\r\n            isAdding={isAdding}\r\n            saveContact={this.saveContact}\r\n            checkContact={this.checkContact}\r\n            selectAll={this.selectAll}\r\n            deselectAll={this.deselectAll}\r\n            allSelected={allSelected}\r\n            someSelected={someSelected}\r\n          />\r\n          <Hidden mdDown>\r\n            <ContactForm selectedContact={data.find(contact => contact.id === selectedContact.id) || {}} editable={editable} updateContact={this.updateContact} />\r\n          </Hidden>\r\n        </Grid>\r\n      </Grid >\r\n    );\r\n  };\r\n}\r\n\r\nexport default withStyles(styles)(Local);","import React from 'react';\r\n\r\nconst Twitter = () => {\r\n    return (\r\n        <h1>Twitter</h1>\r\n    );\r\n}\r\n\r\nexport default Twitter;","import React from 'react';\r\n\r\nconst GitHub = () => {\r\n    return (\r\n        <h1>GitHub</h1>\r\n    );\r\n}\r\n\r\nexport default GitHub;","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport clsx from 'clsx';\r\nimport AppDrawer from './components/AppDrawer';\r\nimport AppHeader from './components/AppHeader';\r\nimport Local from './scenes/Local';\r\nimport Twitter from './scenes/Twitter';\r\nimport GitHub from './scenes/GitHub';\r\nimport {\r\n  withStyles,\r\n  Backdrop,\r\n  Hidden,\r\n} from '@material-ui/core';\r\n\r\nimport \"./style.scss\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  content: {\r\n    width: '100%'\r\n  },\r\n  contentPosition: {\r\n    position: \"static\",\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      position: \"fixed\",\r\n    },\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer - 1,\r\n  }\r\n});\r\n\r\nclass ContactApp extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      drawer: 'semi'\r\n    }\r\n  }\r\n\r\n  handleFullDrawerToggle = () => {\r\n    this.setState({\r\n      drawer: this.state.drawer === \"open\" ? \"close\" : \"open\"\r\n    })\r\n  }\r\n\r\n  handleMiniDrawerToggle = () => {\r\n    this.setState({\r\n      drawer: this.state.drawer === \"semi\" ? \"open\" : \"semi\"\r\n    })\r\n  }\r\n\r\n  render = () => {\r\n    const { classes } = this.props;\r\n    const { drawer } = this.state;\r\n    return (\r\n      <div className={classes.root} >\r\n        <Hidden smUp>\r\n          <Backdrop open={drawer === \"open\"} className={classes.backdrop}></Backdrop>\r\n        </Hidden>\r\n        <Router basename=\"/contact-list\">\r\n          <AppDrawer\r\n            open={drawer}\r\n            handleMiniDrawerToggle={this.handleMiniDrawerToggle}\r\n          />\r\n          <div className={clsx(classes.content, drawer === \"open\" && classes.contentPosition)}>\r\n            <AppHeader\r\n              handleFullDrawerToggle={this.handleFullDrawerToggle}\r\n            />\r\n            <Switch>\r\n              <Route exact path={\"/\"} key={\"Local\"}>\r\n                <Local />\r\n              </Route>\r\n              <Route exact path={\"/twitter\"} key={\"Twitter\"}>\r\n                <Twitter />\r\n              </Route>\r\n              <Route exact path={\"/github\"} key={\"GitHub\"}>\r\n                <GitHub />\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default withStyles(styles)(ContactApp);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ContactApp from './ContactApp';\nimport 'typeface-roboto';\n\nimport './style.scss';\n\nReactDOM.render(\n  <ContactApp />,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}