{"version":3,"sources":["components/AppDrawer.js","components/AppHeader.js","components/SceneHeader.js","components/ActionBar.js","components/ContactListHeader.js","components/ContactListItem.js","components/ContactForm.js","components/ContactListBody.js","components/ContactList.js","scenes/Local.js","ContactApp.js","index.js"],"names":["useStyles","makeStyles","theme","drawer","backgroundImage","color","boxShadow","drawerSemi","width","spacing","overflow","breakpoints","only","drawerOpen","toggleBtn","padding","textAlign","colorWhite","menu","paddingTop","leftBorder","borderLeft","borderColor","backgroundColor","AppDrawer","open","handleMiniDrawerToggle","classes","Drawer","variant","className","clsx","paper","IconButton","onClick","ChevronLeft","ChevronRight","List","icon","name","Twitter","GitHub","map","tab","index","ListItem","button","key","ListItemIcon","ListItemText","primary","useStyle","header","minHeight","Header","handleFullDrawerToggle","Hidden","smUp","Menu","display","alignItems","headerIcon","background","WebkitBackgroundClip","WebkitTextFillColor","fontSize","headerTitle","SceneHeader","Grid","item","md","Box","fontWeight","innerSpacing","searchBar","borderRadius","searchBarSpacing","down","searchInput","flex","btnWrapper","justifyContent","actionBtn","textTransform","height","margin","minWidth","up","ActionBar","addContact","someSelected","deleteContact","searchQuery","searchContact","container","lg","sm","xs","Paper","elevation","InputBase","placeholder","value","onChange","Search","Button","smDown","Delete","style","contactListHeader","ContactListHeader","allSelected","deselectAll","selectAll","Checkbox","indeterminate","checked","xsDown","contact","cursor","basicInfo","avatarWrapper","contactAvatar","contactName","flexDirection","noMargin","editBtn","ContactListItem","selectContact","active","editContact","isNewContact","saveContact","checkContact","useForm","register","handleSubmit","errors","id","avatar","email","company","useState","newContactName","setNewContactName","event","stopPropagation","disabled","Avatar","src","str","hash","i","length","charCodeAt","colour","toString","substr","stringToColour","split","n","Input","error","undefined","inputRef","required","message","pattern","minLength","maxLength","defaultValue","target","FormHelperText","size","Check","Edit","extendedIcon","marginRight","formWrapper","paddingLeft","contactForm","position","formHeader","paddingBottom","fallbackText","noBottomMargin","marginBottom","saveBtn","formRow","right","ContactForm","selectedContact","editable","updateContact","field","input","fullWidth","disableUnderline","about","phone","address","justify","Fab","data","ContactListBody","contacts","isEditing","isAdding","Fragment","lgUp","noContacts","ContactList","Local","props","setSelectedContact","state","stillAdding","setState","find","setEditable","updatedContact","findIndex","Object","assign","push","forEach","filter","filteredData","toLowerCase","includes","render","every","some","outerSpacing","mdDown","React","Component","withStyles","ContactApp","root","Backdrop","backdrop","content","contentPosition","AppHeader","zIndex","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.887e3a16.chunk.js","sourcesContent":["import React from 'react';\nimport clsx from \"clsx\";\nimport {\n  makeStyles,\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from '@material-ui/core';\nimport {\n  ChevronLeft,\n  ChevronRight,\n  PermIdentity as Local,\n  GitHub,\n  Twitter,\n} from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    backgroundImage: 'linear-gradient(#fa8569, #ff4b6e)',\n    color: '#ffffffbf',\n    boxShadow: '0px 0px 7px darkgrey',\n  },\n  drawerSemi: {\n    width: theme.spacing(7.5) + 1,\n    overflow: 'hidden',\n    [theme.breakpoints.only(\"xs\")]: {\n      width: '0px'\n    }\n  },\n  drawerOpen: {\n    width: theme.spacing(20) + 1,\n  },\n  toggleBtn: {\n    padding: 4,\n    textAlign: 'right',\n  },\n  colorWhite: {\n    color: '#ffffffbf',\n  },\n  menu: {\n    paddingTop: theme.spacing(4) + 1,\n  },\n  leftBorder: {\n    borderLeft: '4px solid transparent',\n    '&:hover, &:focus, &.active': {\n      borderColor: 'white',\n      backgroundColor: 'rgba(0, 0, 0, 0.04)',\n    }\n  },\n}));\n\nconst AppDrawer = ({ open, handleMiniDrawerToggle }) => {\n  const classes = useStyles();\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      className={clsx({\n        [classes.drawerOpen]: open === \"open\",\n        [classes.drawerSemi]: open === \"semi\",\n      })}\n      classes={{\n        paper: clsx(classes.drawer, {\n          [classes.drawerOpen]: open === \"open\",\n          [classes.drawerSemi]: open === \"semi\",\n        })\n      }}\n    >\n      <div className={classes.toggleBtn}>\n        <IconButton color=\"inherit\" onClick={handleMiniDrawerToggle}>\n          {open === \"open\" ? <ChevronLeft /> : <ChevronRight />}\n        </IconButton>\n      </div>\n      <List className={classes.menu}>\n        {\n          [\n            { icon: <Local />, name: \"Local\" },\n            { icon: <Twitter />, name: \"Twitter\" },\n            { icon: <GitHub />, name: \"GitHub\" }\n          ].map((tab, index) =>\n            <ListItem button key={tab.name} className={clsx(classes.leftBorder, index === 0 && 'active')} >\n              <ListItemIcon className={classes.colorWhite}>{tab.icon}</ListItemIcon>\n              <ListItemText primary={tab.name} />\n            </ListItem>\n          )\n        }\n      </List>\n    </Drawer>\n  );\n};\n\nexport default AppDrawer;","import React from 'react';\nimport {\n  makeStyles,\n  IconButton,\n  Hidden,\n} from '@material-ui/core';\nimport {\n  Menu\n} from '@material-ui/icons';\n\nconst useStyle = makeStyles(theme => ({\n  header: {\n    minHeight: 50,\n    width: 100 + '%',\n    boxShadow: '0px 0px 5px darkgrey'\n  }\n}));\n\nconst Header = ({ handleFullDrawerToggle }) => {\n\n  const classes = useStyle();\n\n  return (\n    <header className={classes.header}>\n      <Hidden smUp>\n        <IconButton onClick={handleFullDrawerToggle}>\n          <Menu />\n        </IconButton>\n      </Hidden>\n    </header>\n  );\n};\n\nexport default Header;","import React from 'react';\nimport {\n  makeStyles,\n  Grid,\n  Box\n} from '@material-ui/core';\n\nconst useStyle = makeStyles(theme => ({\n  header: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  headerIcon: {\n    background: 'linear-gradient(#fa8569, #ff4b6e)',\n    WebkitBackgroundClip: 'text',\n    WebkitTextFillColor: 'transparent',\n    color: '#ffffffbf',\n    fontSize: 34\n  },\n  headerTitle: {\n    padding: '0px 15px'\n  }\n}));\n\nconst SceneHeader = () => {\n  const classes = useStyle();\n\n  return (\n    <Grid item md={12} className={classes.header}>\n      <Box className={`fas fa-address-book fa-flip-horizontal ${classes.headerIcon}`} />\n      <Box className={classes.headerTitle}>\n        <Box fontWeight={500} fontSize={28}>Contacts</Box>\n        <Box fontSize={12}>Welcome to FirstCRM Contact page</Box>\n      </Box>\n    </Grid>\n  );\n};\n\nexport default SceneHeader;","import React from 'react';\nimport {\n  makeStyles,\n  Grid,\n  Paper,\n  InputBase,\n  Button,\n  Hidden,\n} from '@material-ui/core';\nimport {\n  Search,\n  Delete,\n} from '@material-ui/icons';\n\nconst useStyle = makeStyles(theme => ({\n  innerSpacing: {\n    padding: '40px 50px',\n    [theme.breakpoints.only(\"xs\")]: {\n      padding: '15px 0px',\n    },\n  },\n  searchBar: {\n    display: 'flex',\n    alignItems: 'center',\n    backgroundColor: '#f1f1f1',\n    borderRadius: 50,\n    padding: '6px 16px',\n  },\n  searchBarSpacing: {\n    padding: '50px 0px',\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: '30px 0px',\n    },\n  },\n  searchInput: {\n    flex: 1,\n    fontSize: 14,\n  },\n  btnWrapper: {\n    padding: '50px 20px',\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: '30px 10px',\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      display: 'flex',\n      justifyContent: 'space-around',\n      padding: '0px 10px 30px 10px',\n    },\n  },\n  actionBtn: {\n    background: 'linear-gradient(to right, #fa8569, #ff4b6e)',\n    color: '#ffffffbf',\n    textTransform: 'none',\n    height: '100%',\n    margin: '0px 2px',\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: '0px 6px',\n      minWidth: '48px',\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      minWidth: '90px',\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      minWidth: '126px',\n    },\n  },\n}));\n\nconst ActionBar = ({ addContact, someSelected, deleteContact, searchQuery, searchContact }) => {\n  const classes = useStyle();\n\n  return (\n    <Grid container item md={12}>\n      <Grid item lg={4} md={6} sm={8} xs={12} className={classes.searchBarSpacing}>\n        <Paper elevation={0} className={classes.searchBar}>\n          <InputBase\n            className={classes.searchInput}\n            placeholder=\"Search contacts\"\n            value={searchQuery}\n            onChange={searchContact}\n          />\n          <Search />\n        </Paper>\n      </Grid>\n      <Grid item lg={4} md={6} sm={4} xs={12} className={classes.btnWrapper}>\n        <Button variant=\"contained\" className={classes.actionBtn} onClick={addContact}>\n          + <Hidden only=\"sm\">Add<Hidden smDown> Contact</Hidden></Hidden>\n        </Button>\n        {\n          someSelected &&\n          <Button variant=\"contained\" className={classes.actionBtn} onClick={deleteContact}>\n            <Delete style={{ fontSize: 16 }} /> <Hidden only=\"sm\">Delete</Hidden>\n          </Button>\n        }\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ActionBar;","import React from 'react';\nimport {\n  makeStyles,\n  Grid,\n  Checkbox,\n  Hidden,\n} from '@material-ui/core';\n\nconst useStyle = makeStyles(theme => ({\n  contactListHeader: {\n    backgroundColor: '#f1f1f1',\n    padding: '5px 10px',\n  }\n}));\n\nconst ContactListHeader = ({ someSelected, allSelected, deselectAll, selectAll }) => {\n  const classes = useStyle();\n\n  return (\n    <Grid container className={classes.contactListHeader}>\n      <Grid item container xs={12} style={{ alignItems: 'center' }}>\n        <Grid item md={1} xs={2} sm={2}>\n          <Checkbox\n            onClick={() => allSelected || someSelected ? deselectAll() : selectAll()}\n            color=\"primary\"\n            indeterminate={someSelected && !allSelected}\n            checked={allSelected || someSelected}\n          />\n        </Grid>\n        <Grid item md={5} xs={10} sm={9}>Basic Info</Grid>\n        <Hidden smDown>\n          <Grid item md={5}>Company</Grid>\n        </Hidden>\n        <Hidden xsDown>\n          <Grid item md={1} sm={1}>Edit</Grid>\n        </Hidden>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ContactListHeader;","import React, {\n  useState\n} from 'react';\nimport { useForm } from 'react-hook-form';\nimport clsx from \"clsx\";\nimport {\n  Grid,\n  Checkbox,\n  Box,\n  Avatar,\n  IconButton,\n  makeStyles,\n  Hidden,\n  Input,\n  FormHelperText,\n} from '@material-ui/core';\nimport {\n  Edit,\n  Check,\n} from '@material-ui/icons';\n\nconst useStyle = makeStyles(theme => ({\n  contact: {\n    margin: '10px 0px',\n    padding: '0px 10px',\n    '&:hover,&.active': {\n      backgroundColor: '#e8ecef',\n      cursor: 'pointer',\n    }\n  },\n  basicInfo: {\n    display: 'flex',\n  },\n  avatarWrapper: {\n    padding: '10px 10px 10px 0px',\n  },\n  contactAvatar: {\n    height: '50px',\n    width: '50px',\n  },\n  contactName: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  noMargin: {\n    margin: 0,\n  },\n  editBtn: {\n    background: 'linear-gradient(to right, #fa8569, #ff4b6e)',\n    color: '#ffffffbf',\n  },\n}));\n\nconst ContactListItem = ({ contact, selectContact, active, editContact, isNewContact, saveContact, checkContact }) => {\n  const classes = useStyle();\n\n  const { register, handleSubmit, errors } = useForm();\n\n  const { id, avatar, name, email, company, checked } = contact;\n\n  const [newContactName, setNewContactName] = useState('');\n\n  const stringToColour = (str) => {\n    var hash = 0;\n    for (var i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    var colour = '#';\n    for (i = 0; i < 3; i++) {\n      var value = (hash >> (i * 8)) & 0xFF;\n      colour += ('00' + value.toString(16)).substr(-2);\n    }\n    return colour + 'bf';\n  }\n\n  const onSave = () => {\n    saveContact(newContactName);\n  }\n\n  return (\n    <Grid container\n      alignItems=\"center\"\n      name=\"contactItem\"\n      className={clsx(classes.contact, active && 'active')}\n      onClick={() => selectContact(id)}\n    >\n      <Grid item md={1} xs={2} sm={2}>\n        <Checkbox\n          onClick={(event) => { checkContact(id); event.stopPropagation(); }}\n          color=\"primary\"\n          checked={checked || false}\n          disabled={isNewContact}\n        />\n      </Grid>\n      <Grid item md={5} xs={10} sm={9}>\n        <Box className={classes.basicInfo}>\n          <Box className={classes.avatarWrapper}>\n            <Avatar\n              src={avatar}\n              className={classes.contactAvatar}\n              style={{\n                backgroundColor: stringToColour(name + email)\n              }} >\n              {\n                isNewContact ?\n                  '' :\n                  name.split(\" \").map((n) => n[0])\n              }\n            </Avatar>\n          </Box>\n          <Box className={classes.contactName}>\n            <h3 className={classes.noMargin}>\n              {\n                isNewContact ?\n                  (\n                    <>\n                      <Input\n                        name=\"name\"\n                        error={errors.name !== undefined ? true : false}\n                        inputRef={register({\n                          required: {\n                            value: true,\n                            message: \"This field is required\"\n                          },\n                          pattern: {\n                            value: /[^\\s]+/,\n                            message: \"Enter valid name\"\n                          },\n                          minLength: {\n                            value: 2,\n                            message: \"Enter valid name\",\n                          },\n                          maxLength: {\n                            value: 40,\n                            message: \"Enter valid name\",\n                          },\n                        })}\n                        placeholder=\"John Doe\"\n                        defaultValue={newContactName}\n                        onClick={(event) => event.stopPropagation()}\n                        onChange={(event) => setNewContactName(event.target.value)}\n                      />\n                      <FormHelperText error>\n                        {errors.name ? errors.name.message : ''}\n                      </FormHelperText>\n                    </>\n                  ) :\n                  name\n              }\n            </h3>\n            <small>\n              {\n                isNewContact ?\n                  '' :\n                  email\n              }\n            </small>\n          </Box>\n        </Box>\n      </Grid>\n      <Hidden smDown>\n        <Grid item md={5}>\n          <h4 className={classes.noMargin}>\n            {\n              isNewContact ?\n                '' :\n                company\n            }\n          </h4>\n        </Grid>\n      </Hidden>\n      <Hidden xsDown>\n        <Grid item md={1} sm={1}>\n          {\n            isNewContact ?\n              <IconButton size=\"small\" className={classes.editBtn} onClick={handleSubmit(onSave)}>\n                <Check />\n              </IconButton> :\n              <IconButton size=\"small\" className={classes.editBtn} onClick={(event) => { editContact(id); event.stopPropagation() }}>\n                <Edit />\n              </IconButton>\n          }\n        </Grid>\n      </Hidden>\n    </Grid >\n  );\n};\n\nexport default ContactListItem;","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport {\n  makeStyles,\n  Grid,\n  Box,\n  Avatar,\n  Input,\n  Fab,\n  IconButton,\n  Hidden,\n  FormHelperText,\n} from '@material-ui/core';\nimport {\n  Check,\n  Edit,\n} from '@material-ui/icons';\n\nconst useStyle = makeStyles(theme => ({\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  formWrapper: {\n    paddingLeft: '60px',\n    [theme.breakpoints.down(\"md\")]: {\n      padding: '20px 0px',\n    },\n  },\n  contactForm: {\n    backgroundColor: '#f1f1f1',\n    padding: '30px 40px',\n    width: '100%',\n    position: 'relative',\n    [theme.breakpoints.only(\"sm\")]: {\n      padding: '30px',\n    },\n    [theme.breakpoints.only(\"xs\")]: {\n      padding: '20px',\n    },\n  },\n  formHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    textAlign: 'center',\n    flexDirection: 'column',\n    paddingBottom: 40,\n    [theme.breakpoints.only(\"xs\")]: {\n      paddingBottom: 20,\n    }\n  },\n  avatar: {\n    height: '80px',\n    width: '80px',\n  },\n  fallbackText: {\n    fontSize: 28,\n  },\n  noBottomMargin: {\n    marginBottom: 0,\n  },\n  saveBtn: {\n    background: 'linear-gradient(to right, #fa8569, #ff4b6e)',\n    color: '#ffffffbf',\n  },\n  formRow: {\n    alignItems: \"baseline\",\n    padding: '10px 0px',\n    [theme.breakpoints.only(\"xs\")]: {\n      padding: '10px 0px',\n    }\n  },\n  editBtn: {\n    background: 'linear-gradient(to right, #fa8569, #ff4b6e)',\n    color: '#ffffffbf',\n    position: 'absolute',\n    right: 20\n  }\n}));\n\nconst ContactForm = ({ selectedContact, editable, updateContact, editContact }) => {\n\n  const classes = useStyle();\n\n  const { register, handleSubmit, errors } = useForm();\n\n  const onSubmit = (data) => { updateContact(data) }\n\n  const display = (field, input = false) => {\n    return input ? selectedContact[field] : selectedContact[field] === '' || selectedContact[field] === undefined ? 'N/A' : selectedContact[field];\n  };\n\n  return (\n    <Grid item lg={6} xs={12}>\n      <Grid item container md={12} className={classes.formWrapper}>\n        <Box className={classes.contactForm}>\n          <Hidden smUp>\n            <IconButton size=\"small\" className={classes.editBtn} onClick={() => editContact(selectedContact.id)}>\n              <Edit />\n            </IconButton>\n          </Hidden>\n          <Box className={classes.formHeader}>\n            <Avatar className={classes.avatar} src={selectedContact.avatar}>\n              {display(\"name\").split(\" \").map((n) => n[0])}\n            </Avatar>\n            <h2 className={classes.noBottomMargin}>{display(\"name\")}</h2>\n            <small>{display(\"about\")}</small>\n          </Box>\n          <Grid container>\n            <Grid item container className={classes.formRow}>\n              <Grid item xs={12} sm={3}>\n                Full Name:\n              </Grid>\n              <Grid item xs={12} sm={9}>\n                {\n                  editable ?\n                    <Input\n                      fullWidth\n                      error={errors.name !== undefined ? true : false}\n                      inputRef={register({\n                        required: {\n                          value: true,\n                          message: \"This field is required\"\n                        },\n                        pattern: {\n                          value: /[^\\s]+/,\n                          message: \"Enter valid name\"\n                        },\n                        minLength: {\n                          value: 2,\n                          message: \"Enter valid name\",\n                        },\n                        maxLength: {\n                          value: 40,\n                          message: \"Enter valid name\",\n                        },\n                      })}\n                      defaultValue={display(\"name\", editable)}\n                      name=\"name\"\n                    /> :\n                    display(\"name\", false)\n                }\n                <FormHelperText error>{errors.name ? errors.name.message : ' '}</FormHelperText>\n              </Grid>\n            </Grid>\n            {\n              editable &&\n              <Grid item container className={classes.formRow}>\n                <Grid item xs={12} sm={3}>\n                  About:\n                  </Grid>\n                <Grid item xs={12} sm={9}>\n                  {\n                    editable ?\n                      <Input\n                        fullWidth\n                        disabled={!editable}\n                        disableUnderline={!editable}\n                        error={errors.about !== undefined ? true : false}\n                        inputRef={register({\n                          required: {\n                            value: true,\n                            message: \"This field is required\"\n                          },\n                          pattern: {\n                            value: /[^\\s]+/,\n                            message: \"Enter valid about\"\n                          },\n                          minLength: {\n                            value: 10,\n                            message: \"Enter valid about\",\n                          },\n                          maxLength: {\n                            value: 50,\n                            message: \"Enter valid about\",\n                          },\n                        })}\n                        defaultValue={display(\"about\", editable)}\n                        name=\"about\"\n                      /> :\n                      display(\"about\", false)\n                  }\n                  <FormHelperText error>{errors.about ? errors.about.message : ' '}</FormHelperText>\n                </Grid>\n              </Grid>\n            }\n            <Grid item container className={classes.formRow}>\n              <Grid item xs={12} sm={3}>\n                Email:\n              </Grid>\n              <Grid item xs={12} sm={9}>\n                {\n                  editable ?\n                    <Input\n                      fullWidth\n                      disabled={!editable}\n                      disableUnderline={!editable}\n                      error={errors.email !== undefined ? true : false}\n                      inputRef={register({\n                        required: {\n                          value: true,\n                          message: \"This field is required\"\n                        },\n                        pattern: {\n                          value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                          message: \"Invalid email address\"\n                        },\n                        maxLength: {\n                          value: 60,\n                          message: \"Enter valid email\",\n                        },\n                      })}\n                      defaultValue={display(\"email\", editable)}\n                      name=\"email\"\n                    /> :\n                    display(\"email\", false)\n                }\n                <FormHelperText error>{errors.email ? errors.email.message : ' '}</FormHelperText>\n              </Grid>\n            </Grid>\n            <Grid item container className={classes.formRow}>\n              <Grid item xs={12} sm={3}>\n                Phone:\n              </Grid>\n              <Grid item xs={12} sm={9}>\n                {\n                  editable ?\n                    <Input\n                      fullWidth\n                      disabled={!editable}\n                      disableUnderline={!editable}\n                      error={errors.phone !== undefined ? true : false}\n                      inputRef={register({\n                        required: {\n                          value: true,\n                          message: \"This field is required\"\n                        },\n                        pattern: {\n                          value: /[+][(](\\d{1,5})[)][\\s](\\d{6,9})$/,\n                          message: \"Enter valid phone\"\n                        },\n                      })}\n                      defaultValue={display(\"phone\", editable)}\n                      name=\"phone\"\n                    /> :\n                    display(\"phone\", false)\n                }\n                <FormHelperText error>{errors.phone ? errors.phone.message : ' '}</FormHelperText>\n              </Grid>\n            </Grid>\n            <Grid item container className={classes.formRow}>\n              <Grid item xs={12} sm={3}>\n                Company:\n              </Grid>\n              <Grid item xs={12} sm={9}>\n                {\n                  editable ?\n                    <Input\n                      fullWidth\n                      disabled={!editable}\n                      disableUnderline={!editable}\n                      error={errors.company !== undefined ? true : false}\n                      inputRef={register({\n                        required: {\n                          value: true,\n                          message: \"This field is required\"\n                        },\n                        pattern: {\n                          value: /[^\\s]+/,\n                          message: \"Enter valid company name\"\n                        },\n                        minLength: {\n                          value: 5,\n                          message: \"Enter valid company name\",\n                        },\n                        maxLength: {\n                          value: 40,\n                          message: \"Enter valid company name\",\n                        },\n                      })}\n                      defaultValue={display(\"company\", editable)}\n                      name=\"company\"\n                    /> :\n                    display(\"company\", false)\n                }\n                <FormHelperText error>{errors.company ? errors.company.message : ' '}</FormHelperText>\n              </Grid>\n            </Grid>\n            <Grid item container className={classes.formRow}>\n              <Grid item xs={12} sm={3}>\n                Address:\n              </Grid>\n              <Grid item xs={12} sm={9}>\n                {\n                  editable ?\n                    <Input\n                      fullWidth\n                      disabled={!editable}\n                      disableUnderline={!editable}\n                      error={errors.address !== undefined ? true : false}\n                      inputRef={register({\n                        required: {\n                          value: true,\n                          message: \"This field is required\"\n                        },\n                        pattern: {\n                          value: /[^\\s]+/,\n                          message: \"Enter valid address\"\n                        },\n                        minLength: {\n                          value: 10,\n                          message: \"Enter valid address\",\n                        },\n                        maxLength: {\n                          value: 100,\n                          message: \"Enter valid address\",\n                        },\n                      })}\n                      defaultValue={display(\"address\", editable)}\n                      name=\"address\"\n                    /> :\n                    display(\"address\", false)\n                }\n                <FormHelperText error>{errors.address ? errors.address.message : ' '}</FormHelperText>\n              </Grid>\n            </Grid>\n            {\n              editable &&\n              <Grid item container justify=\"center\">\n                <Fab variant=\"extended\" className={classes.saveBtn} onClick={handleSubmit(onSubmit)}>\n                  <Check className={classes.extendedIcon} />\n                  Save\n                </Fab>\n              </Grid>\n            }\n          </Grid>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default ContactForm;","import React from 'react';\nimport {\n  Hidden,\n} from '@material-ui/core';\nimport ContactListItem from '../components/ContactListItem';\nimport ContactForm from '../components/ContactForm';\n\nconst ContactListBody = ({ contacts, selectedContact, selectContact, editContact, isEditing, updateContact, isAdding, saveContact, checkContact }) => {\n  return (\n    <>\n      {\n        contacts.map((contact) => {\n          return (\n            <React.Fragment key={contact.id}>\n              <ContactListItem\n                contact={contact}\n                active={contact.id === selectedContact.id}\n                selectContact={selectContact}\n                editContact={editContact}\n                saveContact={saveContact}\n                checkContact={checkContact}\n              />\n              {\n                contact.id === selectedContact.id &&\n                <Hidden lgUp>\n                  <ContactForm selectedContact={contact} editable={isEditing} editContact={editContact} updateContact={updateContact} />\n                </Hidden>\n              }\n            </React.Fragment>\n          );\n        })\n      }\n\n      {\n        isAdding &&\n        <ContactListItem\n          contact={selectedContact}\n          key={'newContact'}\n          active={true}\n          selectContact={() => {}}\n          editContact={() => {}}\n          isEditing={isEditing}\n          saveContact={saveContact}\n          isNewContact={isAdding}\n        />\n      }\n    </>\n  );\n};\n\nexport default ContactListBody;","import React from 'react';\nimport ContactListHeader from '../components/ContactListHeader';\nimport ContactListBody from '../components/ContactListBody';\nimport {\n  Grid,\n  makeStyles,\n} from '@material-ui/core';\n\nconst useStyle = makeStyles(theme => ({\n  noContacts: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '40vh'\n  }\n}));\n\nconst ContactList = ({ contacts, selectedContact, selectContact, editContact, isEditing, updateContact, saveContact, isAdding, checkContact, someSelected, allSelected, selectAll, deselectAll }) => {\n\n  const classes = useStyle();\n\n  return (\n    <Grid item lg={6} xs={12}>\n      <ContactListHeader\n        someSelected={someSelected}\n        allSelected={allSelected}\n        selectAll={selectAll}\n        deselectAll={deselectAll}\n      />\n      {\n        contacts.length > 0 ?\n          <ContactListBody\n            contacts={contacts}\n            selectedContact={selectedContact}\n            selectContact={selectContact}\n            editContact={editContact}\n            isEditing={isEditing}\n            updateContact={updateContact}\n            isAdding={isAdding}\n            saveContact={saveContact}\n            checkContact={checkContact}\n          /> :\n          <h3 className={classes.noContacts}>\n            No Contacts\n          </h3>\n      }\n    </Grid>\n  );\n};\n\nexport default ContactList;","import React from 'react';\nimport SceneHeader from '../components/SceneHeader';\nimport ActionBar from '../components/ActionBar';\nimport ContactList from '../components/ContactList';\nimport ContactForm from '../components/ContactForm';\nimport {\n  Grid,\n  withStyles,\n  Hidden,\n} from '@material-ui/core';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n\nconst styles = theme => ({\n  outerSpacing: {\n    padding: '50px 60px',\n    [theme.breakpoints.only(\"sm\")]: {\n      padding: '30px 40px',\n    },\n    [theme.breakpoints.only(\"xs\")]: {\n      padding: '20px',\n    },\n  },\n  innerSpacing: {\n    padding: '0px 40px',\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: '0px',\n    },\n  }\n});\n\nlet contacts = [\n  {\n    \"id\": \"1\",\n    \"name\": \"Joey Tribbiani\",\n    \"about\": \"Actor\",\n    \"email\": \"joeyt@friends.com\",\n    \"phone\": \"+(069) 123-6547\",\n    \"company\": \"Actor Acadamy\",\n    \"address\": \"2738  Liberty Avenue, California\"\n  },\n  {\n    \"id\": \"2\",\n    \"name\": \"Rachel Green\",\n    \"about\": \"Fashion Designer\",\n    \"email\": \"greenrach@friends.com\",\n    \"phone\": \"718-896-1555\",\n    \"company\": \"Ralph Lauren\",\n    \"address\": \"377  Abia Martin Drive, Bethpage, New York\"\n  },\n  {\n    \"id\": \"3\",\n    \"name\": \"Ross Geller\",\n    \"about\": \"Paleontologist\",\n    \"email\": \"rossaurus@friends.com\",\n    \"phone\": \"\",\n    \"company\": \"Dianosaur Museum\",\n    \"address\": \"4437  Plainfield Avenue, HOPKINTON, Massachusetts\"\n  },\n  {\n    \"id\": \"4\",\n    \"name\": \"Phoebe Buffay\",\n    \"about\": \"Masseuse\",\n    \"email\": \"phebes@friends.com\",\n    \"phone\": \"802-232-8909\",\n    \"company\": \"\",\n    \"address\": \"\"\n  },\n  {\n    \"id\": \"5\",\n    \"name\": \"Monica Geller\",\n    \"about\": \"Chef\",\n    \"email\": \"mon@friends.com\",\n    \"phone\": \"\",\n    \"company\": \"\",\n    \"address\": \"\"\n  },\n  {\n    \"id\": \"6\",\n    \"name\": \"Chandler Bing\",\n    \"about\": \"Copywriter\",\n    \"email\": \"mrbing@friends.com\",\n    \"phone\": \"\",\n    \"company\": \"\",\n    \"address\": \"4709  Roosevelt Road, Dodge City, Kansas\"\n  },\n  {\n    \"id\": \"7\",\n    \"name\": \"Gunther\",\n    \"about\": \"Cafe Owner\",\n    \"email\": \"gunther@friends.com\",\n    \"phone\": \"330-443-9039\",\n    \"company\": \"Central Perk\",\n    \"address\": \"\"\n  },\n  {\n    \"id\": \"8\",\n    \"name\": \"Jill Green\",\n    \"about\": \"Rachel's sister\",\n    \"email\": \"jgreen@gmail.com\",\n    \"phone\": \"\",\n    \"company\": \"\",\n    \"address\": \"2035  Nixon Avenue, Kingsport, Tennessee\"\n  },\n  {\n    \"id\": \"9\",\n    \"name\": \"Jack Geller\",\n    \"about\": \"Ross' father\",\n    \"email\": \"jackg@gmail.com\",\n    \"phone\": \"908-617-5594\",\n    \"company\": \"\",\n    \"address\": \"3033  Patterson Road, SPANGLE, Washington\"\n  },\n];\n\nclass Local extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: contacts,\n      selectedContact: {},\n      editable: false,\n      isAdding: false,\n      searchQuery: '',\n    }\n  }\n\n  setSelectedContact = (id) => {\n    const { data, isAdding, selectedContact, editable } = this.state;\n    const stillAdding = isAdding && id === selectedContact.id;\n    this.setState({\n      selectedContact: stillAdding ? selectedContact : data.find(contact => contact.id === id),\n      isAdding: stillAdding,\n      editable: editable && id === selectedContact.id,\n    });\n  };\n\n  setEditable = (id) => {\n    const { data, selectedContact } = this.state;\n    this.setState({\n      editable: id === selectedContact.id,\n      selectedContact: data.find(contact => contact.id === id),\n    });\n  };\n\n  updateContact = (updatedContact) => {\n    var { selectedContact } = this.state;\n    var index = contacts.findIndex(contact => contact.id === selectedContact.id);\n    contacts[index] = Object.assign({}, contacts[index], updatedContact);\n    this.setState({\n      data: contacts,\n      editable: false,\n    });\n  };\n\n  addContact = () => {\n    this.setState({\n      isAdding: true,\n      selectedContact: { \"id\": contacts.length + 1 },\n    });\n  }\n\n  saveContact = (newContactName) => {\n    const { selectedContact } = this.state;\n    contacts.push({\n      ...selectedContact,\n      \"name\": newContactName,\n    });\n\n    this.setState({\n      data: contacts,\n      isAdding: false,\n      searchQuery: '',\n    });\n  }\n\n  checkContact = (id) => {\n    var { data } = this.state;\n    const index = data.findIndex(contact => contact.id === id);\n    data[index].checked = !data[index].checked;\n\n    this.setState({\n      data: data,\n    });\n  }\n\n  selectAll = () => {\n    var { data } = this.state;\n\n    data.forEach(contact => contact.checked = true);\n\n    this.setState({\n      data: data,\n    });\n  }\n\n  deselectAll = () => {\n    var { data } = this.state;\n\n    data.forEach(contact => contact.checked = false);\n\n    this.setState({\n      data: data,\n    });\n  }\n\n  deleteContact = () => {\n    contacts = contacts.filter((contact) => !contact.checked);\n\n    this.setState({\n      data: contacts,\n      searchQuery: '',\n      editable: false,\n      isAdding: false,\n      selectedContact: {},\n    });\n  }\n\n  searchContact = ({ target }) => {\n    var { value } = target;\n\n    const filteredData = contacts.filter((contact) => contact.name.toLowerCase().includes(value.toLowerCase()));\n\n    this.setState({\n      data: filteredData,\n      searchQuery: value,\n      editable: false,\n      isAdding: false,\n      selectedContact: {},\n    });\n  }\n\n  render = () => {\n    const { classes } = this.props;\n\n    let { data, selectedContact, editable, isAdding, searchQuery } = this.state;\n\n    var allSelected = data.length && data.every(contact => contact.checked);\n    var someSelected = data.some(contact => contact.checked);\n\n    return (\n      <Grid container className={classes.outerSpacing} >\n        <SceneHeader />\n        <Grid container item md={12} className={classes.innerSpacing}>\n          <ActionBar\n            addContact={this.addContact}\n            deleteContact={this.deleteContact}\n            searchQuery={searchQuery}\n            searchContact={this.searchContact}\n            someSelected={someSelected}\n          />\n          <ContactList\n            contacts={data}\n            selectedContact={selectedContact}\n            selectContact={this.setSelectedContact}\n            editContact={this.setEditable}\n            updateContact={this.updateContact}\n            isEditing={editable}\n            isAdding={isAdding}\n            saveContact={this.saveContact}\n            checkContact={this.checkContact}\n            selectAll={this.selectAll}\n            deselectAll={this.deselectAll}\n            allSelected={allSelected}\n            someSelected={someSelected}\n          />\n          <Hidden mdDown>\n            <ContactForm selectedContact={data.find(contact => contact.id === selectedContact.id) || {}} editable={editable} updateContact={this.updateContact} />\n          </Hidden>\n        </Grid>\n      </Grid >\n    );\n  };\n}\n\nexport default withStyles(styles)(Local);","import React from 'react';\nimport clsx from 'clsx';\nimport AppDrawer from './components/AppDrawer';\nimport AppHeader from './components/AppHeader';\nimport Local from './scenes/Local';\nimport {\n  withStyles,\n  Backdrop,\n  Hidden,\n} from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  content: {\n    width: '100%'\n  },\n  contentPosition: {\n    position: \"static\",\n    [theme.breakpoints.only(\"xs\")]: {\n      position: \"fixed\",\n    },\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer - 1,\n  }\n});\n\nclass ContactApp extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      drawer: 'semi'\n    }\n  }\n\n  handleFullDrawerToggle = () => {\n    this.setState({\n      drawer: this.state.drawer === \"open\" ? \"close\" : \"open\"\n    })\n  }\n\n  handleMiniDrawerToggle = () => {\n    this.setState({\n      drawer: this.state.drawer === \"semi\" ? \"open\" : \"semi\"\n    })\n  }\n\n  render = () => {\n    const { classes } = this.props;\n    const { drawer } = this.state;\n    return (\n      <div className={classes.root} >\n        <Hidden smUp>\n          <Backdrop open={drawer === \"open\"} className={classes.backdrop}></Backdrop>\n        </Hidden>\n        <AppDrawer\n          open={drawer}\n          handleMiniDrawerToggle={this.handleMiniDrawerToggle}\n        />\n        <div className={clsx(classes.content, drawer === \"open\" && classes.contentPosition)}>\n          <AppHeader\n            handleFullDrawerToggle={this.handleFullDrawerToggle}\n          />\n          <Local />\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default withStyles(styles)(ContactApp);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ContactApp from './ContactApp';\nimport 'typeface-roboto';\n\nimport './style.scss';\n\nReactDOM.render(\n  <ContactApp />,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}