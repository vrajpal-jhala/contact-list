{"version":3,"sources":["components/AppDrawer.js","components/AppHeader.js","components/SceneHeader.js","components/ActionBar.js","components/ContactListHeader.js","components/ContactListItem.js","components/ContactForm.js","components/ContactListBody.js","components/ContactList.js","scenes/Local.js","ContactApp.js","index.js"],"names":["useStyles","makeStyles","theme","drawer","backgroundImage","color","boxShadow","drawerSemi","width","spacing","overflow","breakpoints","only","drawerOpen","toggleBtn","padding","textAlign","colorWhite","menu","paddingTop","leftBorder","borderLeft","borderColor","backgroundColor","AppDrawer","open","handleMiniDrawerToggle","classes","Drawer","variant","className","clsx","paper","IconButton","onClick","ChevronLeft","ChevronRight","List","icon","name","Twitter","GitHub","map","tab","index","ListItem","button","key","ListItemIcon","ListItemText","primary","useStyle","header","minHeight","Header","handleFullDrawerToggle","Hidden","smUp","Menu","display","alignItems","headerIcon","background","WebkitBackgroundClip","WebkitTextFillColor","fontSize","headerTitle","SceneHeader","Grid","item","md","Box","fontWeight","innerSpacing","searchBar","borderRadius","searchBarSpacing","down","searchInput","flex","btnWrapper","justifyContent","actionBtn","textTransform","height","margin","minWidth","up","ActionBar","addContact","someSelected","deleteContact","searchQuery","searchContact","container","lg","sm","xs","Paper","elevation","InputBase","placeholder","value","onChange","Search","Button","smDown","Delete","style","contactListHeader","ContactListHeader","allSelected","deselectAll","selectAll","Checkbox","indeterminate","checked","xsDown","contact","cursor","basicInfo","avatarWrapper","contactAvatar","contactName","flexDirection","noMargin","editBtn","maxWidth","maxHeight","ContactListItem","selectContact","active","editContact","isNewContact","saveContact","checkContact","useForm","register","handleSubmit","errors","validations","required","message","pattern","minLength","maxLength","id","avatar","email","onSubmit","data","type","Check","event","stopPropagation","Avatar","src","str","hash","i","length","charCodeAt","colour","toString","substr","stringToColour","split","n","Input","autoFocus","error","undefined","inputRef","FormHelperText","mdUp","fullWidth","size","Edit","defaultProps","isEditing","extendedIcon","marginRight","formWrapper","paddingLeft","contactForm","position","formHeader","paddingBottom","fallbackText","noBottomMargin","marginBottom","saveBtn","formRow","right","ContactForm","selectedContact","editable","updateContact","field","input","defaultValue","disabled","disableUnderline","about","phone","company","address","justify","Fab","ContactListBody","contacts","isAdding","Fragment","lgUp","noContacts","ContactList","Local","props","setSelectedContact","state","stillAdding","setState","find","setEditable","updatedContact","findIndex","Object","assign","newContact","push","forEach","filter","target","filteredData","toLowerCase","includes","render","every","some","outerSpacing","mdDown","React","Component","withStyles","ContactApp","root","Backdrop","backdrop","content","contentPosition","AppHeader","zIndex","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.25902fbb.chunk.js","sourcesContent":["import React from 'react';\nimport clsx from \"clsx\";\nimport {\n  makeStyles,\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from '@material-ui/core';\nimport {\n  ChevronLeft,\n  ChevronRight,\n  PermIdentity as Local,\n  GitHub,\n  Twitter,\n} from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    backgroundImage: 'linear-gradient(#fa8569, #ff4b6e)',\n    color: '#ffffffbf',\n    boxShadow: '0px 0px 7px darkgrey',\n  },\n  drawerSemi: {\n    width: theme.spacing(7.5) + 1,\n    overflow: 'hidden',\n    [theme.breakpoints.only(\"xs\")]: {\n      width: '0px'\n    }\n  },\n  drawerOpen: {\n    width: theme.spacing(20) + 1,\n  },\n  toggleBtn: {\n    padding: 4,\n    textAlign: 'right',\n  },\n  colorWhite: {\n    color: '#ffffffbf',\n  },\n  menu: {\n    paddingTop: theme.spacing(4) + 1,\n  },\n  leftBorder: {\n    borderLeft: '4px solid transparent',\n    '&:hover, &:focus, &.active': {\n      borderColor: 'white',\n      backgroundColor: 'rgba(0, 0, 0, 0.04)',\n    }\n  },\n}));\n\nconst AppDrawer = ({ open, handleMiniDrawerToggle }) => {\n  const classes = useStyles();\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      className={clsx({\n        [classes.drawerOpen]: open === \"open\",\n        [classes.drawerSemi]: open === \"semi\",\n      })}\n      classes={{\n        paper: clsx(classes.drawer, {\n          [classes.drawerOpen]: open === \"open\",\n          [classes.drawerSemi]: open === \"semi\",\n        })\n      }}\n    >\n      <div className={classes.toggleBtn}>\n        <IconButton color=\"inherit\" onClick={handleMiniDrawerToggle}>\n          {open === \"open\" ? <ChevronLeft /> : <ChevronRight />}\n        </IconButton>\n      </div>\n      <List className={classes.menu}>\n        {\n          [\n            { icon: <Local />, name: \"Local\" },\n            { icon: <Twitter />, name: \"Twitter\" },\n            { icon: <GitHub />, name: \"GitHub\" }\n          ].map((tab, index) =>\n            <ListItem button key={tab.name} className={clsx(classes.leftBorder, index === 0 && 'active')} >\n              <ListItemIcon className={classes.colorWhite}>{tab.icon}</ListItemIcon>\n              <ListItemText primary={tab.name} />\n            </ListItem>\n          )\n        }\n      </List>\n    </Drawer>\n  );\n};\n\nexport default AppDrawer;","import React from 'react';\nimport {\n  makeStyles,\n  IconButton,\n  Hidden,\n} from '@material-ui/core';\nimport {\n  Menu\n} from '@material-ui/icons';\n\nconst useStyle = makeStyles(theme => ({\n  header: {\n    minHeight: 50,\n    width: 100 + '%',\n    boxShadow: '0px 0px 5px darkgrey'\n  }\n}));\n\nconst Header = ({ handleFullDrawerToggle }) => {\n\n  const classes = useStyle();\n\n  return (\n    <header className={classes.header}>\n      <Hidden smUp>\n        <IconButton onClick={handleFullDrawerToggle}>\n          <Menu />\n        </IconButton>\n      </Hidden>\n    </header>\n  );\n};\n\nexport default Header;","import React from 'react';\nimport {\n  makeStyles,\n  Grid,\n  Box\n} from '@material-ui/core';\n\nconst useStyle = makeStyles(theme => ({\n  header: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  headerIcon: {\n    background: 'linear-gradient(#fa8569, #ff4b6e)',\n    WebkitBackgroundClip: 'text',\n    WebkitTextFillColor: 'transparent',\n    color: '#ffffffbf',\n    fontSize: 34\n  },\n  headerTitle: {\n    padding: '0px 15px'\n  }\n}));\n\nconst SceneHeader = () => {\n  const classes = useStyle();\n\n  return (\n    <Grid item md={12} className={classes.header}>\n      <Box className={`fas fa-address-book fa-flip-horizontal ${classes.headerIcon}`} />\n      <Box className={classes.headerTitle}>\n        <Box fontWeight={500} fontSize={28}>Contacts</Box>\n        <Box fontSize={12}>Welcome to FirstCRM Contact page</Box>\n      </Box>\n    </Grid>\n  );\n};\n\nexport default SceneHeader;","import React from 'react';\nimport {\n  makeStyles,\n  Grid,\n  Paper,\n  InputBase,\n  Button,\n  Hidden,\n} from '@material-ui/core';\nimport {\n  Search,\n  Delete,\n} from '@material-ui/icons';\n\nconst useStyle = makeStyles(theme => ({\n  innerSpacing: {\n    padding: '40px 50px',\n    [theme.breakpoints.only(\"xs\")]: {\n      padding: '15px 0px',\n    },\n  },\n  searchBar: {\n    display: 'flex',\n    alignItems: 'center',\n    backgroundColor: '#f1f1f1',\n    borderRadius: 50,\n    padding: '6px 16px',\n  },\n  searchBarSpacing: {\n    padding: '50px 0px',\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: '30px 0px',\n    },\n  },\n  searchInput: {\n    flex: 1,\n    fontSize: 14,\n  },\n  btnWrapper: {\n    padding: '50px 20px',\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: '30px 10px',\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      display: 'flex',\n      justifyContent: 'space-around',\n      padding: '0px 10px 30px 10px',\n    },\n  },\n  actionBtn: {\n    background: 'linear-gradient(to right, #fa8569, #ff4b6e)',\n    color: '#ffffffbf',\n    textTransform: 'none',\n    height: '100%',\n    margin: '0px 2px',\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: '0px 6px',\n      minWidth: '48px',\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      minWidth: '90px',\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      minWidth: '126px',\n    },\n  },\n}));\n\nconst ActionBar = ({ addContact, someSelected, deleteContact, searchQuery, searchContact }) => {\n  const classes = useStyle();\n\n  return (\n    <Grid container item md={12}>\n      <Grid item lg={4} md={6} sm={8} xs={12} className={classes.searchBarSpacing}>\n        <Paper elevation={0} className={classes.searchBar}>\n          <InputBase\n            className={classes.searchInput}\n            placeholder=\"Search contacts\"\n            value={searchQuery}\n            onChange={searchContact}\n          />\n          <Search />\n        </Paper>\n      </Grid>\n      <Grid item lg={4} md={6} sm={4} xs={12} className={classes.btnWrapper}>\n        <Button variant=\"contained\" className={classes.actionBtn} onClick={addContact}>\n          + <Hidden only=\"sm\">Add<Hidden smDown> Contact</Hidden></Hidden>\n        </Button>\n        {\n          someSelected &&\n          <Button variant=\"contained\" className={classes.actionBtn} onClick={deleteContact}>\n            <Delete style={{ fontSize: 16 }} /> <Hidden only=\"sm\">Delete</Hidden>\n          </Button>\n        }\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ActionBar;","import React from 'react';\nimport {\n  makeStyles,\n  Grid,\n  Checkbox,\n  Hidden,\n} from '@material-ui/core';\n\nconst useStyle = makeStyles(theme => ({\n  contactListHeader: {\n    backgroundColor: '#f1f1f1',\n    padding: '5px 10px',\n  }\n}));\n\nconst ContactListHeader = ({ someSelected, allSelected, deselectAll, selectAll }) => {\n  const classes = useStyle();\n\n  return (\n    <Grid container className={classes.contactListHeader}>\n      <Grid item container xs={12} style={{ alignItems: 'center' }}>\n        <Grid item md={1} xs={2} sm={2}>\n          <Checkbox\n            onClick={() => allSelected || someSelected ? deselectAll() : selectAll()}\n            color=\"primary\"\n            indeterminate={someSelected && !allSelected}\n            checked={allSelected || someSelected}\n          />\n        </Grid>\n        <Grid item md={5} xs={10} sm={9}>Name</Grid>\n        <Hidden smDown>\n          <Grid item md={5}>Email</Grid>\n        </Hidden>\n        <Hidden xsDown>\n          <Grid item md={1} sm={1}>Edit</Grid>\n        </Hidden>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ContactListHeader;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport clsx from \"clsx\";\nimport {\n  Grid,\n  Checkbox,\n  Box,\n  Avatar,\n  IconButton,\n  Button,\n  makeStyles,\n  Hidden,\n  Input,\n  FormHelperText,\n} from '@material-ui/core';\nimport {\n  Edit,\n  Check,\n} from '@material-ui/icons';\n\nconst useStyle = makeStyles(theme => ({\n  contact: {\n    margin: '10px 0px',\n    padding: '0px 10px',\n    '&:hover,&.active': {\n      backgroundColor: '#e8ecef',\n      cursor: 'pointer',\n    }\n  },\n  basicInfo: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  avatarWrapper: {\n    padding: '10px 10px 10px 0px',\n  },\n  contactAvatar: {\n    height: '50px',\n    width: '50px',\n  },\n  contactName: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  noMargin: {\n    margin: 0,\n  },\n  editBtn: {\n    background: 'linear-gradient(to right, #fa8569, #ff4b6e)',\n    color: '#ffffffbf',\n    padding: 0,\n    maxWidth: 30,\n    minWidth: 30,\n    maxHeight: 30,\n    minHeight: 30,\n    boxShadow: '1px 1px 2px grey',\n  },\n}));\n\nconst ContactListItem = ({ contact, selectContact, active, editContact, isNewContact, saveContact, checkContact }) => {\n  const classes = useStyle();\n\n  const { register, handleSubmit, errors } = useForm();\n\n  const validations = {\n    name: {\n      required: {\n        value: true,\n        message: \"This field is required\"\n      },\n      pattern: {\n        value: /[^\\s]+/,\n        message: \"Enter valid name\"\n      },\n      minLength: {\n        value: 2,\n        message: \"Enter valid name\",\n      },\n      maxLength: {\n        value: 40,\n        message: \"Enter valid name\",\n      },\n    },\n    email: {\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n        message: \"Enter valid email\"\n      },\n      minLength: {\n        value: 2,\n        message: \"Enter valid email\",\n      },\n      maxLength: {\n        value: 40,\n        message: \"Enter valid email\",\n      },\n    },\n  };\n\n  const { id, avatar, name, email, checked } = contact;\n\n  const stringToColour = (str) => {\n    var hash = 0;\n    for (var i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    var colour = '#';\n    for (i = 0; i < 3; i++) {\n      var value = (hash >> (i * 8)) & 0xFF;\n      colour += ('00' + value.toString(16)).substr(-2);\n    }\n\n    return colour + 'bf';\n  }\n\n  const onSave = (data) => { saveContact(data); }\n\n  return (\n    <form onSubmit={handleSubmit(onSave)}>\n      <Grid container\n        alignItems=\"center\"\n        name=\"contactItem\"\n        className={clsx(classes.contact, active && 'active')}\n        onClick={() => selectContact(id)}\n      >\n        <Grid item md={1} xs={2} sm={2}>\n          {isNewContact ?\n            <Hidden smUp>\n              <Button type=\"submit\" className={classes.editBtn}>\n                <Check />\n              </Button>\n            </Hidden> :\n            <Checkbox\n              onClick={(event) => { checkContact(id); event.stopPropagation(); }}\n              color=\"primary\"\n              checked={checked || false}\n            />\n          }\n        </Grid>\n        <Grid item md={5} xs={10} sm={9}>\n          <Box className={classes.basicInfo}>\n            <Box className={classes.avatarWrapper}>\n              <Avatar\n                src={avatar}\n                className={classes.contactAvatar}\n                style={{\n                  backgroundColor: stringToColour(name + email)\n                }} >\n                {\n                  isNewContact ?\n                    '' :\n                    name.split(\" \").map((n) => n[0])\n                }\n              </Avatar>\n            </Box>\n            <Box className={classes.contactName}>\n              <h3 className={classes.noMargin}>\n                {\n                  isNewContact ?\n                    (\n                      <>\n                        <Input\n                          autoFocus\n                          name=\"name\"\n                          error={errors.name !== undefined ? true : false}\n                          inputRef={register(validations.name)}\n                          placeholder=\"John Doe\"\n                          onClick={(event) => event.stopPropagation()}\n                        />\n                        <FormHelperText error>\n                          {errors.name ? errors.name.message : ''}\n                        </FormHelperText>\n                      </>\n                    ) :\n                    name\n                }\n              </h3>\n              <small>\n                <Hidden mdUp>\n                  {\n                    isNewContact ?\n                      (\n                        <>\n                          <Input\n                            fullWidth\n                            style={{ fontSize: 10 }}\n                            name=\"email\"\n                            error={errors.email !== undefined ? true : false}\n                            inputRef={register(validations.email)}\n                            placeholder=\"john@gmail.com\"\n                            onClick={(event) => event.stopPropagation()}\n                          />\n                          <FormHelperText error>\n                            {errors.email ? errors.email.message : ''}\n                          </FormHelperText>\n                        </>\n                      ) :\n                      email\n                  }\n                </Hidden>\n              </small>\n            </Box>\n          </Box>\n        </Grid>\n        <Hidden smDown>\n          <Grid item md={5}>\n            <h4 className={classes.noMargin}>\n              {\n                isNewContact ?\n                  <>\n                    <Input\n                      name=\"email\"\n                      error={errors.email !== undefined ? true : false}\n                      inputRef={register(validations.email)}\n                      placeholder=\"john@gmail.com\"\n                      onClick={(event) => event.stopPropagation()}\n                    />\n                    <FormHelperText error>\n                      {errors.email ? errors.email.message : ''}\n                    </FormHelperText>\n                  </> :\n                  email\n              }\n            </h4>\n          </Grid>\n        </Hidden>\n        <Hidden xsDown>\n          <Grid item md={1} sm={1}>\n            {\n              isNewContact ?\n                <Button type=\"submit\" className={classes.editBtn}>\n                  <Check />\n                </Button> :\n                <IconButton size=\"small\" className={classes.editBtn} onClick={(event) => { editContact(id); event.stopPropagation() }}>\n                  <Edit />\n                </IconButton>\n            }\n          </Grid>\n        </Hidden>\n      </Grid>\n    </form>\n  );\n};\n\nContactListItem.propTypes = {\n  selectContact: PropTypes.func,\n  editContact: PropTypes.func,\n  isEditing: PropTypes.bool,\n}\n\nContactListItem.defaultProps = {\n  selectContact: () => { },\n  editContact: () => { },\n  isEditing: false,\n}\n\nexport default ContactListItem;","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport {\n  makeStyles,\n  Grid,\n  Box,\n  Avatar,\n  Input,\n  Fab,\n  IconButton,\n  Hidden,\n  FormHelperText,\n} from '@material-ui/core';\nimport {\n  Check,\n  Edit,\n} from '@material-ui/icons';\n\nconst useStyle = makeStyles(theme => ({\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  formWrapper: {\n    paddingLeft: '60px',\n    [theme.breakpoints.down(\"md\")]: {\n      padding: '20px 0px',\n    },\n  },\n  contactForm: {\n    backgroundColor: '#f1f1f1',\n    padding: '30px 40px',\n    width: '100%',\n    position: 'relative',\n    [theme.breakpoints.only(\"sm\")]: {\n      padding: '30px',\n    },\n    [theme.breakpoints.only(\"xs\")]: {\n      padding: '20px',\n    },\n  },\n  formHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    textAlign: 'center',\n    flexDirection: 'column',\n    paddingBottom: 40,\n    [theme.breakpoints.only(\"xs\")]: {\n      paddingBottom: 20,\n    }\n  },\n  avatar: {\n    height: '80px',\n    width: '80px',\n  },\n  fallbackText: {\n    fontSize: 28,\n  },\n  noBottomMargin: {\n    marginBottom: 0,\n  },\n  saveBtn: {\n    background: 'linear-gradient(to right, #fa8569, #ff4b6e)',\n    color: '#ffffffbf',\n  },\n  formRow: {\n    alignItems: \"baseline\",\n    padding: '10px 0px',\n    [theme.breakpoints.only(\"xs\")]: {\n      padding: '10px 0px',\n    }\n  },\n  editBtn: {\n    background: 'linear-gradient(to right, #fa8569, #ff4b6e)',\n    color: '#ffffffbf',\n    position: 'absolute',\n    right: 20\n  }\n}));\n\nconst ContactForm = ({ selectedContact, editable, updateContact, editContact }) => {\n\n  const classes = useStyle();\n\n  const { register, handleSubmit, errors } = useForm();\n\n  const validations = {\n    name: {\n      required: {\n        value: true,\n        message: \"This field is required\"\n      },\n      pattern: {\n        value: /[^\\s]+/,\n        message: \"Enter valid name\"\n      },\n      minLength: {\n        value: 2,\n        message: \"Enter valid name\",\n      },\n      maxLength: {\n        value: 40,\n        message: \"Enter valid name\",\n      },\n    },\n    about: {\n      required: {\n        value: true,\n        message: \"This field is required\"\n      },\n      pattern: {\n        value: /[^\\s]+/,\n        message: \"Enter valid about\"\n      },\n      minLength: {\n        value: 10,\n        message: \"Enter valid about\",\n      },\n      maxLength: {\n        value: 50,\n        message: \"Enter valid about\",\n      },\n    },\n    email: {\n      required: {\n        value: true,\n        message: \"This field is required\"\n      },\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n        message: \"Invalid email address\"\n      },\n      maxLength: {\n        value: 60,\n        message: \"Enter valid email\",\n      },\n    },\n    phone: {\n      required: {\n        value: true,\n        message: \"This field is required\"\n      },\n      pattern: {\n        value: /[+][(](\\d{1,5})[)][\\s](\\d{6,9})$/,\n        message: \"Enter valid phone\"\n      },\n    },\n    company: {\n      required: {\n        value: true,\n        message: \"This field is required\"\n      },\n      pattern: {\n        value: /[^\\s]+/,\n        message: \"Enter valid company name\"\n      },\n      minLength: {\n        value: 5,\n        message: \"Enter valid company name\",\n      },\n      maxLength: {\n        value: 40,\n        message: \"Enter valid company name\",\n      },\n    },\n    address: {\n      required: {\n        value: true,\n        message: \"This field is required\"\n      },\n      pattern: {\n        value: /[^\\s]+/,\n        message: \"Enter valid address\"\n      },\n      minLength: {\n        value: 10,\n        message: \"Enter valid address\",\n      },\n      maxLength: {\n        value: 100,\n        message: \"Enter valid address\",\n      },\n    },\n  };\n\n  const onSubmit = (data) => { updateContact(data) }\n\n  const display = (field, input = false) => {\n    return input ? selectedContact[field] : selectedContact[field] === '' || selectedContact[field] === undefined ? 'N/A' : selectedContact[field];\n  };\n\n  return (\n    <Grid item lg={6} xs={12}>\n      <Grid item container md={12} className={classes.formWrapper}>\n        <Box className={classes.contactForm}>\n          <Hidden smUp>\n            <IconButton size=\"small\" className={classes.editBtn} onClick={() => editContact(selectedContact.id)}>\n              <Edit />\n            </IconButton>\n          </Hidden>\n          <Box className={classes.formHeader}>\n            <Avatar className={classes.avatar} src={selectedContact.avatar}>\n              {display(\"name\").split(\" \").map((n) => n[0])}\n            </Avatar>\n            <h2 className={classes.noBottomMargin}>{display(\"name\")}</h2>\n            <small>{display(\"about\")}</small>\n          </Box>\n          <Grid container>\n            <Grid item container className={classes.formRow}>\n              <Grid item xs={12} sm={3}>\n                Full Name:\n              </Grid>\n              <Grid item xs={12} sm={9}>\n                {\n                  editable ?\n                    <Input\n                      fullWidth\n                      error={errors.name !== undefined}\n                      inputRef={register(validations.name)}\n                      defaultValue={display(\"name\", editable)}\n                      name=\"name\"\n                    /> :\n                    display(\"name\", false)\n                }\n                <FormHelperText error>{errors.name ? errors.name.message : ' '}</FormHelperText>\n              </Grid>\n            </Grid>\n            {\n              editable &&\n              <Grid item container className={classes.formRow}>\n                <Grid item xs={12} sm={3}>\n                  About:\n                  </Grid>\n                <Grid item xs={12} sm={9}>\n                  {\n                    editable ?\n                      <Input\n                        fullWidth\n                        disabled={!editable}\n                        disableUnderline={!editable}\n                        error={errors.about !== undefined}\n                        inputRef={register(validations.about)}\n                        defaultValue={display(\"about\", editable)}\n                        name=\"about\"\n                      /> :\n                      display(\"about\", false)\n                  }\n                  <FormHelperText error>{errors.about ? errors.about.message : ' '}</FormHelperText>\n                </Grid>\n              </Grid>\n            }\n            <Grid item container className={classes.formRow}>\n              <Grid item xs={12} sm={3}>\n                Email:\n              </Grid>\n              <Grid item xs={12} sm={9}>\n                {\n                  editable ?\n                    <Input\n                      fullWidth\n                      disabled={!editable}\n                      disableUnderline={!editable}\n                      error={errors.email !== undefined}\n                      inputRef={register(validations.email)}\n                      defaultValue={display(\"email\", editable)}\n                      name=\"email\"\n                    /> :\n                    display(\"email\", false)\n                }\n                <FormHelperText error>{errors.email ? errors.email.message : ' '}</FormHelperText>\n              </Grid>\n            </Grid>\n            <Grid item container className={classes.formRow}>\n              <Grid item xs={12} sm={3}>\n                Phone:\n              </Grid>\n              <Grid item xs={12} sm={9}>\n                {\n                  editable ?\n                    <Input\n                      fullWidth\n                      disabled={!editable}\n                      disableUnderline={!editable}\n                      error={errors.phone !== undefined}\n                      inputRef={register(validations.phone)}\n                      defaultValue={display(\"phone\", editable)}\n                      name=\"phone\"\n                    /> :\n                    display(\"phone\", false)\n                }\n                <FormHelperText error>{errors.phone ? errors.phone.message : ' '}</FormHelperText>\n              </Grid>\n            </Grid>\n            <Grid item container className={classes.formRow}>\n              <Grid item xs={12} sm={3}>\n                Company:\n              </Grid>\n              <Grid item xs={12} sm={9}>\n                {\n                  editable ?\n                    <Input\n                      fullWidth\n                      disabled={!editable}\n                      disableUnderline={!editable}\n                      error={errors.company !== undefined}\n                      inputRef={register(validations.company)}\n                      defaultValue={display(\"company\", editable)}\n                      name=\"company\"\n                    /> :\n                    display(\"company\", false)\n                }\n                <FormHelperText error>{errors.company ? errors.company.message : ' '}</FormHelperText>\n              </Grid>\n            </Grid>\n            <Grid item container className={classes.formRow}>\n              <Grid item xs={12} sm={3}>\n                Address:\n              </Grid>\n              <Grid item xs={12} sm={9}>\n                {\n                  editable ?\n                    <Input\n                      fullWidth\n                      disabled={!editable}\n                      disableUnderline={!editable}\n                      error={errors.address !== undefined}\n                      inputRef={register(validations.address)}\n                      defaultValue={display(\"address\", editable)}\n                      name=\"address\"\n                    /> :\n                    display(\"address\", false)\n                }\n                <FormHelperText error>{errors.address ? errors.address.message : ' '}</FormHelperText>\n              </Grid>\n            </Grid>\n            {\n              editable &&\n              <Grid item container justify=\"center\">\n                <Fab variant=\"extended\" className={classes.saveBtn} onClick={handleSubmit(onSubmit)}>\n                  <Check className={classes.extendedIcon} />\n                  Save\n                </Fab>\n              </Grid>\n            }\n          </Grid>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default ContactForm;","import React from 'react';\nimport {\n  Hidden,\n} from '@material-ui/core';\nimport ContactListItem from '../components/ContactListItem';\nimport ContactForm from '../components/ContactForm';\n\nconst ContactListBody = ({ contacts, selectedContact, selectContact, editContact, isEditing, updateContact, isAdding, saveContact, checkContact }) => {\n  return (\n    <>\n      {\n        contacts.map((contact) => {\n          return (\n            <React.Fragment key={contact.id}>\n              <ContactListItem\n                contact={contact}\n                active={contact.id === selectedContact.id}\n                selectContact={selectContact}\n                editContact={editContact}\n                saveContact={saveContact}\n                checkContact={checkContact}\n              />\n              {\n                contact.id === selectedContact.id &&\n                <Hidden lgUp>\n                  <ContactForm selectedContact={contact} editable={isEditing} editContact={editContact} updateContact={updateContact} />\n                </Hidden>\n              }\n            </React.Fragment>\n          );\n        })\n      }\n\n      {\n        isAdding &&\n        <ContactListItem\n          contact={selectedContact}\n          key={'newContact'}\n          active={true}\n          saveContact={saveContact}\n          isNewContact={isAdding}\n        />\n      }\n    </>\n  );\n};\n\nexport default ContactListBody;","import React from 'react';\nimport ContactListHeader from '../components/ContactListHeader';\nimport ContactListBody from '../components/ContactListBody';\nimport {\n  Grid,\n  makeStyles,\n} from '@material-ui/core';\n\nconst useStyle = makeStyles(theme => ({\n  noContacts: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '40vh'\n  }\n}));\n\nconst ContactList = ({ contacts, selectedContact, selectContact, editContact, isEditing, updateContact, saveContact, isAdding, checkContact, someSelected, allSelected, selectAll, deselectAll }) => {\n\n  const classes = useStyle();\n\n  return (\n    <Grid item lg={6} xs={12}>\n      <ContactListHeader\n        someSelected={someSelected}\n        allSelected={allSelected}\n        selectAll={selectAll}\n        deselectAll={deselectAll}\n      />\n      <ContactListBody\n        contacts={contacts}\n        selectedContact={selectedContact}\n        selectContact={selectContact}\n        editContact={editContact}\n        isEditing={isEditing}\n        updateContact={updateContact}\n        isAdding={isAdding}\n        saveContact={saveContact}\n        checkContact={checkContact}\n      />\n      {\n        contacts.length === 0 &&\n        <h3 className={classes.noContacts}>\n          No Contacts\n        </h3>\n      }\n    </Grid>\n  );\n};\n\nexport default ContactList;","import React from 'react';\nimport SceneHeader from '../components/SceneHeader';\nimport ActionBar from '../components/ActionBar';\nimport ContactList from '../components/ContactList';\nimport ContactForm from '../components/ContactForm';\nimport {\n  Grid,\n  withStyles,\n  Hidden,\n} from '@material-ui/core';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n\nconst styles = theme => ({\n  outerSpacing: {\n    padding: '50px 60px',\n    [theme.breakpoints.only(\"sm\")]: {\n      padding: '30px 40px',\n    },\n    [theme.breakpoints.only(\"xs\")]: {\n      padding: '20px',\n    },\n  },\n  innerSpacing: {\n    padding: '0px 40px',\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: '0px',\n    },\n  }\n});\n\nlet contacts = [\n  {\n    \"id\": \"1\",\n    \"name\": \"Joey Tribbiani\",\n    \"about\": \"Actor\",\n    \"email\": \"joeyt@friends.com\",\n    \"phone\": \"+(069) 123-6547\",\n    \"company\": \"Actor Acadamy\",\n    \"address\": \"2738  Liberty Avenue, California\"\n  },\n  {\n    \"id\": \"2\",\n    \"name\": \"Rachel Green\",\n    \"about\": \"Fashion Designer\",\n    \"email\": \"greenrach@friends.com\",\n    \"phone\": \"718-896-1555\",\n    \"company\": \"Ralph Lauren\",\n    \"address\": \"377  Abia Martin Drive, Bethpage, New York\"\n  },\n  {\n    \"id\": \"3\",\n    \"name\": \"Ross Geller\",\n    \"about\": \"Paleontologist\",\n    \"email\": \"rossaurus@friends.com\",\n    \"phone\": \"\",\n    \"company\": \"Dianosaur Museum\",\n    \"address\": \"4437  Plainfield Avenue, HOPKINTON, Massachusetts\"\n  },\n  {\n    \"id\": \"4\",\n    \"name\": \"Phoebe Buffay\",\n    \"about\": \"Masseuse\",\n    \"email\": \"phebes@friends.com\",\n    \"phone\": \"802-232-8909\",\n    \"company\": \"\",\n    \"address\": \"\"\n  },\n  {\n    \"id\": \"5\",\n    \"name\": \"Monica Geller\",\n    \"about\": \"Chef\",\n    \"email\": \"mon@friends.com\",\n    \"phone\": \"\",\n    \"company\": \"\",\n    \"address\": \"\"\n  },\n  {\n    \"id\": \"6\",\n    \"name\": \"Chandler Bing\",\n    \"about\": \"Copywriter\",\n    \"email\": \"mrbing@friends.com\",\n    \"phone\": \"\",\n    \"company\": \"\",\n    \"address\": \"4709  Roosevelt Road, Dodge City, Kansas\"\n  },\n  {\n    \"id\": \"7\",\n    \"name\": \"Gunther\",\n    \"about\": \"Cafe Owner\",\n    \"email\": \"gunther@friends.com\",\n    \"phone\": \"330-443-9039\",\n    \"company\": \"Central Perk\",\n    \"address\": \"\"\n  },\n  {\n    \"id\": \"8\",\n    \"name\": \"Jill Green\",\n    \"about\": \"Rachel's sister\",\n    \"email\": \"jgreen@gmail.com\",\n    \"phone\": \"\",\n    \"company\": \"\",\n    \"address\": \"2035  Nixon Avenue, Kingsport, Tennessee\"\n  },\n  {\n    \"id\": \"9\",\n    \"name\": \"Jack Geller\",\n    \"about\": \"Ross' father\",\n    \"email\": \"jackg@gmail.com\",\n    \"phone\": \"908-617-5594\",\n    \"company\": \"\",\n    \"address\": \"3033  Patterson Road, SPANGLE, Washington\"\n  },\n];\n\nclass Local extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: contacts,\n      selectedContact: {},\n      editable: false,\n      isAdding: false,\n      searchQuery: '',\n    }\n  }\n\n  setSelectedContact = (id) => {\n    const { data, isAdding, selectedContact, editable } = this.state;\n    const stillAdding = isAdding && id === selectedContact.id;\n    this.setState({\n      selectedContact: stillAdding ? selectedContact : data.find(contact => contact.id === id),\n      isAdding: stillAdding,\n      editable: editable && id === selectedContact.id,\n    });\n  };\n\n  setEditable = (id) => {\n    const { data, selectedContact } = this.state;\n    this.setState({\n      editable: (id === selectedContact.id || selectedContact.id === undefined),\n      selectedContact: data.find(contact => contact.id === id),\n      isAdding: false,\n    });\n  };\n\n  updateContact = (updatedContact) => {\n    var { selectedContact } = this.state;\n    var index = contacts.findIndex(contact => contact.id === selectedContact.id);\n    contacts[index] = Object.assign({}, contacts[index], updatedContact);\n    this.setState({\n      data: contacts,\n      editable: false,\n    });\n  };\n\n  addContact = () => {\n    this.setState({\n      editable: false,\n      isAdding: true,\n      selectedContact: { \"id\": contacts.length + 1 },\n    });\n  }\n\n  saveContact = (newContact) => {\n    const { selectedContact } = this.state;\n    contacts.push({\n      ...selectedContact,\n      ...newContact,\n    });\n\n    this.setState({\n      data: contacts,\n      isAdding: false,\n      searchQuery: '',\n    });\n  }\n\n  checkContact = (id) => {\n    var { data } = this.state;\n    const index = data.findIndex(contact => contact.id === id);\n    data[index].checked = !data[index].checked;\n\n    this.setState({\n      data: data,\n    });\n  }\n\n  selectAll = () => {\n    var { data } = this.state;\n\n    data.forEach(contact => contact.checked = true);\n\n    this.setState({\n      data: data,\n    });\n  }\n\n  deselectAll = () => {\n    var { data } = this.state;\n\n    data.forEach(contact => contact.checked = false);\n\n    this.setState({\n      data: data,\n    });\n  }\n\n  deleteContact = () => {\n    contacts = contacts.filter((contact) => !contact.checked);\n\n    this.setState({\n      data: contacts,\n      searchQuery: '',\n      editable: false,\n      isAdding: false,\n      selectedContact: {},\n    });\n  }\n\n  searchContact = ({ target }) => {\n    var { value } = target;\n\n    const filteredData = contacts.filter((contact) => contact.name.toLowerCase().includes(value.toLowerCase()));\n\n    this.setState({\n      data: filteredData,\n      searchQuery: value,\n      editable: false,\n      isAdding: false,\n      selectedContact: {},\n    });\n  }\n\n  render = () => {\n    const { classes } = this.props;\n\n    let { data, selectedContact, editable, isAdding, searchQuery } = this.state;\n\n    var allSelected = data.length && data.every(contact => contact.checked);\n    var someSelected = data.some(contact => contact.checked);\n\n    return (\n      <Grid container className={classes.outerSpacing} >\n        <SceneHeader />\n        <Grid container item md={12} className={classes.innerSpacing}>\n          <ActionBar\n            addContact={this.addContact}\n            deleteContact={this.deleteContact}\n            searchQuery={searchQuery}\n            searchContact={this.searchContact}\n            someSelected={someSelected}\n          />\n          <ContactList\n            contacts={data}\n            selectedContact={selectedContact}\n            selectContact={this.setSelectedContact}\n            editContact={this.setEditable}\n            updateContact={this.updateContact}\n            isEditing={editable}\n            isAdding={isAdding}\n            saveContact={this.saveContact}\n            checkContact={this.checkContact}\n            selectAll={this.selectAll}\n            deselectAll={this.deselectAll}\n            allSelected={allSelected}\n            someSelected={someSelected}\n          />\n          <Hidden mdDown>\n            <ContactForm selectedContact={data.find(contact => contact.id === selectedContact.id) || {}} editable={editable} updateContact={this.updateContact} />\n          </Hidden>\n        </Grid>\n      </Grid >\n    );\n  };\n}\n\nexport default withStyles(styles)(Local);","import React from 'react';\nimport clsx from 'clsx';\nimport AppDrawer from './components/AppDrawer';\nimport AppHeader from './components/AppHeader';\nimport Local from './scenes/Local';\nimport {\n  withStyles,\n  Backdrop,\n  Hidden,\n} from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  content: {\n    width: '100%'\n  },\n  contentPosition: {\n    position: \"static\",\n    [theme.breakpoints.only(\"xs\")]: {\n      position: \"fixed\",\n    },\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer - 1,\n  }\n});\n\nclass ContactApp extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      drawer: 'semi'\n    }\n  }\n\n  handleFullDrawerToggle = () => {\n    this.setState({\n      drawer: this.state.drawer === \"open\" ? \"close\" : \"open\"\n    })\n  }\n\n  handleMiniDrawerToggle = () => {\n    this.setState({\n      drawer: this.state.drawer === \"semi\" ? \"open\" : \"semi\"\n    })\n  }\n\n  render = () => {\n    const { classes } = this.props;\n    const { drawer } = this.state;\n    return (\n      <div className={classes.root} >\n        <Hidden smUp>\n          <Backdrop open={drawer === \"open\"} className={classes.backdrop}></Backdrop>\n        </Hidden>\n        <AppDrawer\n          open={drawer}\n          handleMiniDrawerToggle={this.handleMiniDrawerToggle}\n        />\n        <div className={clsx(classes.content, drawer === \"open\" && classes.contentPosition)}>\n          <AppHeader\n            handleFullDrawerToggle={this.handleFullDrawerToggle}\n          />\n          <Local />\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default withStyles(styles)(ContactApp);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ContactApp from './ContactApp';\nimport 'typeface-roboto';\n\nimport './style.scss';\n\nReactDOM.render(\n  <ContactApp />,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}