{"version":3,"sources":["components/AppDrawer.js","components/AppHeader.js","components/SceneHeader.js","components/ActionBar.js","components/ContactListHeader.js","components/ContactListItem.js","components/NewContactListItem.js","components/ContactForm.js","components/ContactListBody.js","components/ContactList.js","scenes/Local.js","scenes/Twitter.js","scenes/GitHub.js","ContactApp.js","index.js"],"names":["useStyles","makeStyles","theme","drawer","backgroundImage","color","boxShadow","drawerSemi","width","spacing","overflow","breakpoints","only","drawerOpen","toggleBtn","padding","textAlign","colorWhite","menu","paddingTop","AppDrawer","open","handleMiniDrawerToggle","classes","Drawer","variant","className","clsx","paper","IconButton","onClick","ChevronLeft","ChevronRight","List","icon","name","path","map","tab","index","exact","to","key","ListItem","button","ListItemIcon","ListItemText","primary","useStyle","header","minHeight","Header","handleFullDrawerToggle","Hidden","smUp","Menu","display","alignItems","headerIcon","background","WebkitBackgroundClip","WebkitTextFillColor","fontSize","headerTitle","SceneHeader","Grid","item","md","Box","fontWeight","innerSpacing","searchBar","backgroundColor","borderRadius","searchBarSpacing","down","searchInput","flex","btnWrapper","justifyContent","actionBtn","textTransform","height","margin","minWidth","up","ActionBar","addContact","someSelected","deleteContact","searchQuery","searchContact","container","lg","sm","xs","Paper","elevation","InputBase","placeholder","value","onChange","inputProps","maxLength","Search","Button","smDown","disabled","Delete","style","contactListHeader","ContactListHeader","allSelected","deselectAll","selectAll","Checkbox","indeterminate","checked","contact","cursor","basicInfo","avatarWrapper","contactAvatar","contactName","flexDirection","ContactListItem","selectContact","active","isNewContact","checkContact","id","avatar","email","type","editBtn","Check","event","stopPropagation","Avatar","src","str","hash","i","length","charCodeAt","colour","toString","substr","stringToColour","split","n","Typography","noWrap","mdUp","zeroMinWidth","noMargin","saveBtn","maxWidth","maxHeight","closeBtn","NewContactListItem","saveContact","cancelAddContact","useForm","register","handleSubmit","errors","useState","emailError","setEmailError","validations","required","message","pattern","minLength","onSubmit","data","TextField","autoFocus","label","error","undefined","inputRef","helperText","justify","Close","extendedIcon","marginRight","formWrapper","paddingLeft","contactForm","position","formHeader","paddingBottom","fallbackText","marginTop","formRow","right","cancelBtn","backBtn","left","ContactForm","selectedContact","editable","updateContact","editContact","deselectContact","useEffect","handleAction","func","field","input","wrap","Fab","size","ArrowBack","Edit","component","Input","fullWidth","defaultValue","FormHelperText","disableUnderline","about","phone","company","address","ContactListBody","contacts","isEditing","isAdding","Fragment","lgUp","noContacts","ContactList","Local","props","setSelectedContact","state","stillAdding","setState","find","setEditable","updatedContact","some","console","log","findIndex","Object","assign","push","forEach","filter","target","filteredData","toLowerCase","includes","render","every","outerSpacing","mdDown","React","Component","withStyles","Twitter","GitHub","ContactApp","root","Backdrop","backdrop","basename","content","contentPosition","AppHeader","zIndex","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d8a2072c.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  NavLink\n} from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport {\n  makeStyles,\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from '@material-ui/core';\nimport {\n  ChevronLeft,\n  ChevronRight,\n  PermIdentity as Local,\n  GitHub,\n  Twitter,\n} from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    backgroundImage: 'linear-gradient(#fa8569, #ff4b6e)',\n    color: '#ffffffbf',\n    boxShadow: '0px 0px 7px darkgrey',\n  },\n  drawerSemi: {\n    width: theme.spacing(7.5) + 1,\n    overflow: 'hidden',\n    [theme.breakpoints.only(\"xs\")]: {\n      width: '0px'\n    }\n  },\n  drawerOpen: {\n    width: theme.spacing(20) + 1,\n  },\n  toggleBtn: {\n    padding: 4,\n    textAlign: 'right',\n  },\n  colorWhite: {\n    color: '#ffffffbf',\n  },\n  menu: {\n    paddingTop: theme.spacing(4) + 1,\n  },\n}));\n\nconst AppDrawer = ({ open, handleMiniDrawerToggle }) => {\n  const classes = useStyles();\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      className={clsx({\n        [classes.drawerOpen]: open === \"open\",\n        [classes.drawerSemi]: open === \"semi\",\n      })}\n      classes={{\n        paper: clsx(classes.drawer, {\n          [classes.drawerOpen]: open === \"open\",\n          [classes.drawerSemi]: open === \"semi\",\n        })\n      }}\n    >\n      <div className={classes.toggleBtn}>\n        <IconButton color=\"inherit\" onClick={handleMiniDrawerToggle}>\n          {open === \"open\" ? <ChevronLeft /> : <ChevronRight />}\n        </IconButton>\n      </div>\n      <List className={classes.menu}>\n        {\n          [\n            { icon: <Local />, name: \"Local\", path: \"/\" },\n            { icon: <Twitter />, name: \"Twitter\", path: \"/twitter\" },\n            { icon: <GitHub />, name: \"GitHub\", path: \"/github\" }\n          ].map((tab, index) =>\n            <NavLink exact to={tab.path} key={tab.name}>\n              <ListItem button key={tab.name} className=\"menuItem\" >\n                <ListItemIcon className={classes.colorWhite}>{tab.icon}</ListItemIcon>\n                <ListItemText primary={tab.name} />\n              </ListItem>\n            </NavLink>\n          )\n        }\n      </List>\n    </Drawer>\n  );\n};\n\nexport default AppDrawer;","import React from 'react';\nimport {\n  makeStyles,\n  IconButton,\n  Hidden,\n} from '@material-ui/core';\nimport {\n  Menu\n} from '@material-ui/icons';\n\nconst useStyle = makeStyles(theme => ({\n  header: {\n    minHeight: 50,\n    width: 100 + '%',\n    boxShadow: '0px 0px 5px darkgrey'\n  }\n}));\n\nconst Header = ({ handleFullDrawerToggle }) => {\n\n  const classes = useStyle();\n\n  return (\n    <header className={classes.header}>\n      <Hidden smUp>\n        <IconButton onClick={handleFullDrawerToggle}>\n          <Menu />\n        </IconButton>\n      </Hidden>\n    </header>\n  );\n};\n\nexport default Header;","import React from 'react';\nimport {\n  makeStyles,\n  Grid,\n  Box\n} from '@material-ui/core';\n\nconst useStyle = makeStyles(theme => ({\n  header: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  headerIcon: {\n    background: 'linear-gradient(#fa8569, #ff4b6e)',\n    WebkitBackgroundClip: 'text',\n    WebkitTextFillColor: 'transparent',\n    color: '#ffffffbf',\n    fontSize: 34\n  },\n  headerTitle: {\n    padding: '0px 15px'\n  }\n}));\n\nconst SceneHeader = () => {\n  const classes = useStyle();\n\n  return (\n    <Grid item md={12} className={classes.header}>\n      <Box className={`fas fa-address-book fa-flip-horizontal ${classes.headerIcon}`} />\n      <Box className={classes.headerTitle}>\n        <Box fontWeight={500} fontSize={28}>Contacts</Box>\n        <Box fontSize={12}>Welcome to FirstCRM Contact page</Box>\n      </Box>\n    </Grid>\n  );\n};\n\nexport default SceneHeader;","import React from 'react';\nimport {\n  makeStyles,\n  Grid,\n  Paper,\n  InputBase,\n  Button,\n  Hidden,\n} from '@material-ui/core';\nimport {\n  Search,\n  Delete,\n} from '@material-ui/icons';\n\nconst useStyle = makeStyles(theme => ({\n  innerSpacing: {\n    padding: '40px 50px',\n    [theme.breakpoints.only(\"xs\")]: {\n      padding: '15px 0px',\n    },\n  },\n  searchBar: {\n    display: 'flex',\n    alignItems: 'center',\n    backgroundColor: '#f1f1f1',\n    borderRadius: 50,\n    padding: '6px 16px',\n  },\n  searchBarSpacing: {\n    padding: '50px 0px',\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: '30px 0px',\n    },\n  },\n  searchInput: {\n    flex: 1,\n    fontSize: 14,\n  },\n  btnWrapper: {\n    padding: '50px 20px',\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: '30px 10px',\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      display: 'flex',\n      justifyContent: 'space-around',\n      padding: '0px 10px 30px 10px',\n    },\n  },\n  actionBtn: {\n    background: 'linear-gradient(to right, #fa8569, #ff4b6e)',\n    color: '#ffffffbf',\n    textTransform: 'none',\n    height: '100%',\n    margin: '0px 2px',\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: '0px 6px',\n      minWidth: '48px',\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      minWidth: '90px',\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      minWidth: '126px',\n    },\n  },\n}));\n\nconst ActionBar = ({ addContact, someSelected, deleteContact, searchQuery, searchContact }) => {\n  const classes = useStyle();\n\n  return (\n    <Grid container item md={12}>\n      <Grid item lg={4} md={6} sm={8} xs={12} className={classes.searchBarSpacing}>\n        <Paper elevation={0} className={classes.searchBar}>\n          <InputBase\n            className={classes.searchInput}\n            placeholder=\"Search contacts\"\n            value={searchQuery}\n            onChange={searchContact}\n            inputProps={{ maxLength: 40 }}\n          />\n          <Search />\n        </Paper>\n      </Grid>\n      <Grid item lg={4} md={6} sm={4} xs={12} className={classes.btnWrapper}>\n        <Button variant=\"contained\" className={classes.actionBtn} onClick={addContact}>\n          + <Hidden only=\"sm\">Add<Hidden smDown> Contact</Hidden></Hidden>\n        </Button>\n        <Button variant=\"contained\" className={classes.actionBtn} onClick={deleteContact} disabled={!someSelected} >\n          <Delete style={{ fontSize: 16 }} /> <Hidden only=\"sm\">Delete</Hidden>\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ActionBar;","import React from 'react';\nimport {\n  makeStyles,\n  Grid,\n  Checkbox,\n  Hidden,\n} from '@material-ui/core';\n\nconst useStyle = makeStyles(theme => ({\n  contactListHeader: {\n    backgroundColor: '#f1f1f1',\n    padding: '5px 10px',\n  }\n}));\n\nconst ContactListHeader = ({ someSelected, allSelected, deselectAll, selectAll }) => {\n  const classes = useStyle();\n\n  return (\n    <Grid container className={classes.contactListHeader}>\n      <Grid item container xs={12} style={{ alignItems: 'center' }}>\n        <Grid item md={1} xs={2} sm={2}>\n          <Checkbox\n            onClick={() => allSelected || someSelected ? deselectAll() : selectAll()}\n            color=\"primary\"\n            indeterminate={someSelected && !allSelected}\n            checked={allSelected || someSelected}\n          />\n        </Grid>\n        <Grid item md={5} xs={10} sm={9}>Name</Grid>\n        <Hidden smDown>\n          <Grid item md={6}>Email</Grid>\n        </Hidden>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ContactListHeader;","import React from 'react';\nimport clsx from \"clsx\";\nimport {\n  Grid,\n  Checkbox,\n  Box,\n  Avatar,\n  Button,\n  makeStyles,\n  Hidden,\n  Typography,\n} from '@material-ui/core';\nimport {\n  Check,\n} from '@material-ui/icons';\n\nconst useStyle = makeStyles(theme => ({\n  contact: {\n    margin: '10px 0px',\n    padding: '0px 10px',\n    '&:hover,&.active': {\n      backgroundColor: '#e8ecef',\n      cursor: 'pointer',\n    }\n  },\n  basicInfo: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  avatarWrapper: {\n    padding: '10px 10px 10px 0px',\n  },\n  contactAvatar: {\n    height: '50px',\n    width: '50px',\n  },\n  contactName: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n}));\n\nconst ContactListItem = ({ contact, selectContact, active, isNewContact, checkContact }) => {\n  const classes = useStyle();\n\n  const { id, avatar, name, email, checked } = contact;\n\n  const stringToColour = (str) => {\n    var hash = 0;\n    for (var i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    var colour = '#';\n    for (i = 0; i < 3; i++) {\n      var value = (hash >> (i * 8)) & 0xFF;\n      colour += ('00' + value.toString(16)).substr(-2);\n    }\n\n    return colour + 'bf';\n  }\n\n  return (\n    <Grid container\n      alignItems=\"center\"\n      name=\"contactItem\"\n      className={clsx(classes.contact, active && 'active')}\n      onClick={() => selectContact(id)}\n    >\n      <Grid item md={1} xs={2} sm={2}>\n        {isNewContact ?\n          <Button type=\"submit\" className={classes.editBtn}>\n            <Check />\n          </Button> :\n          <Checkbox\n            onClick={(event) => { checkContact(id); event.stopPropagation(); }}\n            color=\"primary\"\n            checked={checked || false}\n          />\n        }\n      </Grid>\n      <Grid item md={5} xs={10} sm={9}>\n        <Box className={classes.basicInfo}>\n          <Box className={classes.avatarWrapper}>\n            <Avatar\n              src={avatar}\n              className={classes.contactAvatar}\n              style={{\n                backgroundColor: stringToColour(name + email)\n              }} >\n              {name.split(\" \").map((n) => n[0])}\n            </Avatar>\n          </Box>\n          <Box className={classes.contactName} minWidth={0}>\n            <Typography noWrap variant=\"subtitle1\"><b>{name}</b></Typography>\n            <small>\n              <Hidden mdUp>\n                <Typography noWrap>{email}</Typography>\n              </Hidden>\n            </small>\n          </Box>\n        </Box>\n      </Grid>\n      <Hidden smDown>\n        <Grid item md={6} zeroMinWidth>\n          <Typography noWrap variant=\"subtitle1\"><b>{email}</b></Typography>\n        </Grid>\n      </Hidden>\n    </Grid>\n  );\n};\n\nexport default ContactListItem;","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport clsx from \"clsx\";\nimport {\n  Grid,\n  Box,\n  Button,\n  makeStyles,\n  Hidden,\n  TextField\n} from \"@material-ui/core\";\nimport { Check, Close } from \"@material-ui/icons\";\n\nconst useStyle = makeStyles(theme => ({\n  contact: {\n    margin: \"10px 0px\",\n    padding: \"18px 20px\",\n    \"&:hover,&.active\": {\n      backgroundColor: \"#e8ecef\",\n      cursor: \"pointer\"\n    }\n  },\n  contactName: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n  noMargin: {\n    margin: 0\n  },\n  saveBtn: {\n    background: \"linear-gradient(to right, #ffffff, #e8ecef)\",\n    color: \"#000000bf\",\n    padding: 0,\n    margin: \"0px 2px\",\n    maxWidth: 30,\n    minWidth: 30,\n    maxHeight: 30,\n    minHeight: 30,\n    borderRadius: \"50%\",\n    boxShadow: \"1px 1px 2px grey\"\n  },\n  closeBtn: {\n    background: \"linear-gradient(to right, #fa8569, #ff4b6e)\",\n    color: \"#ffffffbf\",\n    padding: 0,\n    margin: \"0px 2px\",\n    maxWidth: 30,\n    minWidth: 30,\n    maxHeight: 30,\n    minHeight: 30,\n    borderRadius: \"50%\",\n    boxShadow: \"1px 1px 2px grey\"\n  }\n}));\n\nconst NewContactListItem = ({ saveContact, cancelAddContact }) => {\n  const classes = useStyle();\n\n  var { register, handleSubmit, errors } = useForm();\n\n  const [emailError, setEmailError] = useState(\"\");\n\n  const validations = {\n    name: {\n      required: {\n        value: true,\n        message: \"This field is required\"\n      },\n      pattern: {\n        value: /[^\\s]+/,\n        message: \"Enter valid name\"\n      },\n      minLength: {\n        value: 2,\n        message: \"Enter at least 2 characters\"\n      },\n      maxLength: {\n        value: 40,\n        message: \"Enter no more than 40 characters\"\n      }\n    },\n    email: {\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n        message: \"Enter valid email\"\n      },\n      maxLength: {\n        value: 60,\n        message: \"Enter no more than 60 characters\"\n      }\n    }\n  };\n\n  const onSave = data => {\n    var res = saveContact(data);\n    if (!res) setEmailError(\"Email already exists\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSave)}>\n      <Grid\n        container\n        alignItems=\"center\"\n        name=\"contactItem\"\n        className={clsx(classes.contact, \"active\")}\n      >\n        <Grid item xs={8} sm={5}>\n          <Box className={classes.basicInfo}>\n            <Box className={classes.contactName}>\n              <h3 className={classes.noMargin}>\n                <TextField\n                  autoFocus\n                  label=\"Full Name\"\n                  name=\"name\"\n                  error={errors.name !== undefined ? true : false}\n                  inputRef={register(validations.name)}\n                  placeholder=\"John Doe\"\n                  onClick={event => event.stopPropagation()}\n                  helperText={errors.name ? errors.name.message : \" \"}\n                />\n              </h3>\n              <small>\n                <Hidden smUp>\n                  <TextField\n                    style={{ fontSize: 10 }}\n                    label=\"Email\"\n                    name=\"email\"\n                    error={errors.email !== undefined || emailError.length > 0}\n                    inputRef={register(validations.email)}\n                    placeholder=\"john@gmail.com\"\n                    onClick={event => event.stopPropagation()}\n                    helperText={\n                      errors.email || emailError\n                        ? errors.email\n                          ? errors.email.message\n                          : emailError\n                        : \" \"\n                    }\n                  />\n                </Hidden>\n              </small>\n            </Box>\n          </Box>\n        </Grid>\n        <Hidden only=\"xs\">\n          <Grid item sm={5}>\n            <h4 className={classes.noMargin}>\n              <TextField\n                label=\"Email\"\n                name=\"email\"\n                error={errors.email !== undefined || emailError.length > 0}\n                inputRef={register(validations.email)}\n                placeholder=\"john@gmail.com\"\n                onClick={event => event.stopPropagation()}\n                helperText={\n                  errors.email || emailError\n                    ? errors.email\n                      ? errors.email.message\n                      : emailError\n                    : \" \"\n                }\n              />\n            </h4>\n          </Grid>\n        </Hidden>\n        <Grid item xs={4} sm={2} container justify=\"flex-end\">\n          <Button type=\"submit\" className={classes.saveBtn}>\n            <Check />\n          </Button>\n          <Button\n            className={classes.closeBtn}\n            onClick={() => cancelAddContact()}\n          >\n            <Close />\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n};\n\nexport default NewContactListItem;\n","import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  makeStyles,\n  Grid,\n  Box,\n  Avatar,\n  Input,\n  Fab,\n  FormHelperText,\n  Typography,\n} from \"@material-ui/core\";\nimport { Check, Edit, Close, ArrowBack } from \"@material-ui/icons\";\n\nconst useStyle = makeStyles(theme => ({\n  extendedIcon: {\n    marginRight: theme.spacing(1)\n  },\n  formWrapper: {\n    paddingLeft: \"60px\",\n    [theme.breakpoints.down(\"md\")]: {\n      padding: \"20px 0px\"\n    }\n  },\n  contactForm: {\n    backgroundColor: \"#f1f1f1\",\n    padding: \"30px 40px\",\n    width: \"100%\",\n    position: \"relative\",\n    [theme.breakpoints.only(\"sm\")]: {\n      padding: \"30px\"\n    },\n    [theme.breakpoints.only(\"xs\")]: {\n      padding: \"20px\"\n    }\n  },\n  formHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    flexDirection: \"column\",\n    paddingBottom: 40,\n    [theme.breakpoints.only(\"xs\")]: {\n      paddingBottom: 20\n    }\n  },\n  avatar: {\n    height: \"80px\",\n    width: \"80px\"\n  },\n  fallbackText: {\n    fontSize: 28\n  },\n  marginTop: {\n    marginTop: 20\n  },\n  saveBtn: {\n    background: \"linear-gradient(to right, #fa8569, #ff4b6e)\",\n    color: \"#ffffffbf\"\n  },\n  formRow: {\n    alignItems: \"baseline\",\n    padding: \"10px 0px\",\n    [theme.breakpoints.only(\"xs\")]: {\n      padding: \"10px 0px\"\n    }\n  },\n  editBtn: {\n    background: \"linear-gradient(to right, #fa8569, #ff4b6e)\",\n    color: \"#ffffffbf\",\n    position: \"absolute\",\n    right: 30,\n    [theme.breakpoints.only(\"xs\")]: {\n      right: 20\n    }\n  },\n  cancelBtn: {\n    background: \"linear-gradient(to right, #ffffff, #e8ecef)\",\n    position: \"absolute\",\n    color: \"#000000fb\",\n    right: 30,\n    [theme.breakpoints.only(\"xs\")]: {\n      right: 20\n    }\n  },\n  backBtn: {\n    background: \"linear-gradient(to right, #ffffff, #e8ecef)\",\n    position: \"absolute\",\n    color: \"#000000fb\",\n    left: 30,\n    [theme.breakpoints.only(\"xs\")]: {\n      left: 20\n    }\n  }\n}));\n\nconst ContactForm = ({\n  selectedContact,\n  editable,\n  updateContact,\n  editContact,\n  deselectContact\n}) => {\n  const classes = useStyle();\n\n  const [emailError, setEmailError] = useState(\"\");\n\n  useEffect(() => {\n    setEmailError(\"\");\n  }, []);\n\n  const stringToColour = str => {\n    var hash = 0;\n    for (var i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    var colour = \"#\";\n    for (i = 0; i < 3; i++) {\n      var value = (hash >> (i * 8)) & 0xff;\n      colour += (\"00\" + value.toString(16)).substr(-2);\n    }\n\n    return colour + \"bf\";\n  };\n\n  const { register, handleSubmit, errors } = useForm();\n\n  const validations = {\n    name: {\n      required: {\n        value: true,\n        message: \"This field is required\"\n      },\n      pattern: {\n        value: /[^\\s]+/,\n        message: \"Enter valid name\"\n      },\n      minLength: {\n        value: 2,\n        message: \"Enter at least 2 characters\"\n      },\n      maxLength: {\n        value: 40,\n        message: \"Enter no more than 40 characters\"\n      }\n    },\n    about: {\n      required: {\n        value: true,\n        message: \"This field is required\"\n      },\n      pattern: {\n        value: /[^\\s]+/,\n        message: \"Enter valid about\"\n      },\n      minLength: {\n        value: 10,\n        message: \"Enter at least 10 characters\"\n      },\n      maxLength: {\n        value: 50,\n        message: \"Enter no more than 50 characters\"\n      }\n    },\n    email: {\n      required: {\n        value: true,\n        message: \"This field is required\"\n      },\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n        message: \"Invalid email address\"\n      },\n      maxLength: {\n        value: 60,\n        message: \"Enter no more than 60 characters\"\n      }\n    },\n    phone: {\n      required: {\n        value: true,\n        message: \"This field is required\"\n      },\n      pattern: {\n        value: /[+][(](\\d{1,5})[)][\\s](\\d{6,10})$/,\n        message: \"Enter valid phone\"\n      }\n    },\n    company: {\n      required: {\n        value: true,\n        message: \"This field is required\"\n      },\n      pattern: {\n        value: /[^\\s]+/,\n        message: \"Enter valid company name\"\n      },\n      minLength: {\n        value: 5,\n        message: \"Enter at least 5 characters\"\n      },\n      maxLength: {\n        value: 40,\n        message: \"Enter no more than 40 characters\"\n      }\n    },\n    address: {\n      required: {\n        value: true,\n        message: \"This field is required\"\n      },\n      pattern: {\n        value: /[^\\s]+/,\n        message: \"Enter valid address\"\n      },\n      minLength: {\n        value: 10,\n        message: \"Enter  at least 10 characters\"\n      },\n      maxLength: {\n        value: 100,\n        message: \"Enter no more than 100 characters\"\n      }\n    }\n  };\n\n  const onSubmit = data => {\n    var res = updateContact({...data, id: selectedContact.id});\n    if (!res) setEmailError(\"Email already exists\");\n  };\n\n  const handleAction = (func) => {\n    func(selectedContact.id);\n    setEmailError('');\n  }\n\n  const display = (field, input = false) => {\n    return input\n      ? selectedContact[field]\n      : selectedContact[field] === \"\" || selectedContact[field] === undefined\n      ? \"N/A\"\n      : selectedContact[field];\n  };\n\n  return (\n    <Grid item lg={6} xs={12}>\n      <Grid item container wrap=\"nowrap\" md={12} className={classes.formWrapper}>\n        <Box className={classes.contactForm}>\n          {selectedContact.id > 0 && (\n            <>\n              <Fab\n                size=\"small\"\n                className={classes.backBtn}\n                onClick={() => handleAction(deselectContact)}\n              >\n                <ArrowBack />\n              </Fab>\n              <Fab\n                size=\"small\"\n                className={editable ? classes.cancelBtn : classes.editBtn}\n                onClick={() => handleAction(editContact)}\n              >\n                {editable ? <Close /> : <Edit />}\n              </Fab>\n            </>\n          )}\n          <Box className={classes.formHeader}>\n            <Avatar\n              className={classes.avatar}\n              src={selectedContact.avatar}\n              style={{\n                backgroundColor: stringToColour(\n                  display(\"name\") + display(\"email\", true)\n                )\n              }}\n            >\n              {display(\"name\")\n                .split(\" \")\n                .map(n => n[0])}\n            </Avatar>\n            <Typography component=\"h2\" variant=\"h5\" className={classes.marginTop}><b>{display(\"name\")}</b></Typography>\n            <small>{display(\"about\")}</small>\n          </Box>\n          <Grid container>\n            <Grid item container className={classes.formRow}>\n              <Grid item xs={12} sm={3}>\n                Full Name:\n              </Grid>\n              <Grid item xs={12} sm={9}>\n                {editable ? (\n                  <Input\n                    fullWidth\n                    error={errors.name !== undefined}\n                    inputRef={register(validations.name)}\n                    defaultValue={display(\"name\", editable)}\n                    name=\"name\"\n                    placeholder=\"John Doe\"\n                  />\n                ) : (\n                  display(\"name\", false)\n                )}\n                <FormHelperText error>\n                  {errors.name ? errors.name.message : \" \"}\n                </FormHelperText>\n              </Grid>\n            </Grid>\n            {editable && (\n              <Grid item container className={classes.formRow}>\n                <Grid item xs={12} sm={3}>\n                  About:\n                </Grid>\n                <Grid item xs={12} sm={9}>\n                  {editable ? (\n                    <Input\n                      fullWidth\n                      disabled={!editable}\n                      disableUnderline={!editable}\n                      error={errors.about !== undefined}\n                      inputRef={register(validations.about)}\n                      defaultValue={display(\"about\", editable)}\n                      name=\"about\"\n                      placeholder=\"Software Developer\"\n                    />\n                  ) : (\n                    display(\"about\", false)\n                  )}\n                  <FormHelperText error>\n                    {errors.about ? errors.about.message : \" \"}\n                  </FormHelperText>\n                </Grid>\n              </Grid>\n            )}\n            <Grid item container className={classes.formRow}>\n              <Grid item xs={12} sm={3}>\n                Email:\n              </Grid>\n              <Grid item xs={12} sm={9}>\n                {editable ? (\n                  <Input\n                    fullWidth\n                    disabled={!editable}\n                    disableUnderline={!editable}\n                    error={errors.email !== undefined || emailError.length > 0}\n                    inputRef={register(validations.email)}\n                    defaultValue={display(\"email\", editable)}\n                    name=\"email\"\n                    placeholder=\"john@gmail.com\"\n                  />\n                ) : (\n                  display(\"email\", false)\n                )}\n                <FormHelperText error>\n                  {errors.email || emailError\n                    ? errors.email\n                      ? errors.email.message\n                      : emailError\n                    : \" \"}\n                </FormHelperText>\n              </Grid>\n            </Grid>\n            <Grid item container className={classes.formRow}>\n              <Grid item xs={12} sm={3}>\n                Phone:\n              </Grid>\n              <Grid item xs={12} sm={9}>\n                {editable ? (\n                  <Input\n                    fullWidth\n                    disabled={!editable}\n                    disableUnderline={!editable}\n                    error={errors.phone !== undefined}\n                    inputRef={register(validations.phone)}\n                    defaultValue={display(\"phone\", editable)}\n                    name=\"phone\"\n                    placeholder=\"+(91) 1234567890\"\n                  />\n                ) : (\n                  display(\"phone\", false)\n                )}\n                <FormHelperText error>\n                  {errors.phone ? errors.phone.message : \" \"}\n                </FormHelperText>\n              </Grid>\n            </Grid>\n            <Grid item container className={classes.formRow}>\n              <Grid item xs={12} sm={3}>\n                Company:\n              </Grid>\n              <Grid item xs={12} sm={9}>\n                {editable ? (\n                  <Input\n                    fullWidth\n                    disabled={!editable}\n                    disableUnderline={!editable}\n                    error={errors.company !== undefined}\n                    inputRef={register(validations.company)}\n                    defaultValue={display(\"company\", editable)}\n                    name=\"company\"\n                    placeholder=\"The Company\"\n                  />\n                ) : (\n                  display(\"company\", false)\n                )}\n                <FormHelperText error>\n                  {errors.company ? errors.company.message : \" \"}\n                </FormHelperText>\n              </Grid>\n            </Grid>\n            <Grid item container className={classes.formRow}>\n              <Grid item xs={12} sm={3}>\n                Address:\n              </Grid>\n              <Grid item xs={12} sm={9}>\n                {editable ? (\n                  <Input\n                    fullWidth\n                    disabled={!editable}\n                    disableUnderline={!editable}\n                    error={errors.address !== undefined}\n                    inputRef={register(validations.address)}\n                    defaultValue={display(\"address\", editable)}\n                    name=\"address\"\n                    placeholder=\"13/B, Unknown, Nowhere\"\n                  />\n                ) : (\n                  display(\"address\", false)\n                )}\n                <FormHelperText error>\n                  {errors.address ? errors.address.message : \" \"}\n                </FormHelperText>\n              </Grid>\n            </Grid>\n            {editable && (\n              <Grid item container justify=\"center\">\n                <Fab\n                  variant=\"extended\"\n                  className={classes.saveBtn}\n                  onClick={handleSubmit(onSubmit)}\n                >\n                  <Check className={classes.extendedIcon} />\n                  Save\n                </Fab>\n              </Grid>\n            )}\n          </Grid>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport {\n  Hidden,\n} from '@material-ui/core';\nimport ContactListItem from '../components/ContactListItem';\nimport NewContactListItem from '../components/NewContactListItem';\nimport ContactForm from '../components/ContactForm';\n\nconst ContactListBody = ({ contacts, selectedContact, selectContact, editContact, isEditing, updateContact, isAdding, saveContact, checkContact, deselectContact, cancelAddContact }) => {\n\n  return (\n    <>\n      {\n        contacts.map((contact) => {\n          return (\n            <React.Fragment key={contact.id}>\n              <ContactListItem\n                contact={contact}\n                active={contact.id === selectedContact.id}\n                selectContact={selectContact}\n                saveContact={saveContact}\n                checkContact={checkContact}\n              />\n              {\n                contact.id === selectedContact.id &&\n                <Hidden lgUp>\n                  <ContactForm\n                    selectedContact={contact}\n                    editable={isEditing}\n                    editContact={editContact}\n                    updateContact={updateContact}\n                    deselectContact={deselectContact}\n                  />\n                </Hidden>\n              }\n            </React.Fragment>\n          );\n        })\n      }\n\n      {\n        isAdding &&\n        <NewContactListItem\n          saveContact={saveContact}\n          cancelAddContact={cancelAddContact}\n        />\n      }\n    </>\n  );\n};\n\nexport default ContactListBody;","import React from 'react';\nimport ContactListHeader from '../components/ContactListHeader';\nimport ContactListBody from '../components/ContactListBody';\nimport {\n  Grid,\n  makeStyles,\n} from '@material-ui/core';\n\nconst useStyle = makeStyles(theme => ({\n  noContacts: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '40vh'\n  }\n}));\n\nconst ContactList = ({ contacts, selectedContact, selectContact, editContact, isEditing, updateContact, saveContact, isAdding, checkContact, someSelected, allSelected, selectAll, deselectAll, deselectContact, cancelAddContact }) => {\n\n  const classes = useStyle();\n\n  return (\n    <Grid item lg={6} xs={12}>\n      <ContactListHeader\n        someSelected={someSelected}\n        allSelected={allSelected}\n        selectAll={selectAll}\n        deselectAll={deselectAll}\n      />\n      <ContactListBody\n        contacts={contacts}\n        selectedContact={selectedContact}\n        selectContact={selectContact}\n        editContact={editContact}\n        isEditing={isEditing}\n        updateContact={updateContact}\n        isAdding={isAdding}\n        saveContact={saveContact}\n        checkContact={checkContact}\n        deselectContact={deselectContact}\n        cancelAddContact={cancelAddContact}\n      />\n      {\n        contacts.length === 0 &&\n        <h3 className={classes.noContacts}>\n          No Contacts\n        </h3>\n      }\n    </Grid>\n  );\n};\n\nexport default ContactList;","import React from \"react\";\nimport SceneHeader from \"../components/SceneHeader\";\nimport ActionBar from \"../components/ActionBar\";\nimport ContactList from \"../components/ContactList\";\nimport ContactForm from \"../components/ContactForm\";\nimport { Grid, withStyles, Hidden } from \"@material-ui/core\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nconst styles = theme => ({\n  outerSpacing: {\n    padding: \"50px 60px\",\n    [theme.breakpoints.only(\"sm\")]: {\n      padding: \"30px 40px\"\n    },\n    [theme.breakpoints.only(\"xs\")]: {\n      padding: \"20px\"\n    }\n  },\n  innerSpacing: {\n    padding: \"0px 40px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: \"0px\"\n    }\n  }\n});\n\nlet contacts = [\n  {\n    id: \"1\",\n    name: \"Joey Tribbiani\",\n    about: \"Actor\",\n    email: \"joeyt@friends.com\",\n    phone: \"+(069) 123-6547\",\n    company: \"Actor Acadamy\",\n    address: \"2738  Liberty Avenue, California\"\n  },\n  {\n    id: \"2\",\n    name: \"Rachel Green\",\n    about: \"Fashion Designer\",\n    email: \"greenrach@friends.com\",\n    phone: \"718-896-1555\",\n    company: \"Ralph Lauren\",\n    address: \"377  Abia Martin Drive, Bethpage, New York\"\n  },\n  {\n    id: \"3\",\n    name: \"Ross Geller\",\n    about: \"Paleontologist\",\n    email: \"rossaurus@friends.com\",\n    phone: \"\",\n    company: \"Dianosaur Museum\",\n    address: \"4437  Plainfield Avenue, HOPKINTON, Massachusetts\"\n  },\n  {\n    id: \"4\",\n    name: \"Phoebe Buffay\",\n    about: \"Masseuse\",\n    email: \"phebes@friends.com\",\n    phone: \"802-232-8909\",\n    company: \"\",\n    address: \"\"\n  },\n  {\n    id: \"5\",\n    name: \"Monica Geller\",\n    about: \"Chef\",\n    email: \"mon@friends.com\",\n    phone: \"\",\n    company: \"\",\n    address: \"\"\n  },\n  {\n    id: \"6\",\n    name: \"Chandler Bing\",\n    about: \"Copywriter\",\n    email: \"mrbing@friends.com\",\n    phone: \"\",\n    company: \"\",\n    address: \"4709  Roosevelt Road, Dodge City, Kansas\"\n  },\n  {\n    id: \"7\",\n    name: \"Gunther\",\n    about: \"Cafe Owner\",\n    email: \"gunther@friends.com\",\n    phone: \"330-443-9039\",\n    company: \"Central Perk\",\n    address: \"\"\n  },\n  {\n    id: \"8\",\n    name: \"Jill Green\",\n    about: \"Rachel's sister\",\n    email: \"jgreen@gmail.com\",\n    phone: \"\",\n    company: \"\",\n    address: \"2035  Nixon Avenue, Kingsport, Tennessee\"\n  },\n  {\n    id: \"9\",\n    name: \"Jack Geller\",\n    about: \"Ross' father\",\n    email: \"jackg@gmail.com\",\n    phone: \"908-617-5594\",\n    company: \"\",\n    address: \"3033  Patterson Road, SPANGLE, Washington\"\n  }\n];\n\nclass Local extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: contacts,\n      selectedContact: {},\n      editable: false,\n      isAdding: false,\n      searchQuery: \"\"\n    };\n  }\n\n  setSelectedContact = id => {\n    const { data, isAdding, selectedContact, editable } = this.state;\n    const stillAdding = isAdding && id === selectedContact.id;\n    this.setState({\n      selectedContact: stillAdding\n        ? selectedContact\n        : data.find(contact => contact.id === id),\n      isAdding: stillAdding,\n      editable: editable && id === selectedContact.id\n    });\n  };\n\n  deselectContact = () => {\n    this.setState({\n      selectedContact: {},\n      editable: false\n    });\n  };\n\n  setEditable = id => {\n    const { data, editable } = this.state;\n    this.setState({\n      editable: !editable,\n      selectedContact: data.find(contact => contact.id === id),\n      isAdding: false\n    });\n  };\n\n  updateContact = updatedContact => {\n    var { selectedContact } = this.state;\n\n    var emailExist = contacts.some(\n      contact => {\n        console.log(contact.id !== updatedContact.id &&\n          contact.email === updatedContact.email);\n        return contact.id !== updatedContact.id &&\n        contact.email === updatedContact.email\n      }\n    );\n\n    if (emailExist) {\n      return false;\n    } else {\n      var index = contacts.findIndex(\n        contact => contact.id === selectedContact.id\n      );\n      contacts[index] = Object.assign({}, contacts[index], updatedContact);\n      this.setState({\n        data: contacts,\n        editable: false\n      });\n\n      return true;\n    }\n  };\n\n  addContact = () => {\n    this.setState({\n      editable: false,\n      isAdding: true,\n      searchQuery: \"\",\n      selectedContact: { id: contacts[contacts.length - 1].id + 1 }\n    });\n  };\n\n  cancelAddContact = () => {\n    this.setState({\n      isAdding: false,\n      selectedContact: {}\n    });\n  };\n\n  saveContact = ({ name, email }) => {\n    const { selectedContact } = this.state;\n\n    var emailExist = contacts.some(contact => contact.email === email);\n\n    if (emailExist) {\n      return false;\n    } else {\n      contacts.push({\n        ...selectedContact,\n        name,\n        email\n      });\n\n      this.setState({\n        data: contacts,\n        isAdding: false,\n        searchQuery: \"\"\n      });\n\n      return false;\n    }\n  };\n\n  checkContact = id => {\n    var { data } = this.state;\n    const index = data.findIndex(contact => contact.id === id);\n    data[index].checked = !data[index].checked;\n\n    this.setState({\n      data: data\n    });\n  };\n\n  selectAll = () => {\n    var { data } = this.state;\n\n    data.forEach(contact => (contact.checked = true));\n\n    this.setState({\n      data: data\n    });\n  };\n\n  deselectAll = () => {\n    var { data } = this.state;\n\n    data.forEach(contact => (contact.checked = false));\n\n    this.setState({\n      data: data\n    });\n  };\n\n  deleteContact = () => {\n    contacts = contacts.filter(contact => !contact.checked);\n\n    this.setState({\n      data: contacts,\n      searchQuery: \"\",\n      editable: false,\n      isAdding: false,\n      selectedContact: {}\n    });\n  };\n\n  searchContact = ({ target }) => {\n    var { value } = target;\n\n    const filteredData = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(value.toLowerCase())\n    );\n\n    this.setState({\n      data: filteredData,\n      searchQuery: value,\n      editable: false,\n      isAdding: false,\n      selectedContact: {}\n    });\n  };\n\n  render = () => {\n    const { classes } = this.props;\n\n    let { data, selectedContact, editable, isAdding, searchQuery } = this.state;\n\n    var allSelected = data.length && data.every(contact => contact.checked);\n    var someSelected = data.some(contact => contact.checked);\n\n    return (\n      <Grid container className={classes.outerSpacing}>\n        <SceneHeader />\n        <Grid container item md={12} className={classes.innerSpacing}>\n          <ActionBar\n            addContact={this.addContact}\n            deleteContact={this.deleteContact}\n            searchQuery={searchQuery}\n            searchContact={this.searchContact}\n            someSelected={someSelected}\n          />\n          <ContactList\n            contacts={data}\n            selectedContact={selectedContact}\n            selectContact={this.setSelectedContact}\n            editContact={this.setEditable}\n            updateContact={this.updateContact}\n            isEditing={editable}\n            isAdding={isAdding}\n            saveContact={this.saveContact}\n            checkContact={this.checkContact}\n            selectAll={this.selectAll}\n            deselectAll={this.deselectAll}\n            allSelected={allSelected}\n            someSelected={someSelected}\n            deselectContact={this.deselectContact}\n            cancelAddContact={this.cancelAddContact}\n          />\n          <Hidden mdDown>\n            <ContactForm\n              selectedContact={\n                data.find(contact => contact.id === selectedContact.id) || {}\n              }\n              editable={editable}\n              editContact={this.setEditable}\n              updateContact={this.updateContact}\n              deselectContact={this.deselectContact}\n            />\n          </Hidden>\n        </Grid>\n      </Grid>\n    );\n  };\n}\n\nexport default withStyles(styles)(Local);\n","import React from 'react';\n\nconst Twitter = () => {\n    return (\n        <h1>Twitter</h1>\n    );\n}\n\nexport default Twitter;","import React from 'react';\n\nconst GitHub = () => {\n    return (\n        <h1>GitHub</h1>\n    );\n}\n\nexport default GitHub;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport clsx from 'clsx';\nimport AppDrawer from './components/AppDrawer';\nimport AppHeader from './components/AppHeader';\nimport Local from './scenes/Local';\nimport Twitter from './scenes/Twitter';\nimport GitHub from './scenes/GitHub';\nimport {\n  withStyles,\n  Backdrop,\n  Hidden,\n} from '@material-ui/core';\n\nimport \"./style.scss\";\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  content: {\n    width: '100%'\n  },\n  contentPosition: {\n    position: \"static\",\n    [theme.breakpoints.only(\"xs\")]: {\n      position: \"fixed\",\n    },\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer - 1,\n  }\n});\n\nclass ContactApp extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      drawer: 'semi'\n    }\n  }\n\n  handleFullDrawerToggle = () => {\n    this.setState({\n      drawer: this.state.drawer === \"open\" ? \"close\" : \"open\"\n    })\n  }\n\n  handleMiniDrawerToggle = () => {\n    this.setState({\n      drawer: this.state.drawer === \"semi\" ? \"open\" : \"semi\"\n    })\n  }\n\n  render = () => {\n    const { classes } = this.props;\n    const { drawer } = this.state;\n    return (\n      <div className={classes.root} >\n        <Hidden smUp>\n          <Backdrop open={drawer === \"open\"} className={classes.backdrop}></Backdrop>\n        </Hidden>\n        <Router basename=\"/contact-list\">\n          <AppDrawer\n            open={drawer}\n            handleMiniDrawerToggle={this.handleMiniDrawerToggle}\n          />\n          <div className={clsx(classes.content, drawer === \"open\" && classes.contentPosition)}>\n            <AppHeader\n              handleFullDrawerToggle={this.handleFullDrawerToggle}\n            />\n            <Switch>\n              <Route exact path={\"/\"} key={\"Local\"}>\n                <Local />\n              </Route>\n              <Route exact path={\"/twitter\"} key={\"Twitter\"}>\n                <Twitter />\n              </Route>\n              <Route exact path={\"/github\"} key={\"GitHub\"}>\n                <GitHub />\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n};\n\nexport default withStyles(styles)(ContactApp);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ContactApp from './ContactApp';\nimport 'typeface-roboto';\n\nimport './style.scss';\n\nReactDOM.render(\n  <ContactApp />,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}