{"version":3,"sources":["components/AppDrawer.js","components/AppHeader.js","components/SceneHeader.js","components/ActionBar.js","components/ContactListHeader.js","components/ContactListItem.js","components/NewContactListItem.js","components/ContactForm.js","components/ContactListBody.js","components/ContactList.js","scenes/Local.js","scenes/Twitter.js","scenes/GitHub.js","ContactApp.js","index.js"],"names":["useStyles","makeStyles","theme","drawer","backgroundImage","color","boxShadow","drawerSemi","width","spacing","overflow","breakpoints","only","drawerOpen","toggleBtn","padding","textAlign","colorWhite","menu","paddingTop","AppDrawer","open","handleMiniDrawerToggle","classes","Drawer","variant","className","clsx","paper","IconButton","onClick","ChevronLeft","ChevronRight","List","icon","name","path","map","tab","index","exact","to","key","ListItem","button","ListItemIcon","ListItemText","primary","useStyle","header","minHeight","Header","handleFullDrawerToggle","Hidden","smUp","Menu","display","alignItems","headerIcon","background","WebkitBackgroundClip","WebkitTextFillColor","fontSize","headerTitle","SceneHeader","Grid","item","md","Box","fontWeight","innerSpacing","searchBar","backgroundColor","borderRadius","searchBarSpacing","down","searchInput","flex","btnWrapper","justifyContent","actionBtn","textTransform","height","margin","minWidth","up","ActionBar","addContact","someSelected","deleteContact","searchQuery","searchContact","container","lg","sm","xs","Paper","elevation","InputBase","placeholder","value","onChange","inputProps","maxLength","Search","Button","smDown","disabled","Delete","style","contactListHeader","ContactListHeader","allSelected","deselectAll","selectAll","Checkbox","indeterminate","checked","contact","cursor","basicInfo","avatarWrapper","contactAvatar","contactName","flexDirection","noMargin","ContactListItem","selectContact","active","isNewContact","checkContact","id","avatar","email","type","editBtn","Check","event","stopPropagation","Avatar","src","str","hash","i","length","charCodeAt","colour","toString","substr","stringToColour","split","n","mdUp","saveBtn","maxWidth","maxHeight","closeBtn","NewContactListItem","saveContact","cancelAddContact","useForm","register","handleSubmit","errors","validations","required","message","pattern","minLength","onSubmit","data","Input","autoFocus","error","undefined","inputRef","FormHelperText","fullWidth","justify","Close","extendedIcon","marginRight","formWrapper","paddingLeft","contactForm","position","formHeader","paddingBottom","fallbackText","noBottomMargin","marginBottom","formRow","right","cancelBtn","backBtn","left","ContactForm","selectedContact","editable","updateContact","editContact","deselectContact","field","input","Fab","size","ArrowBack","Edit","defaultValue","disableUnderline","about","phone","company","address","ContactListBody","contacts","isEditing","isAdding","Fragment","lgUp","noContacts","ContactList","Local","props","setSelectedContact","state","stillAdding","setState","find","setEditable","updatedContact","findIndex","Object","assign","newContact","some","push","forEach","filter","target","filteredData","toLowerCase","includes","render","every","outerSpacing","mdDown","React","Component","withStyles","Twitter","GitHub","ContactApp","root","Backdrop","backdrop","basename","content","contentPosition","AppHeader","zIndex","ReactDOM","document","getElementById"],"mappings":"kYAsBMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,OAAQ,CACNC,gBAAiB,oCACjBC,MAAO,YACPC,UAAW,wBAEbC,WAAW,aACTC,MAAON,EAAMO,QAAQ,KAAO,EAC5BC,SAAU,UACTR,EAAMS,YAAYC,KAAK,MAAQ,CAC9BJ,MAAO,QAGXK,WAAY,CACVL,MAAON,EAAMO,QAAQ,IAAM,GAE7BK,UAAW,CACTC,QAAS,EACTC,UAAW,SAEbC,WAAY,CACVZ,MAAO,aAETa,KAAM,CACJC,WAAYjB,EAAMO,QAAQ,GAAK,OA8CpBW,EA1CG,SAAC,GAAsC,IAAD,IAAnCC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,uBACnBC,EAAUvB,IAEhB,OACE,kBAACwB,EAAA,EAAD,CACEC,QAAQ,YACRC,UAAWC,aAAI,mBACZJ,EAAQV,WAAsB,SAATQ,GADT,cAEZE,EAAQhB,WAAsB,SAATc,GAFT,IAIfE,QAAS,CACPK,MAAOD,YAAKJ,EAAQpB,QAAT,mBACRoB,EAAQV,WAAsB,SAATQ,GADb,cAERE,EAAQhB,WAAsB,SAATc,GAFb,MAMb,yBAAKK,UAAWH,EAAQT,WACtB,kBAACe,EAAA,EAAD,CAAYxB,MAAM,UAAUyB,QAASR,GACzB,SAATD,EAAkB,kBAACU,EAAA,EAAD,MAAkB,kBAACC,EAAA,EAAD,QAGzC,kBAACC,EAAA,EAAD,CAAMP,UAAWH,EAAQL,MAErB,CACE,CAAEgB,KAAM,kBAAC,IAAD,MAAWC,KAAM,QAASC,KAAM,KACxC,CAAEF,KAAM,kBAAC,IAAD,MAAaC,KAAM,UAAWC,KAAM,YAC5C,CAAEF,KAAM,kBAAC,IAAD,MAAYC,KAAM,SAAUC,KAAM,YAC1CC,KAAI,SAACC,EAAKC,GAAN,OACJ,kBAAC,IAAD,CAASC,OAAK,EAACC,GAAIH,EAAIF,KAAMM,IAAKJ,EAAIH,MACpC,kBAACQ,EAAA,EAAD,CAAUC,QAAM,EAACF,IAAKJ,EAAIH,KAAMT,UAAU,YACxC,kBAACmB,EAAA,EAAD,CAAcnB,UAAWH,EAAQN,YAAaqB,EAAIJ,MAClD,kBAACY,EAAA,EAAD,CAAcC,QAAST,EAAIH,e,kBCxErCa,EAAW/C,aAAW,SAAAC,GAAK,MAAK,CACpC+C,OAAQ,CACNC,UAAW,GACX1C,MAAO,OACPF,UAAW,4BAmBA6C,EAfA,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,uBAEV7B,EAAUyB,IAEhB,OACE,4BAAQtB,UAAWH,EAAQ0B,QACzB,kBAACI,EAAA,EAAD,CAAQC,MAAI,GACV,kBAACzB,EAAA,EAAD,CAAYC,QAASsB,GACnB,kBAACG,EAAA,EAAD,U,0BCnBJP,EAAW/C,aAAW,SAAAC,GAAK,MAAK,CACpC+C,OAAQ,CACNO,QAAS,OACTC,WAAY,UAEdC,WAAY,CACVC,WAAY,oCACZC,qBAAsB,OACtBC,oBAAqB,cACrBxD,MAAO,YACPyD,SAAU,IAEZC,YAAa,CACXhD,QAAS,gBAkBEiD,EAdK,WAClB,IAAMzC,EAAUyB,IAEhB,OACE,kBAACiB,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIzC,UAAWH,EAAQ0B,QACpC,kBAACmB,EAAA,EAAD,CAAK1C,UAAS,iDAA4CH,EAAQmC,cAClE,kBAACU,EAAA,EAAD,CAAK1C,UAAWH,EAAQwC,aACtB,kBAACK,EAAA,EAAD,CAAKC,WAAY,IAAKP,SAAU,IAAhC,YACA,kBAACM,EAAA,EAAD,CAAKN,SAAU,IAAf,uC,4CClBFd,EAAW/C,aAAW,SAAAC,GAAK,cAAK,CACpCoE,aAAa,aACXvD,QAAS,aACRb,EAAMS,YAAYC,KAAK,MAAQ,CAC9BG,QAAS,aAGbwD,UAAW,CACTf,QAAS,OACTC,WAAY,SACZe,gBAAiB,UACjBC,aAAc,GACd1D,QAAS,YAEX2D,iBAAiB,aACf3D,QAAS,YACRb,EAAMS,YAAYgE,KAAK,MAAQ,CAC9B5D,QAAS,aAGb6D,YAAa,CACXC,KAAM,EACNf,SAAU,IAEZgB,YAAU,GACR/D,QAAS,aADD,cAEPb,EAAMS,YAAYgE,KAAK,MAAQ,CAC9B5D,QAAS,cAHH,cAKPb,EAAMS,YAAYgE,KAAK,MAAQ,CAC9BnB,QAAS,OACTuB,eAAgB,eAChBhE,QAAS,uBARH,GAWViE,WAAS,GACPrB,WAAY,8CACZtD,MAAO,YACP4E,cAAe,OACfC,OAAQ,OACRC,OAAQ,WALD,cAMNjF,EAAMS,YAAYgE,KAAK,MAAQ,CAC9BQ,OAAQ,UACRC,SAAU,SARL,cAUNlF,EAAMS,YAAYgE,KAAK,MAAQ,CAC9BS,SAAU,SAXL,cAaNlF,EAAMS,YAAY0E,GAAG,MAAQ,CAC5BD,SAAU,UAdL,OAgDIE,EA7BG,SAAC,GAA6E,IAA3EC,EAA0E,EAA1EA,WAAYC,EAA8D,EAA9DA,aAAcC,EAAgD,EAAhDA,cAAeC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,cACnEpE,EAAUyB,IAEhB,OACE,kBAACiB,EAAA,EAAD,CAAM2B,WAAS,EAAC1B,MAAI,EAACC,GAAI,IACvB,kBAACF,EAAA,EAAD,CAAMC,MAAI,EAAC2B,GAAI,EAAG1B,GAAI,EAAG2B,GAAI,EAAGC,GAAI,GAAIrE,UAAWH,EAAQmD,kBACzD,kBAACsB,EAAA,EAAD,CAAOC,UAAW,EAAGvE,UAAWH,EAAQgD,WACtC,kBAAC2B,EAAA,EAAD,CACExE,UAAWH,EAAQqD,YACnBuB,YAAY,kBACZC,MAAOV,EACPW,SAAUV,EACVW,WAAY,CAAEC,UAAW,MAE3B,kBAACC,EAAA,EAAD,QAGJ,kBAACvC,EAAA,EAAD,CAAMC,MAAI,EAAC2B,GAAI,EAAG1B,GAAI,EAAG2B,GAAI,EAAGC,GAAI,GAAIrE,UAAWH,EAAQuD,YACzD,kBAAC2B,EAAA,EAAD,CAAQhF,QAAQ,YAAYC,UAAWH,EAAQyD,UAAWlD,QAASyD,GAAnE,KACI,kBAAClC,EAAA,EAAD,CAAQzC,KAAK,MAAb,MAAqB,kBAACyC,EAAA,EAAD,CAAQqD,QAAM,GAAd,cAEzB,kBAACD,EAAA,EAAD,CAAQhF,QAAQ,YAAYC,UAAWH,EAAQyD,UAAWlD,QAAS2D,EAAekB,UAAWnB,GAC3F,kBAACoB,EAAA,EAAD,CAAQC,MAAO,CAAE/C,SAAU,MAD7B,IACsC,kBAACT,EAAA,EAAD,CAAQzC,KAAK,MAAb,c,SClFxCoC,EAAW/C,aAAW,SAAAC,GAAK,MAAK,CACpC4G,kBAAmB,CACjBtC,gBAAiB,UACjBzD,QAAS,gBA2BEgG,EAvBW,SAAC,GAA2D,IAAzDvB,EAAwD,EAAxDA,aAAcwB,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,UAC7D3F,EAAUyB,IAEhB,OACE,kBAACiB,EAAA,EAAD,CAAM2B,WAAS,EAAClE,UAAWH,EAAQuF,mBACjC,kBAAC7C,EAAA,EAAD,CAAMC,MAAI,EAAC0B,WAAS,EAACG,GAAI,GAAIc,MAAO,CAAEpD,WAAY,WAChD,kBAACQ,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG4B,GAAI,EAAGD,GAAI,GAC3B,kBAACqB,EAAA,EAAD,CACErF,QAAS,kBAAMkF,GAAexB,EAAeyB,IAAgBC,KAC7D7G,MAAM,UACN+G,cAAe5B,IAAiBwB,EAChCK,QAASL,GAAexB,KAG5B,kBAACvB,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG4B,GAAI,GAAID,GAAI,GAA9B,QACA,kBAACzC,EAAA,EAAD,CAAQqD,QAAM,GACZ,kBAACzC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,a,kBChBJnB,EAAW/C,aAAW,SAAAC,GAAK,MAAK,CACpCoH,QAAS,CACPnC,OAAQ,WACRpE,QAAS,WACT,mBAAoB,CAClByD,gBAAiB,UACjB+C,OAAQ,YAGZC,UAAW,CACThE,QAAS,OACTC,WAAY,UAEdgE,cAAe,CACb1G,QAAS,sBAEX2G,cAAe,CACbxC,OAAQ,OACR1E,MAAO,QAETmH,YAAa,CACXnE,QAAS,OACToE,cAAe,SACf7C,eAAgB,UAElB8C,SAAU,CACR1C,OAAQ,OA6EG2C,EAzES,SAAC,GAAoE,IAAlER,EAAiE,EAAjEA,QAASS,EAAwD,EAAxDA,cAAeC,EAAyC,EAAzCA,OAAQC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aACjE3G,EAAUyB,IAERmF,EAAqCb,EAArCa,GAAIC,EAAiCd,EAAjCc,OAAQjG,EAAyBmF,EAAzBnF,KAAMkG,EAAmBf,EAAnBe,MAAOhB,EAAYC,EAAZD,QAgBjC,OACE,kBAACpD,EAAA,EAAD,CAAM2B,WAAS,EACbnC,WAAW,SACXtB,KAAK,cACLT,UAAWC,YAAKJ,EAAQ+F,QAASU,GAAU,UAC3ClG,QAAS,kBAAMiG,EAAcI,KAE7B,kBAAClE,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG4B,GAAI,EAAGD,GAAI,GAC1BmC,EACC,kBAACxB,EAAA,EAAD,CAAQ6B,KAAK,SAAS5G,UAAWH,EAAQgH,SACvC,kBAACC,EAAA,EAAD,OAEF,kBAACrB,EAAA,EAAD,CACErF,QAAS,SAAC2G,GAAYP,EAAaC,GAAKM,EAAMC,mBAC9CrI,MAAM,UACNgH,QAASA,IAAW,KAI1B,kBAACpD,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG4B,GAAI,GAAID,GAAI,GAC5B,kBAAC1B,EAAA,EAAD,CAAK1C,UAAWH,EAAQiG,WACtB,kBAACpD,EAAA,EAAD,CAAK1C,UAAWH,EAAQkG,eACtB,kBAACkB,EAAA,EAAD,CACEC,IAAKR,EACL1G,UAAWH,EAAQmG,cACnBb,MAAO,CACLrC,gBAxCS,SAACqE,GAEtB,IADA,IAAIC,EAAO,EACFC,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,IAC9BD,EAAOD,EAAII,WAAWF,KAAOD,GAAQ,GAAKA,GAE5C,IAAII,EAAS,IACb,IAAKH,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAEtBG,IAAW,MADEJ,GAAa,EAAJC,EAAU,KACRI,SAAS,KAAKC,QAAQ,GAGhD,OAAOF,EAAS,KA6BaG,CAAelH,EAAOkG,KAExClG,EAAKmH,MAAM,KAAKjH,KAAI,SAACkH,GAAD,OAAOA,EAAE,QAGlC,kBAACnF,EAAA,EAAD,CAAK1C,UAAWH,EAAQoG,aACtB,wBAAIjG,UAAWH,EAAQsG,UACpB1F,GAEH,+BACE,kBAACkB,EAAA,EAAD,CAAQmG,MAAI,GACTnB,OAMX,kBAAChF,EAAA,EAAD,CAAQqD,QAAM,GACZ,kBAACzC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACb,wBAAIzC,UAAWH,EAAQsG,UACpBQ,O,qCC7FPrF,GAAW/C,aAAW,SAAAC,GAAK,MAAK,CACpCoH,QAAS,CACPnC,OAAQ,WACRpE,QAAS,YACT,mBAAoB,CAClByD,gBAAiB,UACjB+C,OAAQ,YAGZI,YAAa,CACXnE,QAAS,OACToE,cAAe,SACf7C,eAAgB,UAElB8C,SAAU,CACR1C,OAAQ,GAEVsE,QAAS,CACP9F,WAAY,8CACZtD,MAAO,YACPU,QAAS,EACToE,OAAQ,UACRuE,SAAU,GACVtE,SAAU,GACVuE,UAAW,GACXzG,UAAW,GACXuB,aAAc,MACdnE,UAAW,oBAEbsJ,SAAU,CACRjG,WAAY,8CACZtD,MAAO,YACPU,QAAS,EACToE,OAAQ,UACRuE,SAAU,GACVtE,SAAU,GACVuE,UAAW,GACXzG,UAAW,GACXuB,aAAc,MACdnE,UAAW,wBAiHAuJ,GA7GY,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,iBACnCxI,EAAUyB,KADgD,EAGrBgH,cAAnCC,EAHwD,EAGxDA,SAAUC,EAH8C,EAG9CA,aAAcC,EAHgC,EAGhCA,OAE1BC,EACE,CACJC,SAAU,CACRjE,OAAO,EACPkE,QAAS,0BAEXC,QAAS,CACPnE,MAAO,SACPkE,QAAS,oBAEXE,UAAW,CACTpE,MAAO,EACPkE,QAAS,+BAEX/D,UAAW,CACTH,MAAO,GACPkE,QAAS,qCAhBTF,EAmBG,CACLG,QAAS,CACPnE,MAAO,4CACPkE,QAAS,qBAEX/D,UAAW,CACTH,MAAO,GACPkE,QAAS,qCAOf,OACE,0BAAMG,SAAUP,GAHH,SAACQ,GAAWZ,EAAYY,OAInC,kBAACzG,EAAA,EAAD,CAAM2B,WAAS,EACbnC,WAAW,SACXtB,KAAK,cACLT,UAAWC,YAAKJ,EAAQ+F,QAAS,WAEjC,kBAACrD,EAAA,EAAD,CAAMC,MAAI,EAAC6B,GAAI,EAAGD,GAAI,EAAG3B,GAAI,GAC3B,kBAACC,EAAA,EAAD,CAAK1C,UAAWH,EAAQiG,WACtB,kBAACpD,EAAA,EAAD,CAAK1C,UAAWH,EAAQoG,aACtB,wBAAIjG,UAAWH,EAAQsG,UACrB,kBAAC8C,EAAA,EAAD,CACEC,WAAS,EACTzI,KAAK,OACL0I,WAAuBC,IAAhBX,EAAOhI,KACd4I,SAAUd,EAASG,GACnBjE,YAAY,WACZrE,QAAS,SAAC2G,GAAD,OAAWA,EAAMC,qBAE5B,kBAACsC,GAAA,EAAD,CAAgBH,OAAK,GAClBV,EAAOhI,KAAOgI,EAAOhI,KAAKmI,QAAU,KAGzC,+BACE,kBAACjH,EAAA,EAAD,CAAQmG,MAAI,GACV,kBAACmB,EAAA,EAAD,CACEM,WAAS,EACTpE,MAAO,CAAE/C,SAAU,IACnB3B,KAAK,QACL0I,WAAwBC,IAAjBX,EAAO9B,MACd0C,SAAUd,EAASG,GACnBjE,YAAY,iBACZrE,QAAS,SAAC2G,GAAD,OAAWA,EAAMC,qBAE5B,kBAACsC,GAAA,EAAD,CAAgBH,OAAK,GAClBV,EAAO9B,MAAQ8B,EAAO9B,MAAMiC,QAAU,SAOnD,kBAACjH,EAAA,EAAD,CAAQqD,QAAM,GACZ,kBAACzC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACb,wBAAIzC,UAAWH,EAAQsG,UACrB,kBAAC8C,EAAA,EAAD,CACExI,KAAK,QACL0I,WAAwBC,IAAjBX,EAAO9B,MACd0C,SAAUd,EAASG,GACnBjE,YAAY,iBACZrE,QAAS,SAAC2G,GAAD,OAAWA,EAAMC,qBAE5B,kBAACsC,GAAA,EAAD,CAAgBH,OAAK,GAClBV,EAAO9B,MAAQ8B,EAAO9B,MAAMiC,QAAU,OAK/C,kBAACrG,EAAA,EAAD,CAAMC,MAAI,EAAC6B,GAAI,EAAG5B,GAAI,EAAGyB,WAAS,EAACsF,QAAQ,YACzC,kBAACzE,EAAA,EAAD,CAAQ6B,KAAK,SAAS5G,UAAWH,EAAQkI,SACvC,kBAACjB,EAAA,EAAD,OAEF,kBAAC/B,EAAA,EAAD,CAAQ/E,UAAWH,EAAQqI,SAAU9H,QAAS,kBAAMiI,MAClD,kBAACoB,GAAA,EAAD,W,8BC/INnI,GAAW/C,aAAW,SAAAC,GAAK,YAAK,CACpCkL,aAAc,CACZC,YAAanL,EAAMO,QAAQ,IAE7B6K,YAAY,aACVC,YAAa,QACZrL,EAAMS,YAAYgE,KAAK,MAAQ,CAC9B5D,QAAS,aAGbyK,aAAW,GACThH,gBAAiB,UACjBzD,QAAS,YACTP,MAAO,OACPiL,SAAU,YAJD,cAKRvL,EAAMS,YAAYC,KAAK,MAAQ,CAC9BG,QAAS,SANF,cAQRb,EAAMS,YAAYC,KAAK,MAAQ,CAC9BG,QAAS,SATF,GAYX2K,WAAW,aACTlI,QAAS,OACTC,WAAY,SACZzC,UAAW,SACX4G,cAAe,SACf+D,cAAe,IACdzL,EAAMS,YAAYC,KAAK,MAAQ,CAC9B+K,cAAe,KAGnBvD,OAAQ,CACNlD,OAAQ,OACR1E,MAAO,QAEToL,aAAc,CACZ9H,SAAU,IAEZ+H,eAAgB,CACdC,aAAc,GAEhBrC,QAAS,CACP9F,WAAY,8CACZtD,MAAO,aAET0L,QAAQ,aACNtI,WAAY,WACZ1C,QAAS,YACRb,EAAMS,YAAYC,KAAK,MAAQ,CAC9BG,QAAS,aAGbwH,QAAQ,aACN5E,WAAY,8CACZtD,MAAO,YACPoL,SAAU,WACVO,MAAO,IACN9L,EAAMS,YAAYC,KAAK,MAAQ,CAC9BoL,MAAO,KAGXC,UAAU,aACRtI,WAAY,8CACZ8H,SAAU,WACVpL,MAAO,YACP2L,MAAO,IACN9L,EAAMS,YAAYC,KAAK,MAAQ,CAC9BoL,MAAO,KAGXE,QAAQ,aACNvI,WAAY,8CACZ8H,SAAU,WACVpL,MAAO,YACP8L,KAAM,IACLjM,EAAMS,YAAYC,KAAK,MAAQ,CAC9BuL,KAAM,SAgTGC,GA3SK,SAAC,GAAgF,IAA9EC,EAA6E,EAA7EA,gBAAiBC,EAA4D,EAA5DA,SAAUC,EAAkD,EAAlDA,cAAeC,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,gBAEtElL,EAAUyB,KAFkF,EAkBvDgH,cAAnCC,EAlB0F,EAkB1FA,SAAUC,EAlBgF,EAkBhFA,aAAcC,EAlBkE,EAkBlEA,OAE1BC,EACE,CACJC,SAAU,CACRjE,OAAO,EACPkE,QAAS,0BAEXC,QAAS,CACPnE,MAAO,SACPkE,QAAS,oBAEXE,UAAW,CACTpE,MAAO,EACPkE,QAAS,+BAEX/D,UAAW,CACTH,MAAO,GACPkE,QAAS,qCAhBTF,EAmBG,CACLC,SAAU,CACRjE,OAAO,EACPkE,QAAS,0BAEXC,QAAS,CACPnE,MAAO,SACPkE,QAAS,qBAEXE,UAAW,CACTpE,MAAO,GACPkE,QAAS,gCAEX/D,UAAW,CACTH,MAAO,GACPkE,QAAS,qCAlCTF,EAqCG,CACLC,SAAU,CACRjE,OAAO,EACPkE,QAAS,0BAEXC,QAAS,CACPnE,MAAO,4CACPkE,QAAS,yBAEX/D,UAAW,CACTH,MAAO,GACPkE,QAAS,qCAhDTF,EAmDG,CACLC,SAAU,CACRjE,OAAO,EACPkE,QAAS,0BAEXC,QAAS,CACPnE,MAAO,oCACPkE,QAAS,sBA1DTF,EA6DK,CACPC,SAAU,CACRjE,OAAO,EACPkE,QAAS,0BAEXC,QAAS,CACPnE,MAAO,SACPkE,QAAS,4BAEXE,UAAW,CACTpE,MAAO,EACPkE,QAAS,+BAEX/D,UAAW,CACTH,MAAO,GACPkE,QAAS,qCA5ETF,EA+EK,CACPC,SAAU,CACRjE,OAAO,EACPkE,QAAS,0BAEXC,QAAS,CACPnE,MAAO,SACPkE,QAAS,uBAEXE,UAAW,CACTpE,MAAO,GACPkE,QAAS,iCAEX/D,UAAW,CACTH,MAAO,IACPkE,QAAS,sCAOT9G,EAAU,SAACkJ,GAA0B,IAAnBC,EAAkB,wDACxC,OAAOA,EAAQN,EAAgBK,GAAoC,KAA3BL,EAAgBK,SAA4C5B,IAA3BuB,EAAgBK,GAAuB,MAAQL,EAAgBK,IAG1I,OACE,kBAACzI,EAAA,EAAD,CAAMC,MAAI,EAAC2B,GAAI,EAAGE,GAAI,IACpB,kBAAC9B,EAAA,EAAD,CAAMC,MAAI,EAAC0B,WAAS,EAACzB,GAAI,GAAIzC,UAAWH,EAAQ+J,aAC9C,kBAAClH,EAAA,EAAD,CAAK1C,UAAWH,EAAQiK,aAEpBa,EAAgBlE,GAAK,GACrB,oCACE,kBAACyE,GAAA,EAAD,CAAKC,KAAK,QAAQnL,UAAWH,EAAQ2K,QAASpK,QAAS,kBAAM2K,EAAgBJ,EAAgBlE,MAC3F,kBAAC2E,GAAA,EAAD,OAEF,kBAACF,GAAA,EAAD,CAAKC,KAAK,QAAQnL,UAAW4K,EAAW/K,EAAQ0K,UAAY1K,EAAQgH,QAASzG,QAAS,kBAAM0K,EAAYH,EAAgBlE,MAEpHmE,EAAW,kBAACnB,GAAA,EAAD,MAAY,kBAAC4B,GAAA,EAAD,QAK/B,kBAAC3I,EAAA,EAAD,CAAK1C,UAAWH,EAAQmK,YACtB,kBAAC/C,EAAA,EAAD,CACEjH,UAAWH,EAAQ6G,OACnBQ,IAAKyD,EAAgBjE,OACrBvB,MAAO,CACLrC,gBA/IS,SAACqE,GAEtB,IADA,IAAIC,EAAO,EACFC,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,IAC9BD,EAAOD,EAAII,WAAWF,KAAOD,GAAQ,GAAKA,GAE5C,IAAII,EAAS,IACb,IAAKH,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAEtBG,IAAW,MADEJ,GAAa,EAAJC,EAAU,KACRI,SAAS,KAAKC,QAAQ,GAGhD,OAAOF,EAAS,KAoIaG,CAAe7F,EAAQ,QAAUA,EAAQ,YAG3DA,EAAQ,QAAQ8F,MAAM,KAAKjH,KAAI,SAACkH,GAAD,OAAOA,EAAE,OAE3C,wBAAI7H,UAAWH,EAAQsK,gBAAiBrI,EAAQ,SAChD,+BAAQA,EAAQ,WAElB,kBAACS,EAAA,EAAD,CAAM2B,WAAS,GACb,kBAAC3B,EAAA,EAAD,CAAMC,MAAI,EAAC0B,WAAS,EAAClE,UAAWH,EAAQwK,SACtC,kBAAC9H,EAAA,EAAD,CAAMC,MAAI,EAAC6B,GAAI,GAAID,GAAI,GAAvB,cAGA,kBAAC7B,EAAA,EAAD,CAAMC,MAAI,EAAC6B,GAAI,GAAID,GAAI,GAEnBwG,EACE,kBAAC3B,EAAA,EAAD,CACEM,WAAS,EACTJ,WAAuBC,IAAhBX,EAAOhI,KACd4I,SAAUd,EAASG,GACnB4C,aAAcxJ,EAAQ,OAAQ8I,GAC9BnK,KAAK,SAEPqB,EAAQ,QAAQ,GAEpB,kBAACwH,GAAA,EAAD,CAAgBH,OAAK,GAAEV,EAAOhI,KAAOgI,EAAOhI,KAAKmI,QAAU,OAI7DgC,GACA,kBAACrI,EAAA,EAAD,CAAMC,MAAI,EAAC0B,WAAS,EAAClE,UAAWH,EAAQwK,SACtC,kBAAC9H,EAAA,EAAD,CAAMC,MAAI,EAAC6B,GAAI,GAAID,GAAI,GAAvB,UAGA,kBAAC7B,EAAA,EAAD,CAAMC,MAAI,EAAC6B,GAAI,GAAID,GAAI,GAEnBwG,EACE,kBAAC3B,EAAA,EAAD,CACEM,WAAS,EACTtE,UAAW2F,EACXW,kBAAmBX,EACnBzB,WAAwBC,IAAjBX,EAAO+C,MACdnC,SAAUd,EAASG,GACnB4C,aAAcxJ,EAAQ,QAAS8I,GAC/BnK,KAAK,UAEPqB,EAAQ,SAAS,GAErB,kBAACwH,GAAA,EAAD,CAAgBH,OAAK,GAAEV,EAAO+C,MAAQ/C,EAAO+C,MAAM5C,QAAU,OAInE,kBAACrG,EAAA,EAAD,CAAMC,MAAI,EAAC0B,WAAS,EAAClE,UAAWH,EAAQwK,SACtC,kBAAC9H,EAAA,EAAD,CAAMC,MAAI,EAAC6B,GAAI,GAAID,GAAI,GAAvB,UAGA,kBAAC7B,EAAA,EAAD,CAAMC,MAAI,EAAC6B,GAAI,GAAID,GAAI,GAEnBwG,EACE,kBAAC3B,EAAA,EAAD,CACEM,WAAS,EACTtE,UAAW2F,EACXW,kBAAmBX,EACnBzB,WAAwBC,IAAjBX,EAAO9B,MACd0C,SAAUd,EAASG,GACnB4C,aAAcxJ,EAAQ,QAAS8I,GAC/BnK,KAAK,UAEPqB,EAAQ,SAAS,GAErB,kBAACwH,GAAA,EAAD,CAAgBH,OAAK,GAAEV,EAAO9B,MAAQ8B,EAAO9B,MAAMiC,QAAU,OAGjE,kBAACrG,EAAA,EAAD,CAAMC,MAAI,EAAC0B,WAAS,EAAClE,UAAWH,EAAQwK,SACtC,kBAAC9H,EAAA,EAAD,CAAMC,MAAI,EAAC6B,GAAI,GAAID,GAAI,GAAvB,UAGA,kBAAC7B,EAAA,EAAD,CAAMC,MAAI,EAAC6B,GAAI,GAAID,GAAI,GAEnBwG,EACE,kBAAC3B,EAAA,EAAD,CACEM,WAAS,EACTtE,UAAW2F,EACXW,kBAAmBX,EACnBzB,WAAwBC,IAAjBX,EAAOgD,MACdpC,SAAUd,EAASG,GACnB4C,aAAcxJ,EAAQ,QAAS8I,GAC/BnK,KAAK,UAEPqB,EAAQ,SAAS,GAErB,kBAACwH,GAAA,EAAD,CAAgBH,OAAK,GAAEV,EAAOgD,MAAQhD,EAAOgD,MAAM7C,QAAU,OAGjE,kBAACrG,EAAA,EAAD,CAAMC,MAAI,EAAC0B,WAAS,EAAClE,UAAWH,EAAQwK,SACtC,kBAAC9H,EAAA,EAAD,CAAMC,MAAI,EAAC6B,GAAI,GAAID,GAAI,GAAvB,YAGA,kBAAC7B,EAAA,EAAD,CAAMC,MAAI,EAAC6B,GAAI,GAAID,GAAI,GAEnBwG,EACE,kBAAC3B,EAAA,EAAD,CACEM,WAAS,EACTtE,UAAW2F,EACXW,kBAAmBX,EACnBzB,WAA0BC,IAAnBX,EAAOiD,QACdrC,SAAUd,EAASG,GACnB4C,aAAcxJ,EAAQ,UAAW8I,GACjCnK,KAAK,YAEPqB,EAAQ,WAAW,GAEvB,kBAACwH,GAAA,EAAD,CAAgBH,OAAK,GAAEV,EAAOiD,QAAUjD,EAAOiD,QAAQ9C,QAAU,OAGrE,kBAACrG,EAAA,EAAD,CAAMC,MAAI,EAAC0B,WAAS,EAAClE,UAAWH,EAAQwK,SACtC,kBAAC9H,EAAA,EAAD,CAAMC,MAAI,EAAC6B,GAAI,GAAID,GAAI,GAAvB,YAGA,kBAAC7B,EAAA,EAAD,CAAMC,MAAI,EAAC6B,GAAI,GAAID,GAAI,GAEnBwG,EACE,kBAAC3B,EAAA,EAAD,CACEM,WAAS,EACTtE,UAAW2F,EACXW,kBAAmBX,EACnBzB,WAA0BC,IAAnBX,EAAOkD,QACdtC,SAAUd,EAASG,GACnB4C,aAAcxJ,EAAQ,UAAW8I,GACjCnK,KAAK,YAEPqB,EAAQ,WAAW,GAEvB,kBAACwH,GAAA,EAAD,CAAgBH,OAAK,GAAEV,EAAOkD,QAAUlD,EAAOkD,QAAQ/C,QAAU,OAInEgC,GACA,kBAACrI,EAAA,EAAD,CAAMC,MAAI,EAAC0B,WAAS,EAACsF,QAAQ,UAC3B,kBAAC0B,GAAA,EAAD,CAAKnL,QAAQ,WAAWC,UAAWH,EAAQkI,QAAS3H,QAASoI,GAvK1D,SAACQ,GAAW6B,EAAc7B,OAwK3B,kBAAClC,EAAA,EAAD,CAAO9G,UAAWH,EAAQ6J,eAD5B,cC/UDkC,GA3CS,SAAC,GAAiK,IAA/JC,EAA8J,EAA9JA,SAAUlB,EAAoJ,EAApJA,gBAAiBtE,EAAmI,EAAnIA,cAAeyE,EAAoH,EAApHA,YAAagB,EAAuG,EAAvGA,UAAWjB,EAA4F,EAA5FA,cAAekB,EAA6E,EAA7EA,SAAU3D,EAAmE,EAAnEA,YAAa5B,EAAsD,EAAtDA,aAAcuE,EAAwC,EAAxCA,gBAAiB1C,EAAuB,EAAvBA,iBAEhK,OACE,oCAEIwD,EAASlL,KAAI,SAACiF,GACZ,OACE,kBAAC,IAAMoG,SAAP,CAAgBhL,IAAK4E,EAAQa,IAC3B,kBAAC,EAAD,CACEb,QAASA,EACTU,OAAQV,EAAQa,KAAOkE,EAAgBlE,GACvCJ,cAAeA,EACf+B,YAAaA,EACb5B,aAAcA,IAGdZ,EAAQa,KAAOkE,EAAgBlE,IAC/B,kBAAC9E,EAAA,EAAD,CAAQsK,MAAI,GACV,kBAAC,GAAD,CACEtB,gBAAiB/E,EACjBgF,SAAUkB,EACVhB,YAAaA,EACbD,cAAeA,EACfE,gBAAiBA,SAU7BgB,GACA,kBAAC,GAAD,CACE3D,YAAaA,EACbC,iBAAkBA,MCpCtB/G,GAAW/C,aAAW,SAAAC,GAAK,MAAK,CACpC0N,WAAY,CACVpK,QAAS,OACTuB,eAAgB,SAChBtB,WAAY,SACZyB,OAAQ,YAuCG2I,GAnCK,SAAC,GAAoN,IAAlNN,EAAiN,EAAjNA,SAAUlB,EAAuM,EAAvMA,gBAAiBtE,EAAsL,EAAtLA,cAAeyE,EAAuK,EAAvKA,YAAagB,EAA0J,EAA1JA,UAAWjB,EAA+I,EAA/IA,cAAezC,EAAgI,EAAhIA,YAAa2D,EAAmH,EAAnHA,SAAUvF,EAAyG,EAAzGA,aAAc1C,EAA2F,EAA3FA,aAAcwB,EAA6E,EAA7EA,YAAaE,EAAgE,EAAhEA,UAAWD,EAAqD,EAArDA,YAAawF,EAAwC,EAAxCA,gBAAiB1C,EAAuB,EAAvBA,iBAEzMxI,EAAUyB,KAEhB,OACE,kBAACiB,EAAA,EAAD,CAAMC,MAAI,EAAC2B,GAAI,EAAGE,GAAI,IACpB,kBAAC,EAAD,CACEP,aAAcA,EACdwB,YAAaA,EACbE,UAAWA,EACXD,YAAaA,IAEf,kBAAC,GAAD,CACEsG,SAAUA,EACVlB,gBAAiBA,EACjBtE,cAAeA,EACfyE,YAAaA,EACbgB,UAAWA,EACXjB,cAAeA,EACfkB,SAAUA,EACV3D,YAAaA,EACb5B,aAAcA,EACduE,gBAAiBA,EACjB1C,iBAAkBA,IAGE,IAApBwD,EAASvE,QACT,wBAAItH,UAAWH,EAAQqM,YAAvB,iB,QCdJL,I,MAAW,CACb,CACE,GAAM,IACN,KAAQ,iBACR,MAAS,QACT,MAAS,oBACT,MAAS,kBACT,QAAW,gBACX,QAAW,oCAEb,CACE,GAAM,IACN,KAAQ,eACR,MAAS,mBACT,MAAS,wBACT,MAAS,eACT,QAAW,eACX,QAAW,8CAEb,CACE,GAAM,IACN,KAAQ,cACR,MAAS,iBACT,MAAS,wBACT,MAAS,GACT,QAAW,mBACX,QAAW,qDAEb,CACE,GAAM,IACN,KAAQ,gBACR,MAAS,WACT,MAAS,qBACT,MAAS,eACT,QAAW,GACX,QAAW,IAEb,CACE,GAAM,IACN,KAAQ,gBACR,MAAS,OACT,MAAS,kBACT,MAAS,GACT,QAAW,GACX,QAAW,IAEb,CACE,GAAM,IACN,KAAQ,gBACR,MAAS,aACT,MAAS,qBACT,MAAS,GACT,QAAW,GACX,QAAW,4CAEb,CACE,GAAM,IACN,KAAQ,UACR,MAAS,aACT,MAAS,sBACT,MAAS,eACT,QAAW,eACX,QAAW,IAEb,CACE,GAAM,IACN,KAAQ,aACR,MAAS,kBACT,MAAS,mBACT,MAAS,GACT,QAAW,GACX,QAAW,4CAEb,CACE,GAAM,IACN,KAAQ,cACR,MAAS,eACT,MAAS,kBACT,MAAS,eACT,QAAW,GACX,QAAW,+CAITO,G,YAEJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAWRC,mBAAqB,SAAC7F,GAAQ,IAAD,EAC2B,EAAK8F,MAAnDvD,EADmB,EACnBA,KAAM+C,EADa,EACbA,SAAUpB,EADG,EACHA,gBAAiBC,EADd,EACcA,SACnC4B,EAAcT,GAAYtF,IAAOkE,EAAgBlE,GACvD,EAAKgG,SAAS,CACZ9B,gBAAiB6B,EAAc7B,EAAkB3B,EAAK0D,MAAK,SAAA9G,GAAO,OAAIA,EAAQa,KAAOA,KACrFsF,SAAUS,EACV5B,SAAUA,GAAYnE,IAAOkE,EAAgBlE,MAlB9B,EAsBnBsE,gBAAkB,WAChB,EAAK0B,SAAS,CACZ9B,gBAAiB,GACjBC,UAAU,KAzBK,EA6BnB+B,YAAc,SAAClG,GAAQ,IAAD,EACO,EAAK8F,MAAxBvD,EADY,EACZA,KAAM4B,EADM,EACNA,SACd,EAAK6B,SAAS,CACZ7B,UAAWA,EACXD,gBAAiB3B,EAAK0D,MAAK,SAAA9G,GAAO,OAAIA,EAAQa,KAAOA,KACrDsF,UAAU,KAlCK,EAsCnBlB,cAAgB,SAAC+B,GAAoB,IAC7BjC,EAAoB,EAAK4B,MAAzB5B,gBACF9J,EAAQgL,GAASgB,WAAU,SAAAjH,GAAO,OAAIA,EAAQa,KAAOkE,EAAgBlE,MACzEoF,GAAShL,GAASiM,OAAOC,OAAO,GAAIlB,GAAShL,GAAQ+L,GACrD,EAAKH,SAAS,CACZzD,KAAM6C,GACNjB,UAAU,KA5CK,EAgDnB/G,WAAa,WACX,EAAK4I,SAAS,CACZ7B,UAAU,EACVmB,UAAU,EACVpB,gBAAiB,CAAE,GAAMkB,GAASA,GAASvE,OAAS,GAAGb,GAAK,MApD7C,EAwDnB4B,iBAAmB,WACjB,EAAKoE,SAAS,CACZV,UAAU,EACVpB,gBAAiB,MA3DF,EA+DnBvC,YAAc,SAAC4E,GAAgB,IACrBrC,EAAoB,EAAK4B,MAAzB5B,gBAEWkB,GAASoB,MAAK,SAACrH,GAAD,OAAaA,EAAQe,QAAUqG,EAAWrG,WAIzEkF,GAASqB,KAAT,eACKvC,EADL,GAEKqC,IAGL,EAAKP,SAAS,CACZzD,KAAM6C,GACNE,UAAU,EACV/H,YAAa,OA9EA,EAmFnBwC,aAAe,SAACC,GAAQ,IAChBuC,EAAS,EAAKuD,MAAdvD,KACAnI,EAAQmI,EAAK6D,WAAU,SAAAjH,GAAO,OAAIA,EAAQa,KAAOA,KACvDuC,EAAKnI,GAAO8E,SAAWqD,EAAKnI,GAAO8E,QAEnC,EAAK8G,SAAS,CACZzD,KAAMA,KAzFS,EA6FnBxD,UAAY,WAAO,IACXwD,EAAS,EAAKuD,MAAdvD,KAENA,EAAKmE,SAAQ,SAAAvH,GAAO,OAAIA,EAAQD,SAAU,KAE1C,EAAK8G,SAAS,CACZzD,KAAMA,KAnGS,EAuGnBzD,YAAc,WAAO,IACbyD,EAAS,EAAKuD,MAAdvD,KAENA,EAAKmE,SAAQ,SAAAvH,GAAO,OAAIA,EAAQD,SAAU,KAE1C,EAAK8G,SAAS,CACZzD,KAAMA,KA7GS,EAiHnBjF,cAAgB,WACd8H,GAAWA,GAASuB,QAAO,SAACxH,GAAD,OAAcA,EAAQD,WAEjD,EAAK8G,SAAS,CACZzD,KAAM6C,GACN7H,YAAa,GACb4G,UAAU,EACVmB,UAAU,EACVpB,gBAAiB,MAzHF,EA6HnB1G,cAAgB,YAAiB,IACzBS,EADwB,EAAb2I,OACX3I,MAEA4I,EAAezB,GAASuB,QAAO,SAACxH,GAAD,OAAaA,EAAQnF,KAAK8M,cAAcC,SAAS9I,EAAM6I,kBAE5F,EAAKd,SAAS,CACZzD,KAAMsE,EACNtJ,YAAaU,EACbkG,UAAU,EACVmB,UAAU,EACVpB,gBAAiB,MAvIF,EA2InB8C,OAAS,WAAO,IACN5N,EAAY,EAAKwM,MAAjBxM,QADK,EAGoD,EAAK0M,MAAhEvD,EAHO,EAGPA,KAAM2B,EAHC,EAGDA,gBAAiBC,EAHhB,EAGgBA,SAAUmB,EAH1B,EAG0BA,SAAU/H,EAHpC,EAGoCA,YAE7CsB,EAAc0D,EAAK1B,QAAU0B,EAAK0E,OAAM,SAAA9H,GAAO,OAAIA,EAAQD,WAC3D7B,EAAekF,EAAKiE,MAAK,SAAArH,GAAO,OAAIA,EAAQD,WAEhD,OACE,kBAACpD,EAAA,EAAD,CAAM2B,WAAS,EAAClE,UAAWH,EAAQ8N,cACjC,kBAAC,EAAD,MACA,kBAACpL,EAAA,EAAD,CAAM2B,WAAS,EAAC1B,MAAI,EAACC,GAAI,GAAIzC,UAAWH,EAAQ+C,cAC9C,kBAAC,EAAD,CACEiB,WAAY,EAAKA,WACjBE,cAAe,EAAKA,cACpBC,YAAaA,EACbC,cAAe,EAAKA,cACpBH,aAAcA,IAEhB,kBAAC,GAAD,CACE+H,SAAU7C,EACV2B,gBAAiBA,EACjBtE,cAAe,EAAKiG,mBACpBxB,YAAa,EAAK6B,YAClB9B,cAAe,EAAKA,cACpBiB,UAAWlB,EACXmB,SAAUA,EACV3D,YAAa,EAAKA,YAClB5B,aAAc,EAAKA,aACnBhB,UAAW,EAAKA,UAChBD,YAAa,EAAKA,YAClBD,YAAaA,EACbxB,aAAcA,EACdiH,gBAAiB,EAAKA,gBACtB1C,iBAAkB,EAAKA,mBAEzB,kBAAC1G,EAAA,EAAD,CAAQiM,QAAM,GACZ,kBAAC,GAAD,CACEjD,gBAAiB3B,EAAK0D,MAAK,SAAA9G,GAAO,OAAIA,EAAQa,KAAOkE,EAAgBlE,OAAO,GAC5EmE,SAAUA,EACVE,YAAa,EAAK6B,YAClB9B,cAAe,EAAKA,cACpBE,gBAAiB,EAAKA,sBAlLhC,EAAKwB,MAAQ,CACXvD,KAAM6C,GACNlB,gBAAiB,GACjBC,UAAU,EACVmB,UAAU,EACV/H,YAAa,IARE,E,2BAFD6J,IAAMC,WAgMXC,iBAtSA,SAAAvP,GAAK,YAAK,CACvBmP,cAAY,GACVtO,QAAS,aADC,cAETb,EAAMS,YAAYC,KAAK,MAAQ,CAC9BG,QAAS,cAHD,cAKTb,EAAMS,YAAYC,KAAK,MAAQ,CAC9BG,QAAS,SAND,GASZuD,aAAa,aACXvD,QAAS,YACRb,EAAMS,YAAYgE,KAAK,MAAQ,CAC9B5D,QAAS,WAyRA0O,CAAmB3B,IC1SnB4B,GANC,WACZ,OACI,wCCIOC,GANA,WACX,OACI,uC,UCkCFC,I,kBAEJ,WAAY7B,GAAQ,IAAD,8BACjB,4CAAMA,KAOR3K,uBAAyB,WACvB,EAAK+K,SAAS,CACZhO,OAA8B,SAAtB,EAAK8N,MAAM9N,OAAoB,QAAU,UAVlC,EAcnBmB,uBAAyB,WACvB,EAAK6M,SAAS,CACZhO,OAA8B,SAAtB,EAAK8N,MAAM9N,OAAoB,OAAS,UAhBjC,EAoBnBgP,OAAS,WAAO,IACN5N,EAAY,EAAKwM,MAAjBxM,QACApB,EAAW,EAAK8N,MAAhB9N,OACR,OACE,yBAAKuB,UAAWH,EAAQsO,MACtB,kBAACxM,EAAA,EAAD,CAAQC,MAAI,GACV,kBAACwM,GAAA,EAAD,CAAUzO,KAAiB,SAAXlB,EAAmBuB,UAAWH,EAAQwO,YAExD,kBAAC,IAAD,CAAQC,SAAS,iBACf,kBAAC,EAAD,CACE3O,KAAMlB,EACNmB,uBAAwB,EAAKA,yBAE/B,yBAAKI,UAAWC,YAAKJ,EAAQ0O,QAAoB,SAAX9P,GAAqBoB,EAAQ2O,kBACjE,kBAACC,EAAD,CACE/M,uBAAwB,EAAKA,yBAE/B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOZ,OAAK,EAACJ,KAAM,IAAKM,IAAK,SAC3B,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOF,OAAK,EAACJ,KAAM,WAAYM,IAAK,WAClC,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOF,OAAK,EAACJ,KAAM,UAAWM,IAAK,UACjC,kBAAC,GAAD,YA1CZ,EAAKuL,MAAQ,CACX9N,OAAQ,QAJO,E,2BAFIoP,IAAMC,YAyDhBC,iBA3EA,SAAAvP,GAAK,MAAK,CACvB2P,KAAM,CACJrM,QAAS,QAEXyM,QAAS,CACPzP,MAAO,QAET0P,gBAAgB,aACdzE,SAAU,UACTvL,EAAMS,YAAYC,KAAK,MAAQ,CAC9B6K,SAAU,UAGdsE,SAAU,CACRK,OAAQlQ,EAAMkQ,OAAOjQ,OAAS,MA6DnBsP,CAAmBG,I,MCxFlCS,IAASlB,OACP,kBAAC,GAAD,MACAmB,SAASC,eAAe,W","file":"static/js/main.e09bade0.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n  NavLink\r\n} from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  makeStyles,\r\n  Drawer,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from '@material-ui/core';\r\nimport {\r\n  ChevronLeft,\r\n  ChevronRight,\r\n  PermIdentity as Local,\r\n  GitHub,\r\n  Twitter,\r\n} from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  drawer: {\r\n    backgroundImage: 'linear-gradient(#fa8569, #ff4b6e)',\r\n    color: '#ffffffbf',\r\n    boxShadow: '0px 0px 7px darkgrey',\r\n  },\r\n  drawerSemi: {\r\n    width: theme.spacing(7.5) + 1,\r\n    overflow: 'hidden',\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      width: '0px'\r\n    }\r\n  },\r\n  drawerOpen: {\r\n    width: theme.spacing(20) + 1,\r\n  },\r\n  toggleBtn: {\r\n    padding: 4,\r\n    textAlign: 'right',\r\n  },\r\n  colorWhite: {\r\n    color: '#ffffffbf',\r\n  },\r\n  menu: {\r\n    paddingTop: theme.spacing(4) + 1,\r\n  },\r\n}));\r\n\r\nconst AppDrawer = ({ open, handleMiniDrawerToggle }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      className={clsx({\r\n        [classes.drawerOpen]: open === \"open\",\r\n        [classes.drawerSemi]: open === \"semi\",\r\n      })}\r\n      classes={{\r\n        paper: clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open === \"open\",\r\n          [classes.drawerSemi]: open === \"semi\",\r\n        })\r\n      }}\r\n    >\r\n      <div className={classes.toggleBtn}>\r\n        <IconButton color=\"inherit\" onClick={handleMiniDrawerToggle}>\r\n          {open === \"open\" ? <ChevronLeft /> : <ChevronRight />}\r\n        </IconButton>\r\n      </div>\r\n      <List className={classes.menu}>\r\n        {\r\n          [\r\n            { icon: <Local />, name: \"Local\", path: \"/\" },\r\n            { icon: <Twitter />, name: \"Twitter\", path: \"/twitter\" },\r\n            { icon: <GitHub />, name: \"GitHub\", path: \"/github\" }\r\n          ].map((tab, index) =>\r\n            <NavLink exact to={tab.path} key={tab.name}>\r\n              <ListItem button key={tab.name} className=\"menuItem\" >\r\n                <ListItemIcon className={classes.colorWhite}>{tab.icon}</ListItemIcon>\r\n                <ListItemText primary={tab.name} />\r\n              </ListItem>\r\n            </NavLink>\r\n          )\r\n        }\r\n      </List>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default AppDrawer;","import React from 'react';\nimport {\n  makeStyles,\n  IconButton,\n  Hidden,\n} from '@material-ui/core';\nimport {\n  Menu\n} from '@material-ui/icons';\n\nconst useStyle = makeStyles(theme => ({\n  header: {\n    minHeight: 50,\n    width: 100 + '%',\n    boxShadow: '0px 0px 5px darkgrey'\n  }\n}));\n\nconst Header = ({ handleFullDrawerToggle }) => {\n\n  const classes = useStyle();\n\n  return (\n    <header className={classes.header}>\n      <Hidden smUp>\n        <IconButton onClick={handleFullDrawerToggle}>\n          <Menu />\n        </IconButton>\n      </Hidden>\n    </header>\n  );\n};\n\nexport default Header;","import React from 'react';\nimport {\n  makeStyles,\n  Grid,\n  Box\n} from '@material-ui/core';\n\nconst useStyle = makeStyles(theme => ({\n  header: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  headerIcon: {\n    background: 'linear-gradient(#fa8569, #ff4b6e)',\n    WebkitBackgroundClip: 'text',\n    WebkitTextFillColor: 'transparent',\n    color: '#ffffffbf',\n    fontSize: 34\n  },\n  headerTitle: {\n    padding: '0px 15px'\n  }\n}));\n\nconst SceneHeader = () => {\n  const classes = useStyle();\n\n  return (\n    <Grid item md={12} className={classes.header}>\n      <Box className={`fas fa-address-book fa-flip-horizontal ${classes.headerIcon}`} />\n      <Box className={classes.headerTitle}>\n        <Box fontWeight={500} fontSize={28}>Contacts</Box>\n        <Box fontSize={12}>Welcome to FirstCRM Contact page</Box>\n      </Box>\n    </Grid>\n  );\n};\n\nexport default SceneHeader;","import React from 'react';\nimport {\n  makeStyles,\n  Grid,\n  Paper,\n  InputBase,\n  Button,\n  Hidden,\n} from '@material-ui/core';\nimport {\n  Search,\n  Delete,\n} from '@material-ui/icons';\n\nconst useStyle = makeStyles(theme => ({\n  innerSpacing: {\n    padding: '40px 50px',\n    [theme.breakpoints.only(\"xs\")]: {\n      padding: '15px 0px',\n    },\n  },\n  searchBar: {\n    display: 'flex',\n    alignItems: 'center',\n    backgroundColor: '#f1f1f1',\n    borderRadius: 50,\n    padding: '6px 16px',\n  },\n  searchBarSpacing: {\n    padding: '50px 0px',\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: '30px 0px',\n    },\n  },\n  searchInput: {\n    flex: 1,\n    fontSize: 14,\n  },\n  btnWrapper: {\n    padding: '50px 20px',\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: '30px 10px',\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      display: 'flex',\n      justifyContent: 'space-around',\n      padding: '0px 10px 30px 10px',\n    },\n  },\n  actionBtn: {\n    background: 'linear-gradient(to right, #fa8569, #ff4b6e)',\n    color: '#ffffffbf',\n    textTransform: 'none',\n    height: '100%',\n    margin: '0px 2px',\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: '0px 6px',\n      minWidth: '48px',\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      minWidth: '90px',\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      minWidth: '126px',\n    },\n  },\n}));\n\nconst ActionBar = ({ addContact, someSelected, deleteContact, searchQuery, searchContact }) => {\n  const classes = useStyle();\n\n  return (\n    <Grid container item md={12}>\n      <Grid item lg={4} md={6} sm={8} xs={12} className={classes.searchBarSpacing}>\n        <Paper elevation={0} className={classes.searchBar}>\n          <InputBase\n            className={classes.searchInput}\n            placeholder=\"Search contacts\"\n            value={searchQuery}\n            onChange={searchContact}\n            inputProps={{ maxLength: 40 }}\n          />\n          <Search />\n        </Paper>\n      </Grid>\n      <Grid item lg={4} md={6} sm={4} xs={12} className={classes.btnWrapper}>\n        <Button variant=\"contained\" className={classes.actionBtn} onClick={addContact}>\n          + <Hidden only=\"sm\">Add<Hidden smDown> Contact</Hidden></Hidden>\n        </Button>\n        <Button variant=\"contained\" className={classes.actionBtn} onClick={deleteContact} disabled={!someSelected} >\n          <Delete style={{ fontSize: 16 }} /> <Hidden only=\"sm\">Delete</Hidden>\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ActionBar;","import React from 'react';\nimport {\n  makeStyles,\n  Grid,\n  Checkbox,\n  Hidden,\n} from '@material-ui/core';\n\nconst useStyle = makeStyles(theme => ({\n  contactListHeader: {\n    backgroundColor: '#f1f1f1',\n    padding: '5px 10px',\n  }\n}));\n\nconst ContactListHeader = ({ someSelected, allSelected, deselectAll, selectAll }) => {\n  const classes = useStyle();\n\n  return (\n    <Grid container className={classes.contactListHeader}>\n      <Grid item container xs={12} style={{ alignItems: 'center' }}>\n        <Grid item md={1} xs={2} sm={2}>\n          <Checkbox\n            onClick={() => allSelected || someSelected ? deselectAll() : selectAll()}\n            color=\"primary\"\n            indeterminate={someSelected && !allSelected}\n            checked={allSelected || someSelected}\n          />\n        </Grid>\n        <Grid item md={5} xs={10} sm={9}>Name</Grid>\n        <Hidden smDown>\n          <Grid item md={6}>Email</Grid>\n        </Hidden>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ContactListHeader;","import React from 'react';\r\nimport clsx from \"clsx\";\r\nimport {\r\n  Grid,\r\n  Checkbox,\r\n  Box,\r\n  Avatar,\r\n  Button,\r\n  makeStyles,\r\n  Hidden,\r\n} from '@material-ui/core';\r\nimport {\r\n  Check,\r\n} from '@material-ui/icons';\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n  contact: {\r\n    margin: '10px 0px',\r\n    padding: '0px 10px',\r\n    '&:hover,&.active': {\r\n      backgroundColor: '#e8ecef',\r\n      cursor: 'pointer',\r\n    }\r\n  },\r\n  basicInfo: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  avatarWrapper: {\r\n    padding: '10px 10px 10px 0px',\r\n  },\r\n  contactAvatar: {\r\n    height: '50px',\r\n    width: '50px',\r\n  },\r\n  contactName: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n  },\r\n  noMargin: {\r\n    margin: 0,\r\n  },\r\n}));\r\n\r\nconst ContactListItem = ({ contact, selectContact, active, isNewContact, checkContact }) => {\r\n  const classes = useStyle();\r\n\r\n  const { id, avatar, name, email, checked } = contact;\r\n\r\n  const stringToColour = (str) => {\r\n    var hash = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n    var colour = '#';\r\n    for (i = 0; i < 3; i++) {\r\n      var value = (hash >> (i * 8)) & 0xFF;\r\n      colour += ('00' + value.toString(16)).substr(-2);\r\n    }\r\n\r\n    return colour + 'bf';\r\n  }\r\n\r\n  return (\r\n    <Grid container\r\n      alignItems=\"center\"\r\n      name=\"contactItem\"\r\n      className={clsx(classes.contact, active && 'active')}\r\n      onClick={() => selectContact(id)}\r\n    >\r\n      <Grid item md={1} xs={2} sm={2}>\r\n        {isNewContact ?\r\n          <Button type=\"submit\" className={classes.editBtn}>\r\n            <Check />\r\n          </Button> :\r\n          <Checkbox\r\n            onClick={(event) => { checkContact(id); event.stopPropagation(); }}\r\n            color=\"primary\"\r\n            checked={checked || false}\r\n          />\r\n        }\r\n      </Grid>\r\n      <Grid item md={5} xs={10} sm={9}>\r\n        <Box className={classes.basicInfo}>\r\n          <Box className={classes.avatarWrapper}>\r\n            <Avatar\r\n              src={avatar}\r\n              className={classes.contactAvatar}\r\n              style={{\r\n                backgroundColor: stringToColour(name + email)\r\n              }} >\r\n              {name.split(\" \").map((n) => n[0])}\r\n            </Avatar>\r\n          </Box>\r\n          <Box className={classes.contactName}>\r\n            <h3 className={classes.noMargin}>\r\n              {name}\r\n            </h3>\r\n            <small>\r\n              <Hidden mdUp>\r\n                {email}\r\n              </Hidden>\r\n            </small>\r\n          </Box>\r\n        </Box>\r\n      </Grid>\r\n      <Hidden smDown>\r\n        <Grid item md={6}>\r\n          <h4 className={classes.noMargin}>\r\n            {email}\r\n          </h4>\r\n        </Grid>\r\n      </Hidden>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ContactListItem;","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport clsx from \"clsx\";\nimport {\n  Grid,\n  Box,\n  Button,\n  makeStyles,\n  Hidden,\n  Input,\n  FormHelperText,\n} from '@material-ui/core';\nimport {\n  Check,\n  Close\n} from '@material-ui/icons';\n\nconst useStyle = makeStyles(theme => ({\n  contact: {\n    margin: '10px 0px',\n    padding: '18px 20px',\n    '&:hover,&.active': {\n      backgroundColor: '#e8ecef',\n      cursor: 'pointer',\n    }\n  },\n  contactName: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  noMargin: {\n    margin: 0,\n  },\n  saveBtn: {\n    background: 'linear-gradient(to right, #ffffff, #e8ecef)',\n    color: '#000000bf',\n    padding: 0,\n    margin: '0px 2px',\n    maxWidth: 30,\n    minWidth: 30,\n    maxHeight: 30,\n    minHeight: 30,\n    borderRadius: '50%',\n    boxShadow: '1px 1px 2px grey',\n  },\n  closeBtn: {\n    background: 'linear-gradient(to right, #fa8569, #ff4b6e)',\n    color: '#ffffffbf',\n    padding: 0,\n    margin: '0px 2px',\n    maxWidth: 30,\n    minWidth: 30,\n    maxHeight: 30,\n    minHeight: 30,\n    borderRadius: '50%',\n    boxShadow: '1px 1px 2px grey',\n  },\n}));\n\nconst NewContactListItem = ({ saveContact, cancelAddContact }) => {\n  const classes = useStyle();\n\n  const { register, handleSubmit, errors } = useForm();\n\n  const validations = {\n    name: {\n      required: {\n        value: true,\n        message: \"This field is required\"\n      },\n      pattern: {\n        value: /[^\\s]+/,\n        message: \"Enter valid name\"\n      },\n      minLength: {\n        value: 2,\n        message: \"Enter at least 2 characters\",\n      },\n      maxLength: {\n        value: 40,\n        message: \"Enter no more than 40 characters\",\n      },\n    },\n    email: {\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n        message: \"Enter valid email\"\n      },\n      maxLength: {\n        value: 60,\n        message: \"Enter no more than 60 characters\",\n      },\n    },\n  };\n\n  const onSave = (data) => { saveContact(data); }\n\n  return (\n    <form onSubmit={handleSubmit(onSave)}>\n      <Grid container\n        alignItems=\"center\"\n        name=\"contactItem\"\n        className={clsx(classes.contact, 'active')}\n      >\n        <Grid item xs={8} sm={8} md={5}>\n          <Box className={classes.basicInfo}>\n            <Box className={classes.contactName}>\n              <h3 className={classes.noMargin}>\n                <Input\n                  autoFocus\n                  name=\"name\"\n                  error={errors.name !== undefined ? true : false}\n                  inputRef={register(validations.name)}\n                  placeholder=\"John Doe\"\n                  onClick={(event) => event.stopPropagation()}\n                />\n                <FormHelperText error>\n                  {errors.name ? errors.name.message : ''}\n                </FormHelperText>\n              </h3>\n              <small>\n                <Hidden mdUp>\n                  <Input\n                    fullWidth\n                    style={{ fontSize: 10 }}\n                    name=\"email\"\n                    error={errors.email !== undefined ? true : false}\n                    inputRef={register(validations.email)}\n                    placeholder=\"john@gmail.com\"\n                    onClick={(event) => event.stopPropagation()}\n                  />\n                  <FormHelperText error>\n                    {errors.email ? errors.email.message : ''}\n                  </FormHelperText>\n                </Hidden>\n              </small>\n            </Box>\n          </Box>\n        </Grid>\n        <Hidden smDown>\n          <Grid item md={5}>\n            <h4 className={classes.noMargin}>\n              <Input\n                name=\"email\"\n                error={errors.email !== undefined ? true : false}\n                inputRef={register(validations.email)}\n                placeholder=\"john@gmail.com\"\n                onClick={(event) => event.stopPropagation()}\n              />\n              <FormHelperText error>\n                {errors.email ? errors.email.message : ''}\n              </FormHelperText>\n            </h4>\n          </Grid>\n        </Hidden>\n        <Grid item xs={4} md={2} container justify=\"flex-end\">\n          <Button type=\"submit\" className={classes.saveBtn}>\n            <Check />\n          </Button>\n          <Button className={classes.closeBtn} onClick={() => cancelAddContact()}>\n            <Close />\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n};\n\nexport default NewContactListItem;","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport {\n  makeStyles,\n  Grid,\n  Box,\n  Avatar,\n  Input,\n  Fab,\n  FormHelperText,\n} from '@material-ui/core';\nimport {\n  Check,\n  Edit,\n  Close,\n  ArrowBack,\n} from '@material-ui/icons';\n\nconst useStyle = makeStyles(theme => ({\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  formWrapper: {\n    paddingLeft: '60px',\n    [theme.breakpoints.down(\"md\")]: {\n      padding: '20px 0px',\n    },\n  },\n  contactForm: {\n    backgroundColor: '#f1f1f1',\n    padding: '30px 40px',\n    width: '100%',\n    position: 'relative',\n    [theme.breakpoints.only(\"sm\")]: {\n      padding: '30px',\n    },\n    [theme.breakpoints.only(\"xs\")]: {\n      padding: '20px',\n    },\n  },\n  formHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    textAlign: 'center',\n    flexDirection: 'column',\n    paddingBottom: 40,\n    [theme.breakpoints.only(\"xs\")]: {\n      paddingBottom: 20,\n    }\n  },\n  avatar: {\n    height: '80px',\n    width: '80px',\n  },\n  fallbackText: {\n    fontSize: 28,\n  },\n  noBottomMargin: {\n    marginBottom: 0,\n  },\n  saveBtn: {\n    background: 'linear-gradient(to right, #fa8569, #ff4b6e)',\n    color: '#ffffffbf',\n  },\n  formRow: {\n    alignItems: \"baseline\",\n    padding: '10px 0px',\n    [theme.breakpoints.only(\"xs\")]: {\n      padding: '10px 0px',\n    }\n  },\n  editBtn: {\n    background: 'linear-gradient(to right, #fa8569, #ff4b6e)',\n    color: '#ffffffbf',\n    position: 'absolute',\n    right: 30,\n    [theme.breakpoints.only(\"xs\")]: {\n      right: 20,\n    }\n  },\n  cancelBtn: {\n    background: 'linear-gradient(to right, #ffffff, #e8ecef)',\n    position: 'absolute',\n    color: '#000000fb',\n    right: 30,\n    [theme.breakpoints.only(\"xs\")]: {\n      right: 20,\n    }\n  },\n  backBtn: {\n    background: 'linear-gradient(to right, #ffffff, #e8ecef)',\n    position: 'absolute',\n    color: '#000000fb',\n    left: 30,\n    [theme.breakpoints.only(\"xs\")]: {\n      left: 20,\n    }\n  }\n}));\n\nconst ContactForm = ({ selectedContact, editable, updateContact, editContact, deselectContact }) => {\n\n  const classes = useStyle();\n\n  const stringToColour = (str) => {\n    var hash = 0;\n    for (var i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    var colour = '#';\n    for (i = 0; i < 3; i++) {\n      var value = (hash >> (i * 8)) & 0xFF;\n      colour += ('00' + value.toString(16)).substr(-2);\n    }\n\n    return colour + 'bf';\n  }\n\n  const { register, handleSubmit, errors } = useForm();\n\n  const validations = {\n    name: {\n      required: {\n        value: true,\n        message: \"This field is required\"\n      },\n      pattern: {\n        value: /[^\\s]+/,\n        message: \"Enter valid name\"\n      },\n      minLength: {\n        value: 2,\n        message: \"Enter at least 2 characters\",\n      },\n      maxLength: {\n        value: 40,\n        message: \"Enter no more than 40 characters\",\n      },\n    },\n    about: {\n      required: {\n        value: true,\n        message: \"This field is required\"\n      },\n      pattern: {\n        value: /[^\\s]+/,\n        message: \"Enter valid about\"\n      },\n      minLength: {\n        value: 10,\n        message: \"Enter at least 10 characters\",\n      },\n      maxLength: {\n        value: 50,\n        message: \"Enter no more than 50 characters\",\n      },\n    },\n    email: {\n      required: {\n        value: true,\n        message: \"This field is required\"\n      },\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n        message: \"Invalid email address\"\n      },\n      maxLength: {\n        value: 60,\n        message: \"Enter no more than 60 characters\",\n      },\n    },\n    phone: {\n      required: {\n        value: true,\n        message: \"This field is required\"\n      },\n      pattern: {\n        value: /[+][(](\\d{1,5})[)][\\s](\\d{6,10})$/,\n        message: \"Enter valid phone\"\n      },\n    },\n    company: {\n      required: {\n        value: true,\n        message: \"This field is required\"\n      },\n      pattern: {\n        value: /[^\\s]+/,\n        message: \"Enter valid company name\"\n      },\n      minLength: {\n        value: 5,\n        message: \"Enter at least 5 characters\",\n      },\n      maxLength: {\n        value: 40,\n        message: \"Enter no more than 40 characters\",\n      },\n    },\n    address: {\n      required: {\n        value: true,\n        message: \"This field is required\"\n      },\n      pattern: {\n        value: /[^\\s]+/,\n        message: \"Enter valid address\"\n      },\n      minLength: {\n        value: 10,\n        message: \"Enter  at least 10 characters\",\n      },\n      maxLength: {\n        value: 100,\n        message: \"Enter no more than 100 characters\",\n      },\n    },\n  };\n\n  const onSubmit = (data) => { updateContact(data) }\n\n  const display = (field, input = false) => {\n    return input ? selectedContact[field] : selectedContact[field] === '' || selectedContact[field] === undefined ? 'N/A' : selectedContact[field];\n  };\n\n  return (\n    <Grid item lg={6} xs={12}>\n      <Grid item container md={12} className={classes.formWrapper}>\n        <Box className={classes.contactForm}>\n          {\n            selectedContact.id > 0 &&\n            <>\n              <Fab size=\"small\" className={classes.backBtn} onClick={() => deselectContact(selectedContact.id)}>\n                <ArrowBack />\n              </Fab>\n              <Fab size=\"small\" className={editable ? classes.cancelBtn : classes.editBtn} onClick={() => editContact(selectedContact.id)}>\n                {\n                  editable ? <Close /> : <Edit />\n                }\n              </Fab>\n            </>\n          }\n          <Box className={classes.formHeader}>\n            <Avatar\n              className={classes.avatar}\n              src={selectedContact.avatar}\n              style={{\n                backgroundColor: stringToColour(display(\"name\") + display(\"email\"))\n              }}\n            >\n              {display(\"name\").split(\" \").map((n) => n[0])}\n            </Avatar>\n            <h2 className={classes.noBottomMargin}>{display(\"name\")}</h2>\n            <small>{display(\"about\")}</small>\n          </Box>\n          <Grid container>\n            <Grid item container className={classes.formRow}>\n              <Grid item xs={12} sm={3}>\n                Full Name:\n              </Grid>\n              <Grid item xs={12} sm={9}>\n                {\n                  editable ?\n                    <Input\n                      fullWidth\n                      error={errors.name !== undefined}\n                      inputRef={register(validations.name)}\n                      defaultValue={display(\"name\", editable)}\n                      name=\"name\"\n                    /> :\n                    display(\"name\", false)\n                }\n                <FormHelperText error>{errors.name ? errors.name.message : ' '}</FormHelperText>\n              </Grid>\n            </Grid>\n            {\n              editable &&\n              <Grid item container className={classes.formRow}>\n                <Grid item xs={12} sm={3}>\n                  About:\n                  </Grid>\n                <Grid item xs={12} sm={9}>\n                  {\n                    editable ?\n                      <Input\n                        fullWidth\n                        disabled={!editable}\n                        disableUnderline={!editable}\n                        error={errors.about !== undefined}\n                        inputRef={register(validations.about)}\n                        defaultValue={display(\"about\", editable)}\n                        name=\"about\"\n                      /> :\n                      display(\"about\", false)\n                  }\n                  <FormHelperText error>{errors.about ? errors.about.message : ' '}</FormHelperText>\n                </Grid>\n              </Grid>\n            }\n            <Grid item container className={classes.formRow}>\n              <Grid item xs={12} sm={3}>\n                Email:\n              </Grid>\n              <Grid item xs={12} sm={9}>\n                {\n                  editable ?\n                    <Input\n                      fullWidth\n                      disabled={!editable}\n                      disableUnderline={!editable}\n                      error={errors.email !== undefined}\n                      inputRef={register(validations.email)}\n                      defaultValue={display(\"email\", editable)}\n                      name=\"email\"\n                    /> :\n                    display(\"email\", false)\n                }\n                <FormHelperText error>{errors.email ? errors.email.message : ' '}</FormHelperText>\n              </Grid>\n            </Grid>\n            <Grid item container className={classes.formRow}>\n              <Grid item xs={12} sm={3}>\n                Phone:\n              </Grid>\n              <Grid item xs={12} sm={9}>\n                {\n                  editable ?\n                    <Input\n                      fullWidth\n                      disabled={!editable}\n                      disableUnderline={!editable}\n                      error={errors.phone !== undefined}\n                      inputRef={register(validations.phone)}\n                      defaultValue={display(\"phone\", editable)}\n                      name=\"phone\"\n                    /> :\n                    display(\"phone\", false)\n                }\n                <FormHelperText error>{errors.phone ? errors.phone.message : ' '}</FormHelperText>\n              </Grid>\n            </Grid>\n            <Grid item container className={classes.formRow}>\n              <Grid item xs={12} sm={3}>\n                Company:\n              </Grid>\n              <Grid item xs={12} sm={9}>\n                {\n                  editable ?\n                    <Input\n                      fullWidth\n                      disabled={!editable}\n                      disableUnderline={!editable}\n                      error={errors.company !== undefined}\n                      inputRef={register(validations.company)}\n                      defaultValue={display(\"company\", editable)}\n                      name=\"company\"\n                    /> :\n                    display(\"company\", false)\n                }\n                <FormHelperText error>{errors.company ? errors.company.message : ' '}</FormHelperText>\n              </Grid>\n            </Grid>\n            <Grid item container className={classes.formRow}>\n              <Grid item xs={12} sm={3}>\n                Address:\n              </Grid>\n              <Grid item xs={12} sm={9}>\n                {\n                  editable ?\n                    <Input\n                      fullWidth\n                      disabled={!editable}\n                      disableUnderline={!editable}\n                      error={errors.address !== undefined}\n                      inputRef={register(validations.address)}\n                      defaultValue={display(\"address\", editable)}\n                      name=\"address\"\n                    /> :\n                    display(\"address\", false)\n                }\n                <FormHelperText error>{errors.address ? errors.address.message : ' '}</FormHelperText>\n              </Grid>\n            </Grid>\n            {\n              editable &&\n              <Grid item container justify=\"center\">\n                <Fab variant=\"extended\" className={classes.saveBtn} onClick={handleSubmit(onSubmit)}>\n                  <Check className={classes.extendedIcon} />\n                  Save\n                </Fab>\n              </Grid>\n            }\n          </Grid>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default ContactForm;","import React from 'react';\nimport {\n  Hidden,\n} from '@material-ui/core';\nimport ContactListItem from '../components/ContactListItem';\nimport NewContactListItem from '../components/NewContactListItem';\nimport ContactForm from '../components/ContactForm';\n\nconst ContactListBody = ({ contacts, selectedContact, selectContact, editContact, isEditing, updateContact, isAdding, saveContact, checkContact, deselectContact, cancelAddContact }) => {\n\n  return (\n    <>\n      {\n        contacts.map((contact) => {\n          return (\n            <React.Fragment key={contact.id}>\n              <ContactListItem\n                contact={contact}\n                active={contact.id === selectedContact.id}\n                selectContact={selectContact}\n                saveContact={saveContact}\n                checkContact={checkContact}\n              />\n              {\n                contact.id === selectedContact.id &&\n                <Hidden lgUp>\n                  <ContactForm\n                    selectedContact={contact}\n                    editable={isEditing}\n                    editContact={editContact}\n                    updateContact={updateContact}\n                    deselectContact={deselectContact}\n                  />\n                </Hidden>\n              }\n            </React.Fragment>\n          );\n        })\n      }\n\n      {\n        isAdding &&\n        <NewContactListItem\n          saveContact={saveContact}\n          cancelAddContact={cancelAddContact}\n        />\n      }\n    </>\n  );\n};\n\nexport default ContactListBody;","import React from 'react';\nimport ContactListHeader from '../components/ContactListHeader';\nimport ContactListBody from '../components/ContactListBody';\nimport {\n  Grid,\n  makeStyles,\n} from '@material-ui/core';\n\nconst useStyle = makeStyles(theme => ({\n  noContacts: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '40vh'\n  }\n}));\n\nconst ContactList = ({ contacts, selectedContact, selectContact, editContact, isEditing, updateContact, saveContact, isAdding, checkContact, someSelected, allSelected, selectAll, deselectAll, deselectContact, cancelAddContact }) => {\n\n  const classes = useStyle();\n\n  return (\n    <Grid item lg={6} xs={12}>\n      <ContactListHeader\n        someSelected={someSelected}\n        allSelected={allSelected}\n        selectAll={selectAll}\n        deselectAll={deselectAll}\n      />\n      <ContactListBody\n        contacts={contacts}\n        selectedContact={selectedContact}\n        selectContact={selectContact}\n        editContact={editContact}\n        isEditing={isEditing}\n        updateContact={updateContact}\n        isAdding={isAdding}\n        saveContact={saveContact}\n        checkContact={checkContact}\n        deselectContact={deselectContact}\n        cancelAddContact={cancelAddContact}\n      />\n      {\n        contacts.length === 0 &&\n        <h3 className={classes.noContacts}>\n          No Contacts\n        </h3>\n      }\n    </Grid>\n  );\n};\n\nexport default ContactList;","import React from 'react';\r\nimport SceneHeader from '../components/SceneHeader';\r\nimport ActionBar from '../components/ActionBar';\r\nimport ContactList from '../components/ContactList';\r\nimport ContactForm from '../components/ContactForm';\r\nimport {\r\n  Grid,\r\n  withStyles,\r\n  Hidden,\r\n} from '@material-ui/core';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\n\r\nconst styles = theme => ({\r\n  outerSpacing: {\r\n    padding: '50px 60px',\r\n    [theme.breakpoints.only(\"sm\")]: {\r\n      padding: '30px 40px',\r\n    },\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      padding: '20px',\r\n    },\r\n  },\r\n  innerSpacing: {\r\n    padding: '0px 40px',\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      padding: '0px',\r\n    },\r\n  }\r\n});\r\n\r\nlet contacts = [\r\n  {\r\n    \"id\": \"1\",\r\n    \"name\": \"Joey Tribbiani\",\r\n    \"about\": \"Actor\",\r\n    \"email\": \"joeyt@friends.com\",\r\n    \"phone\": \"+(069) 123-6547\",\r\n    \"company\": \"Actor Acadamy\",\r\n    \"address\": \"2738  Liberty Avenue, California\"\r\n  },\r\n  {\r\n    \"id\": \"2\",\r\n    \"name\": \"Rachel Green\",\r\n    \"about\": \"Fashion Designer\",\r\n    \"email\": \"greenrach@friends.com\",\r\n    \"phone\": \"718-896-1555\",\r\n    \"company\": \"Ralph Lauren\",\r\n    \"address\": \"377  Abia Martin Drive, Bethpage, New York\"\r\n  },\r\n  {\r\n    \"id\": \"3\",\r\n    \"name\": \"Ross Geller\",\r\n    \"about\": \"Paleontologist\",\r\n    \"email\": \"rossaurus@friends.com\",\r\n    \"phone\": \"\",\r\n    \"company\": \"Dianosaur Museum\",\r\n    \"address\": \"4437  Plainfield Avenue, HOPKINTON, Massachusetts\"\r\n  },\r\n  {\r\n    \"id\": \"4\",\r\n    \"name\": \"Phoebe Buffay\",\r\n    \"about\": \"Masseuse\",\r\n    \"email\": \"phebes@friends.com\",\r\n    \"phone\": \"802-232-8909\",\r\n    \"company\": \"\",\r\n    \"address\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"5\",\r\n    \"name\": \"Monica Geller\",\r\n    \"about\": \"Chef\",\r\n    \"email\": \"mon@friends.com\",\r\n    \"phone\": \"\",\r\n    \"company\": \"\",\r\n    \"address\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"6\",\r\n    \"name\": \"Chandler Bing\",\r\n    \"about\": \"Copywriter\",\r\n    \"email\": \"mrbing@friends.com\",\r\n    \"phone\": \"\",\r\n    \"company\": \"\",\r\n    \"address\": \"4709  Roosevelt Road, Dodge City, Kansas\"\r\n  },\r\n  {\r\n    \"id\": \"7\",\r\n    \"name\": \"Gunther\",\r\n    \"about\": \"Cafe Owner\",\r\n    \"email\": \"gunther@friends.com\",\r\n    \"phone\": \"330-443-9039\",\r\n    \"company\": \"Central Perk\",\r\n    \"address\": \"\"\r\n  },\r\n  {\r\n    \"id\": \"8\",\r\n    \"name\": \"Jill Green\",\r\n    \"about\": \"Rachel's sister\",\r\n    \"email\": \"jgreen@gmail.com\",\r\n    \"phone\": \"\",\r\n    \"company\": \"\",\r\n    \"address\": \"2035  Nixon Avenue, Kingsport, Tennessee\"\r\n  },\r\n  {\r\n    \"id\": \"9\",\r\n    \"name\": \"Jack Geller\",\r\n    \"about\": \"Ross' father\",\r\n    \"email\": \"jackg@gmail.com\",\r\n    \"phone\": \"908-617-5594\",\r\n    \"company\": \"\",\r\n    \"address\": \"3033  Patterson Road, SPANGLE, Washington\"\r\n  },\r\n];\r\n\r\nclass Local extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: contacts,\r\n      selectedContact: {},\r\n      editable: false,\r\n      isAdding: false,\r\n      searchQuery: '',\r\n    }\r\n  }\r\n\r\n  setSelectedContact = (id) => {\r\n    const { data, isAdding, selectedContact, editable } = this.state;\r\n    const stillAdding = isAdding && id === selectedContact.id;\r\n    this.setState({\r\n      selectedContact: stillAdding ? selectedContact : data.find(contact => contact.id === id),\r\n      isAdding: stillAdding,\r\n      editable: editable && id === selectedContact.id,\r\n    });\r\n  };\r\n\r\n  deselectContact = () => {\r\n    this.setState({\r\n      selectedContact: {},\r\n      editable: false,\r\n    });\r\n  }\r\n\r\n  setEditable = (id) => {\r\n    const { data, editable } = this.state;\r\n    this.setState({\r\n      editable: !editable,\r\n      selectedContact: data.find(contact => contact.id === id),\r\n      isAdding: false,\r\n    });\r\n  };\r\n\r\n  updateContact = (updatedContact) => {\r\n    var { selectedContact } = this.state;\r\n    var index = contacts.findIndex(contact => contact.id === selectedContact.id);\r\n    contacts[index] = Object.assign({}, contacts[index], updatedContact);\r\n    this.setState({\r\n      data: contacts,\r\n      editable: false,\r\n    });\r\n  };\r\n\r\n  addContact = () => {\r\n    this.setState({\r\n      editable: false,\r\n      isAdding: true,\r\n      selectedContact: { \"id\": contacts[contacts.length - 1].id + 1 },\r\n    });\r\n  }\r\n\r\n  cancelAddContact = () => {\r\n    this.setState({\r\n      isAdding: false,\r\n      selectedContact: {},\r\n    });\r\n  }\r\n\r\n  saveContact = (newContact) => {\r\n    const { selectedContact } = this.state;\r\n\r\n    const emailExist = contacts.some((contact) => contact.email === newContact.email);\r\n\r\n    if (emailExist) {\r\n    } else {\r\n      contacts.push({\r\n        ...selectedContact,\r\n        ...newContact,\r\n      });\r\n\r\n      this.setState({\r\n        data: contacts,\r\n        isAdding: false,\r\n        searchQuery: '',\r\n      });\r\n    }\r\n  }\r\n\r\n  checkContact = (id) => {\r\n    var { data } = this.state;\r\n    const index = data.findIndex(contact => contact.id === id);\r\n    data[index].checked = !data[index].checked;\r\n\r\n    this.setState({\r\n      data: data,\r\n    });\r\n  }\r\n\r\n  selectAll = () => {\r\n    var { data } = this.state;\r\n\r\n    data.forEach(contact => contact.checked = true);\r\n\r\n    this.setState({\r\n      data: data,\r\n    });\r\n  }\r\n\r\n  deselectAll = () => {\r\n    var { data } = this.state;\r\n\r\n    data.forEach(contact => contact.checked = false);\r\n\r\n    this.setState({\r\n      data: data,\r\n    });\r\n  }\r\n\r\n  deleteContact = () => {\r\n    contacts = contacts.filter((contact) => !contact.checked);\r\n\r\n    this.setState({\r\n      data: contacts,\r\n      searchQuery: '',\r\n      editable: false,\r\n      isAdding: false,\r\n      selectedContact: {},\r\n    });\r\n  }\r\n\r\n  searchContact = ({ target }) => {\r\n    var { value } = target;\r\n\r\n    const filteredData = contacts.filter((contact) => contact.name.toLowerCase().includes(value.toLowerCase()));\r\n\r\n    this.setState({\r\n      data: filteredData,\r\n      searchQuery: value,\r\n      editable: false,\r\n      isAdding: false,\r\n      selectedContact: {},\r\n    });\r\n  }\r\n\r\n  render = () => {\r\n    const { classes } = this.props;\r\n\r\n    let { data, selectedContact, editable, isAdding, searchQuery } = this.state;\r\n\r\n    var allSelected = data.length && data.every(contact => contact.checked);\r\n    var someSelected = data.some(contact => contact.checked);\r\n\r\n    return (\r\n      <Grid container className={classes.outerSpacing} >\r\n        <SceneHeader />\r\n        <Grid container item md={12} className={classes.innerSpacing}>\r\n          <ActionBar\r\n            addContact={this.addContact}\r\n            deleteContact={this.deleteContact}\r\n            searchQuery={searchQuery}\r\n            searchContact={this.searchContact}\r\n            someSelected={someSelected}\r\n          />\r\n          <ContactList\r\n            contacts={data}\r\n            selectedContact={selectedContact}\r\n            selectContact={this.setSelectedContact}\r\n            editContact={this.setEditable}\r\n            updateContact={this.updateContact}\r\n            isEditing={editable}\r\n            isAdding={isAdding}\r\n            saveContact={this.saveContact}\r\n            checkContact={this.checkContact}\r\n            selectAll={this.selectAll}\r\n            deselectAll={this.deselectAll}\r\n            allSelected={allSelected}\r\n            someSelected={someSelected}\r\n            deselectContact={this.deselectContact}\r\n            cancelAddContact={this.cancelAddContact}\r\n          />\r\n          <Hidden mdDown>\r\n            <ContactForm\r\n              selectedContact={data.find(contact => contact.id === selectedContact.id) || {}}\r\n              editable={editable}\r\n              editContact={this.setEditable}\r\n              updateContact={this.updateContact}\r\n              deselectContact={this.deselectContact}\r\n            />\r\n          </Hidden>\r\n        </Grid>\r\n      </Grid >\r\n    );\r\n  };\r\n}\r\n\r\nexport default withStyles(styles)(Local);","import React from 'react';\r\n\r\nconst Twitter = () => {\r\n    return (\r\n        <h1>Twitter</h1>\r\n    );\r\n}\r\n\r\nexport default Twitter;","import React from 'react';\r\n\r\nconst GitHub = () => {\r\n    return (\r\n        <h1>GitHub</h1>\r\n    );\r\n}\r\n\r\nexport default GitHub;","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport clsx from 'clsx';\r\nimport AppDrawer from './components/AppDrawer';\r\nimport AppHeader from './components/AppHeader';\r\nimport Local from './scenes/Local';\r\nimport Twitter from './scenes/Twitter';\r\nimport GitHub from './scenes/GitHub';\r\nimport {\r\n  withStyles,\r\n  Backdrop,\r\n  Hidden,\r\n} from '@material-ui/core';\r\n\r\nimport \"./style.scss\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  content: {\r\n    width: '100%'\r\n  },\r\n  contentPosition: {\r\n    position: \"static\",\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      position: \"fixed\",\r\n    },\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer - 1,\r\n  }\r\n});\r\n\r\nclass ContactApp extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      drawer: 'semi'\r\n    }\r\n  }\r\n\r\n  handleFullDrawerToggle = () => {\r\n    this.setState({\r\n      drawer: this.state.drawer === \"open\" ? \"close\" : \"open\"\r\n    })\r\n  }\r\n\r\n  handleMiniDrawerToggle = () => {\r\n    this.setState({\r\n      drawer: this.state.drawer === \"semi\" ? \"open\" : \"semi\"\r\n    })\r\n  }\r\n\r\n  render = () => {\r\n    const { classes } = this.props;\r\n    const { drawer } = this.state;\r\n    return (\r\n      <div className={classes.root} >\r\n        <Hidden smUp>\r\n          <Backdrop open={drawer === \"open\"} className={classes.backdrop}></Backdrop>\r\n        </Hidden>\r\n        <Router basename=\"/contact-list\">\r\n          <AppDrawer\r\n            open={drawer}\r\n            handleMiniDrawerToggle={this.handleMiniDrawerToggle}\r\n          />\r\n          <div className={clsx(classes.content, drawer === \"open\" && classes.contentPosition)}>\r\n            <AppHeader\r\n              handleFullDrawerToggle={this.handleFullDrawerToggle}\r\n            />\r\n            <Switch>\r\n              <Route exact path={\"/\"} key={\"Local\"}>\r\n                <Local />\r\n              </Route>\r\n              <Route exact path={\"/twitter\"} key={\"Twitter\"}>\r\n                <Twitter />\r\n              </Route>\r\n              <Route exact path={\"/github\"} key={\"GitHub\"}>\r\n                <GitHub />\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default withStyles(styles)(ContactApp);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ContactApp from './ContactApp';\nimport 'typeface-roboto';\n\nimport './style.scss';\n\nReactDOM.render(\n  <ContactApp />,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}